1
00:00:00,060 --> 00:00:05,370
嗯嗯嗯嗯嗯

2
00:00:10,590 --> 00:00:15,480
大家好，我们这节课程主要会为大家介绍一下科普驾校这个模块

3
00:00:17,130 --> 00:00:18,840
先做下自我介绍

4
00:00:19,020 --> 00:00:24,330
只是听看TK v的研发工程师，我这边主要负责事务相关，还有

5
00:00:24,335 --> 00:00:26,460
想想想相关的模块的开发

6
00:00:26,760 --> 00:00:31,020
这些模块的性能优化啊，我们这个课程主要会

7
00:00:31,080 --> 00:00:36,390
大家介绍一下它可以QQ 35个模块，到底是为什么要做？然后以及它到底

8
00:00:36,395 --> 00:00:40,500
是怎么样为蔡滴滴来提供高性能查询的？

9
00:00:41,130 --> 00:00:43,860
然后我们这个课程主要会分为两部分

10
00:00:44,550 --> 00:00:47,880
一部分是介绍一下下子算子下推

11
00:00:48,090 --> 00:00:53,400
一部分会是扩展学习，介绍一下后面相册模块中具体是

12
00:00:54,000 --> 00:00:58,470
怎么样去进行下计算的？也就是执行引擎模型

13
00:00:58,560 --> 00:01:00,600
先介绍一下圣旨下村

14
00:01:00,810 --> 00:01:05,040
我们会主要是两部分，一部分是为什么要有口水色色？

15
00:01:05,220 --> 00:01:09,510
一部分是我们在高考的上这个模块中已经实现了什么算法？

16
00:01:10,110 --> 00:01:13,200
那首先我们来看一下，为什么要有课本下册这个模块？

17
00:01:14,880 --> 00:01:20,190
首先，我们来假设一下，没有扣除三种情况，就是一个最认识的实践

18
00:01:20,430 --> 00:01:25,740
然后在这个图中显示的就是左边是你的这个

19
00:01:25,800 --> 00:01:31,110
定义为pp，然后中间是态度低，然后太低调，存储存是太太

20
00:01:31,560 --> 00:01:36,870
那么你的APP TV之间是通过黑客的方式来通讯，也就是

21
00:01:37,170 --> 00:01:39,540
好像这边比方说你发了条西口

22
00:01:39,750 --> 00:01:41,760
要死了，看的心

23
00:01:41,940 --> 00:01:44,580
换了一张表，然后外来个条件

24
00:01:45,360 --> 00:01:48,390
那么大家知道他QQ是一个kt存储

25
00:01:48,395 --> 00:01:49,350
所以

26
00:01:49,380 --> 00:01:50,490
傻逼逼

27
00:01:50,880 --> 00:01:56,190
他处理这条c客的时候，具体就是要向她QQ QQ发送请求，那比方说

28
00:01:57,060 --> 00:02:00,750
舅舅对这个就是这样一条西口来说

29
00:02:00,870 --> 00:02:06,180
他向她可以一会实际上会发这样的进球，也就是尝试进行一次kv 4

30
00:02:06,540 --> 00:02:11,070
也就是她比方说她尝试去从这个搭配开始

31
00:02:11,160 --> 00:02:15,600
七然后是改低，然后下好像然后是进来的

32
00:02:15,900 --> 00:02:17,430
然后从这个

33
00:02:17,550 --> 00:02:21,330
记录开始在然后比方说去，这样给你签条

34
00:02:21,900 --> 00:02:26,010
那么，他从采KTV就会捞出比方说1000条这样的数据

35
00:02:26,520 --> 00:02:31,260
然后拉回给泰迪币之后，那泰迪迪才会根据这里的无条件

36
00:02:31,265 --> 00:02:33,990
进行及过滤，然后再进行次聚合

37
00:02:34,170 --> 00:02:36,030
比方说，最后结合下来

38
00:02:36,120 --> 00:02:37,440
啊，一共有四条

39
00:02:37,530 --> 00:02:41,940
这就是一个人最传统最朴素的方式就是

40
00:02:42,030 --> 00:02:45,870
啊，全球的git v接口，这个工作流程是什么样子？

41
00:02:46,890 --> 00:02:49,560
但是这样一个流程，其实会有一些问题

42
00:02:49,740 --> 00:02:50,910
我们先来看一下

43
00:02:51,510 --> 00:02:53,430
一个问题就是

44
00:02:53,910 --> 00:02:57,870
大家可以看到，在kdb CK之间，因为

45
00:02:58,050 --> 00:03:00,330
把传输的都是天天数据

46
00:03:00,510 --> 00:03:01,260
啊？

47
00:03:01,410 --> 00:03:04,320
可以看到，以这个开始纹理这样一条西口

48
00:03:04,350 --> 00:03:07,860
那你的业务层其实只需要一个看的四

49
00:03:07,890 --> 00:03:12,840
知道看的结果是四就行，但是太BB其实对象太KB这边

50
00:03:12,845 --> 00:03:14,640
到非常非常多的性质

51
00:03:15,000 --> 00:03:18,540
那比方说，这个表演伊万好，那么就会拉出一万个kt

52
00:03:18,630 --> 00:03:20,580
并且比方说这

53
00:03:21,240 --> 00:03:24,480
一万行中每一行她比方说都有100例

54
00:03:24,570 --> 00:03:26,310
那么就是10000×100

55
00:03:26,400 --> 00:03:27,540
这样的数据量

56
00:03:27,630 --> 00:03:30,300
然后从才可以约到出来，然后一个菜滴滴

57
00:03:30,720 --> 00:03:36,030
所以在这样一个从skt与kdb之间的通讯来说

58
00:03:36,450 --> 00:03:41,760
他有非常大的序列化与反序列化的开销，就是跳开于他的数据大，所以

59
00:03:41,765 --> 00:03:47,070
出来之后要先去的话，然后去电话之后我才能进行网络传输，然后再传给他

60
00:03:47,075 --> 00:03:47,700
逼逼

61
00:03:47,820 --> 00:03:50,790
看看第一批拿到之后还要再进行一次反去的话

62
00:03:51,030 --> 00:03:52,830
这个开销是非常贵的

63
00:03:53,010 --> 00:03:56,400
然后当然还有网络传输，自己本身所需要的开销

64
00:03:58,050 --> 00:03:59,010
所以

65
00:03:59,250 --> 00:04:01,380
如果太低，并与KTV之间

66
00:04:01,440 --> 00:04:06,750
这样一个老手机的模型，这个这个完全捞的就是偏低的话那么一个

67
00:04:06,755 --> 00:04:09,480
问题就是他的全是开销是非常大

68
00:04:11,880 --> 00:04:16,050
另外，有个比较关键的问题就是在这样一个

69
00:04:16,350 --> 00:04:20,760
处置的模型，下面skt的机器的机器又得不到很好的利用

70
00:04:21,420 --> 00:04:26,520
比方说，嗯，如图所示，人家是我们刚才的这样一个大的数据

71
00:04:26,640 --> 00:04:28,410
那泰迪的本身

72
00:04:28,590 --> 00:04:32,610
它是需要处理场kv所发来的一堆的kt

73
00:04:32,700 --> 00:04:38,010
然后进行一次表达式计算，从而知道到底是根据什么条件去

74
00:04:38,015 --> 00:04:38,670
功率

75
00:04:38,790 --> 00:04:42,240
然后再进行词聚合，这是泰迪必须要做的事情

76
00:04:42,420 --> 00:04:47,040
但是她可以一本身他她需要做的计算很简单，它就是简单的

77
00:04:47,310 --> 00:04:51,660
把这样一个批发的从市场上捞出来就可以了

78
00:04:51,720 --> 00:04:57,000
所以太kai的CPU是穿上显得，但是太BB b的CPU是非常忙的

79
00:04:58,440 --> 00:04:59,280
啊？

80
00:04:59,610 --> 00:05:04,920
另外还要记住我们的这个我们的数据库是分布式的，所以并不是太低了

81
00:05:04,925 --> 00:05:06,210
就一个菜，Q币

82
00:05:06,330 --> 00:05:10,380
而是一个采集，避讳对多个才可以，他弟弟会

83
00:05:10,385 --> 00:05:11,580
像所有的

84
00:05:11,820 --> 00:05:17,130
啊，这个数据可能存在的太平洋上去老手机，然后所有的数据全都会去给一个

85
00:05:17,135 --> 00:05:18,240
他BB去

86
00:05:18,660 --> 00:05:20,160
去睡，所以

87
00:05:20,580 --> 00:05:22,470
就这三个泰迪币来说

88
00:05:22,475 --> 00:05:25,920
他他的复杂就更大了然后每个差距都很闲

89
00:05:26,250 --> 00:05:27,240
所以

90
00:05:27,390 --> 00:05:32,700
这个第二个问题就是，嗯，如果我们只是简单的老手机的话，那每个他可以她去

91
00:05:32,705 --> 00:05:35,190
就是CPU，就占用率很低

92
00:05:35,340 --> 00:05:40,650
然后他只是还有可能比较高，但是对他弟弟来说，他自己需要出一个

93
00:05:40,655 --> 00:05:41,940
复杂就非常高

94
00:05:43,470 --> 00:05:46,080
啊，所以怎么解决这个问题呢我们？

95
00:05:46,740 --> 00:05:48,630
主要的解决思路就是

96
00:05:48,720 --> 00:05:54,030
既然泰迪没有这么多计算，那么完全可以将一部分的计算任务去交给她KB来算

97
00:05:54,035 --> 00:05:59,340
然后她可以出来，将上完之后的结果呢？告诉给他递一从而减轻态度

98
00:05:59,345 --> 00:06:00,300
鸡鸡的肉

99
00:06:01,890 --> 00:06:06,840
所以在他QQ中，负责这部分计算的模块就叫做轲轲sea s

100
00:06:06,960 --> 00:06:08,580
那这样一个

101
00:06:08,820 --> 00:06:11,760
将太低，比一部分计算来

102
00:06:11,820 --> 00:06:15,600
放在PPT上执行的这样一个过程，也叫做掸子下推

103
00:06:18,450 --> 00:06:23,760
接下来我们来看一下，在寇准销售模块上，到底能实现什么样的算子？或者是

104
00:06:23,765 --> 00:06:25,920
说已经下载下来的算子是什么？

105
00:06:26,430 --> 00:06:28,440
首先我们来看一下最底层的算法

106
00:06:30,840 --> 00:06:36,150
这里主要会有两个扇子，一个扇子就TOT螺丝盖，一个扇子胶，应该是盖的螺丝盖的一

107
00:06:36,155 --> 00:06:39,930
就是这个扇子本身她要执行的功能是

108
00:06:40,230 --> 00:06:44,880
我去指定一个范围，然后我去根据这个范围去扫数据表

109
00:06:44,910 --> 00:06:45,660
并且

110
00:06:45,960 --> 00:06:49,020
我还能指定是哪一部分烈士，我所需要的

111
00:06:49,110 --> 00:06:51,210
对于需要的这个，我就不返回了

112
00:06:51,215 --> 00:06:53,670
就是可以根据指定的范围

113
00:06:53,820 --> 00:06:57,480
去扫一下表，并且过滤及反回一部分的点

114
00:06:57,750 --> 00:06:59,580
比方说，这样一条是一口

115
00:07:00,210 --> 00:07:02,250
这个赛快乐，知道吗？

116
00:07:02,400 --> 00:07:07,710
七这张表那我们只需要知道可冷，这个点那比方说t质量比较有160

117
00:07:07,715 --> 00:07:10,320
最终也只会反复讨论这个月的数据

118
00:07:10,500 --> 00:07:12,480
这样的话就大大减少了

119
00:07:12,780 --> 00:07:14,040
权术的开销

120
00:07:15,060 --> 00:07:17,700
那只有三角函数，我们还会有少，所以

121
00:07:18,030 --> 00:07:23,340
这样一个需求，所以还会有个应该是盖那就是根据直径的范围之内，所以

122
00:07:23,550 --> 00:07:25,680
并且也会过滤一部分列返回

123
00:07:26,100 --> 00:07:31,410
比方说我们去啊，根据索引列大于五，这个条件去撒，那么就是说

124
00:07:31,415 --> 00:07:32,040
我们

125
00:07:32,045 --> 00:07:33,510
所以我开始去撒

126
00:07:33,660 --> 00:07:38,970
那么，扫完之后，我们只需要知道它的传媒体力，那么我们就只有回传，没有就不传就可以

127
00:07:42,540 --> 00:07:46,590
接下来我们来说一下，在这两个算式之上，它还支持哪些算子？

128
00:07:46,620 --> 00:07:51,270
比方说，我们这边扣分三次支持的一个扇子是四大区

129
00:07:51,930 --> 00:07:56,670
所以就算是他能做的事情就是我去指定一个表达式

130
00:07:56,880 --> 00:08:00,090
啊，然后我在下层蒜子产生的行进行过滤

131
00:08:00,780 --> 00:08:03,900
比方说，我去思考思考了

132
00:08:04,110 --> 00:08:07,620
是提取张表条件是a+b=10

133
00:08:08,040 --> 00:08:08,850
啊？

134
00:08:09,420 --> 00:08:13,830
我可以与上面刚才说的这个傻表叫一个算子

135
00:08:14,070 --> 00:08:17,640
比如我们现在的这个词来选这个算子去组合

136
00:08:17,760 --> 00:08:19,620
也就是我们先发表

137
00:08:19,710 --> 00:08:21,690
发表就是让他扫

138
00:08:21,695 --> 00:08:25,290
比方说宽荣列a列，还有一列我们去撒这些列出来

139
00:08:25,530 --> 00:08:28,860
对于这些类的小说来的结果，我们再进行一次过滤

140
00:08:29,580 --> 00:08:33,900
这个过滤条件就是a+b=10，你去过滤过滤完之后

141
00:08:33,960 --> 00:08:37,080
就会使这条西口所需要的结果

142
00:08:41,790 --> 00:08:47,100
另外，我们也有人民也可以这样一个房子里面，这个扇子就很简单他就是

143
00:08:47,310 --> 00:08:52,620
是适用于像比方说里面的是这样一种随口，那就是执法官前面这个干啥？

144
00:08:55,920 --> 00:08:58,080
接下来是一些比较复杂的算法

145
00:08:58,920 --> 00:09:03,570
一个是她们他们的意思是我去根据某个表达式进行排序

146
00:09:03,575 --> 00:09:05,250
采取后再返回来，刚好

147
00:09:05,370 --> 00:09:06,780
是根据

148
00:09:07,590 --> 00:09:12,900
某个表达式排序，这个需求只会出现在一个是这个表达式是一个函数的情况

149
00:09:12,905 --> 00:09:13,920
所以加一

150
00:09:13,950 --> 00:09:15,870
那我们肯定是没法遇上，所以

151
00:09:16,440 --> 00:09:21,750
然后也有可能我们只是old BI a，但是a本身不是所有的那像这种情

152
00:09:21,755 --> 00:09:23,250
框架我们都需要

153
00:09:23,340 --> 00:09:24,270
先对

154
00:09:24,360 --> 00:09:26,730
这个表达式进行一次排序

155
00:09:27,150 --> 00:09:29,370
依据这个表达式对所有的

156
00:09:29,430 --> 00:09:31,560
好排序排完试之后

157
00:09:31,740 --> 00:09:34,800
然后比方说我们只想知道排斥之后的前十项

158
00:09:34,890 --> 00:09:38,190
怎么想这样一个场景就会得到他们这样一个算式？

159
00:09:38,790 --> 00:09:40,440
比方说，这样条西口

160
00:09:40,650 --> 00:09:43,680
四大其他的，然后427这张表

161
00:09:43,740 --> 00:09:46,080
并且排序的依据是a+1

162
00:09:46,380 --> 00:09:49,200
好像是之后我们想只想要知道前十的话

163
00:09:49,620 --> 00:09:52,110
那就会是先有一个泰伯斯盖

164
00:09:52,170 --> 00:09:56,400
那这个天不是干起来扫除所有航班好的猎人一点

165
00:09:57,060 --> 00:09:57,990
接下来

166
00:09:58,080 --> 00:09:59,880
一套反正就一个扇子

167
00:10:00,060 --> 00:10:04,560
去按照a+1这样的一个表达式棋牌室，并且它还是之后

168
00:10:04,710 --> 00:10:06,480
只要去签十行就行了

169
00:10:10,710 --> 00:10:13,800
最后是两个聚合

170
00:10:14,190 --> 00:10:17,940
这个聚合就是比方说这样一种思维课，我们去思考，看起来

171
00:10:18,420 --> 00:10:22,530
看到这是一种聚合表达式，所以像这样的基础

172
00:10:23,940 --> 00:10:26,730
考到考本三册上，这个是一种聚合算子

173
00:10:27,000 --> 00:10:29,640
去和扇子的含义就是

174
00:10:29,940 --> 00:10:35,250
首先会按照表达式进行分组，嗯，比方说，你是有工作办的，那就会是

175
00:10:35,255 --> 00:10:38,160
按照这样一个不败的这个条件是分组

176
00:10:38,165 --> 00:10:41,190
但你有可能没有指定分组，那么就是只有一个

177
00:10:41,790 --> 00:10:44,430
分组完之后，我们会在组内

178
00:10:44,435 --> 00:10:47,430
大学按照给定的这个表达式进行聚合

179
00:10:47,880 --> 00:10:50,460
就以这个借口为例，我们去

180
00:10:50,670 --> 00:10:55,980
对这个表中的踢，这样的数据，按照四个加一个分组

181
00:10:55,985 --> 00:10:59,370
分完组之后，我们想知道哪个组内有多少行数据

182
00:10:59,640 --> 00:11:04,950
那么口水下次收到的扇子就会是这样两个算子，一个是加一个是一个是

183
00:11:04,955 --> 00:11:05,700
你跟谁？

184
00:11:06,030 --> 00:11:07,710
那太高，虽然就是

185
00:11:07,715 --> 00:11:09,930
他只要少数，所以还能够过来点

186
00:11:10,110 --> 00:11:11,850
然后我哥哥是很多

187
00:11:11,880 --> 00:11:15,720
观众思考，佳怡去进行分组，然后分组完之后

188
00:11:15,870 --> 00:11:17,190
没准备的好

189
00:11:17,195 --> 00:11:21,780
但是按照考点一去治疗，那治疗出来的结果就会是

190
00:11:21,960 --> 00:11:23,490
他一共有多少啊？

191
00:11:24,240 --> 00:11:25,350
那这边

192
00:11:25,560 --> 00:11:29,760
不管是哈西聚合，还是这一句话，他们都是聚合

193
00:11:29,820 --> 00:11:31,470
而为的区别就是

194
00:11:31,620 --> 00:11:34,170
它是聚合是适用于所有情况的剧本

195
00:11:34,175 --> 00:11:38,460
然后是间距合适，只是由于底下数据是有序的情况

196
00:11:42,450 --> 00:11:47,760
另外，我们之前所展示的都是只有两个扇子进行组合情况，或者需要的

197
00:11:47,765 --> 00:11:48,630
两个算子

198
00:11:48,635 --> 00:11:52,980
实际上，科科比三塞这边可以支持各种算法组合

199
00:11:53,760 --> 00:11:56,430
啊以这个为例，比方说我们去

200
00:11:57,360 --> 00:11:59,910
想要去斯赖斯

201
00:12:00,510 --> 00:12:04,740
抗体依附上这张表，然后过滤条件是A级大于十

202
00:12:05,160 --> 00:12:07,710
像这样的系统其实

203
00:12:07,715 --> 00:12:09,930
后面加上上就会收到三个

204
00:12:09,960 --> 00:12:12,780
算子首先第一个算子是詹姆斯盖

205
00:12:12,785 --> 00:12:15,690
这个扇子就会扫除所有行的a车

206
00:12:16,050 --> 00:12:19,410
接下来我们就会誓死达成这个算法

207
00:12:19,770 --> 00:12:24,210
这个算子负责，按照a值大于十，这个条件进行过滤

208
00:12:25,260 --> 00:12:27,810
最后过滤完之后的所有啊

209
00:12:27,990 --> 00:12:33,300
再会被这个聚合算子进行聚合，也就是聚合出他们的一一个

210
00:12:33,305 --> 00:12:37,380
有多少啊，也就是抗侧移这样一个聚合表达式的结果

211
00:12:37,620 --> 00:12:38,730
就像这样

212
00:12:38,970 --> 00:12:43,380
三三个扇子组织了这种擅长的结果，那就会是这条西口

213
00:12:43,590 --> 00:12:46,110
所以应该在扣除材料上

214
00:12:46,410 --> 00:12:51,720
厕所运行出来，结果那你可以想象一下，这样一个结果，相比我们本来返回一个

215
00:12:51,725 --> 00:12:57,030
数据给泰迪低，那么就会少少得多，并且可以看到非常

216
00:12:57,035 --> 00:13:00,060
非常多的计算已经在他客运站已经完成了

217
00:13:00,090 --> 00:13:02,010
所以也可以大大减轻

218
00:13:02,250 --> 00:13:03,480
泰迪逼的

219
00:13:03,485 --> 00:13:04,230
兔子

220
00:13:07,710 --> 00:13:08,640
那

221
00:13:09,120 --> 00:13:13,920
展示了刚才这些扇子，我们来看几个思考题来看一下

222
00:13:15,090 --> 00:13:18,750
第一个问题是你刚才说的就是

223
00:13:18,780 --> 00:13:24,090
我们这个科幻角色接口是用来来进行这个

224
00:13:24,095 --> 00:13:29,400
由于接口比较慢，所以我们推出课本上的这个接口，那理论上太低的等不能

225
00:13:29,820 --> 00:13:31,500
只依靠现有的

226
00:13:31,650 --> 00:13:32,790
Kt，接口

227
00:13:33,330 --> 00:13:36,570
啊，不需要依靠课本在测接口正常工作呢？

228
00:13:41,280 --> 00:13:41,880
我不知道

229
00:13:43,650 --> 00:13:46,380
那这个结果当然是

230
00:13:47,190 --> 00:13:52,500
可以的，因为我们科普30接口，只是对可以借口进行

231
00:13:52,505 --> 00:13:57,810
有优化就是如果我们所有的数据都走田园接口，那么当然还是可以的，只是

232
00:13:57,990 --> 00:14:03,300
需要传输的数据量很大，并且它可以在CPU得到利用这种才推出课程三次

233
00:14:03,930 --> 00:14:06,630
并不是说原来的这个皮皮接口就不能用了

234
00:14:09,390 --> 00:14:14,700
好，我们来看第二个问题，那反过来呢？理论上让他弟弟能不能只依靠靠靠赛赛接口？

235
00:14:15,270 --> 00:14:18,030
而不依靠kv接口正常工作呢？

236
00:14:22,740 --> 00:14:23,340
我不知道

237
00:14:24,900 --> 00:14:30,210
但需要注意的是，口感相似，接口本身，她只是去处理读请求的那比方说你是

238
00:14:30,215 --> 00:14:35,520
是吧嗯，他QQ上需要写那个，显然QQ他的借口是

239
00:14:36,000 --> 00:14:40,470
不能支撑这些请求的，所以他们不能只依靠课本三接口

240
00:14:41,130 --> 00:14:46,440
泰迪低还是需要依赖天气接口的那项写入只是其中一种会会员

241
00:14:46,445 --> 00:14:47,520
其他各种

242
00:14:47,760 --> 00:14:50,400
场景需要KB所以

243
00:14:50,760 --> 00:14:53,790
只能说毒是可以通过课表摔下来走了

244
00:14:53,795 --> 00:14:55,530
那我们来看一个问题

245
00:14:55,770 --> 00:14:59,700
刚才说了，这个毒性球是难走靠谱的小小的那

246
00:15:00,300 --> 00:15:01,320
是否？

247
00:15:01,590 --> 00:15:06,900
对于读请求能只依赖于可可塞塞接口而不依赖于偏于接口呢？

248
00:15:10,680 --> 00:15:12,300
答案是可以的

249
00:15:12,450 --> 00:15:17,640
因为科幻销售接口，它提供了两个底层扇子，一个是铁表示该反应的覆盖

250
00:15:17,820 --> 00:15:19,230
那这两个算子

251
00:15:19,410 --> 00:15:24,720
一个可以扫描，一个可以扫，所以所以就算你的比方说高阶的一个

252
00:15:25,230 --> 00:15:26,940
一个非常复杂的表达式

253
00:15:26,970 --> 00:15:32,280
这样一个东西在qqqq上是没有实现的，那我们也可以退而求其次嘛，我们至少还是

254
00:15:32,670 --> 00:15:35,970
通过科目选择上提供的这个傻表或者少，所以

255
00:15:36,150 --> 00:15:38,250
啊，来实现这样一个需求的

256
00:15:38,790 --> 00:15:44,100
并且实际上我们也是就是虽然我们课本小姐姐可只是现在

257
00:15:44,105 --> 00:15:45,510
这个也不算算计

258
00:15:45,720 --> 00:15:47,010
但是呢，对于

259
00:15:47,015 --> 00:15:49,590
几乎乎所有的请求，我们都会找到课本角色

260
00:15:49,620 --> 00:15:51,000
并且对于那些

261
00:15:51,030 --> 00:15:54,270
高级算子没有实现的情况，他确实就会

262
00:15:54,330 --> 00:15:57,510
佛佛八克特特别是盖亚或者应该是在

263
00:15:57,810 --> 00:16:03,120
但是有一个少数的情况就是我们做过一个特殊优化，那就是对对对

264
00:16:03,125 --> 00:16:05,910
非常非常简单的这样一个请求

265
00:16:06,060 --> 00:16:07,770
我们并不会做课本30

266
00:16:07,890 --> 00:16:13,200
因为刚才大家看到了本山上上上有这么多个扇子，那么支撑这些

267
00:16:13,205 --> 00:16:18,300
算子，或者是比较复杂的方向，所以如果请请求本身非常简单

268
00:16:18,540 --> 00:16:22,620
然后走到这个框架下，那会耗时比较多，所以我们

269
00:16:23,070 --> 00:16:28,380
对于非常简单的请求，比方说检查这样一个请求，那我们就不走扣分了

270
00:16:28,385 --> 00:16:31,170
提示提提前手可以改，那这样的话

271
00:16:31,260 --> 00:16:33,990
啊延迟就会比较低性格就会比较高

272
00:16:36,810 --> 00:16:42,120
刚刚才说的是四万左QQ小小那只有四万或者QQ加上

273
00:16:45,900 --> 00:16:50,970
那当然是不是的？比方说不管是啊不对此还是对此此

274
00:16:50,975 --> 00:16:55,560
像这种只要有条件的嗯，其实都会走到客户在这里

275
00:16:55,590 --> 00:16:57,750
就是口红颜色还是可以帮助

276
00:16:57,810 --> 00:16:59,820
这个条件进行一下计算

277
00:17:03,510 --> 00:17:05,790
那我们再来看下个问题

278
00:17:06,120 --> 00:17:11,430
如果您看的程序员足够多，能不能实现所有的段子都下载到了？

279
00:17:11,435 --> 00:17:12,420
T qb

280
00:17:12,600 --> 00:17:15,990
然后泰迪比自己是不需要什么？反正计算的

281
00:17:16,590 --> 00:17:21,900
以前前面说的是，嗯，比方说有一些高级扇子没实现的情况，那还是在

282
00:17:21,905 --> 00:17:24,420
他弟弟那假设我们班有很多很多人

283
00:17:24,600 --> 00:17:26,250
然后都是可以实现的

284
00:17:26,340 --> 00:17:28,980
能不能开滴滴就不用？反正的就算了

285
00:17:33,690 --> 00:17:34,290
我知道

286
00:17:35,700 --> 00:17:37,200
答案是不能

287
00:17:37,410 --> 00:17:42,540
因为对于很多类型的请求太黑，其其实只能算出一个中间结果

288
00:17:42,690 --> 00:17:44,760
并不能算出一个最终结果

289
00:17:45,180 --> 00:17:50,460
这个借口为例，这个西口就是我们去上提这张表

290
00:17:50,550 --> 00:17:53,130
然后去按照a+100个市

291
00:17:53,430 --> 00:17:56,910
然后我们想返回排序后的前十条记录

292
00:17:56,970 --> 00:18:02,250
那我们想象一下，我们假如数据是分布在十个开KTV的

293
00:18:02,490 --> 00:18:05,550
那其实我们并不知道哪个菜可以上的数据

294
00:18:05,760 --> 00:18:07,230
还是能够？

295
00:18:07,440 --> 00:18:11,880
作为这条线可返回数据的，甚至可能每个每个太空上的数据

296
00:18:11,940 --> 00:18:14,820
都是这个最终排序后，结果的一部分

297
00:18:15,000 --> 00:18:17,970
所以我们实际上对每个菜可以用这些依次排序

298
00:18:18,060 --> 00:18:20,850
然后排序后面给他QQ，其实都会返回前十

299
00:18:21,150 --> 00:18:24,180
那泰迪逼就会对这十个太k

300
00:18:24,570 --> 00:18:29,580
返回的前十条，再进行一次，最终的计算，那才能算出一个最终结果

301
00:18:29,970 --> 00:18:31,200
所以

302
00:18:31,350 --> 00:18:36,660
对于这些类型的形成就是titan v，它其实只能得出一种中间结果其实是没法得出就是

303
00:18:36,665 --> 00:18:39,870
不用结果了，那差距也还是会需要一部分计算

304
00:18:40,050 --> 00:18:45,240
并不会存在这个泰迪b完全不是要计算这样一个情况

305
00:18:49,950 --> 00:18:55,260
下车到了kv的扇子执行逻辑何在？泰迪迪策这样一个执行

306
00:18:55,265 --> 00:18:56,850
经国际完全一样的

307
00:18:57,180 --> 00:18:59,640
如果不一样，什么情况下会不会一样的？

308
00:19:02,400 --> 00:19:07,710
我们就先不用管嗯，太黑这边没实现的东西，比方说都有这样

309
00:19:07,715 --> 00:19:08,490
我们算了

310
00:19:08,495 --> 00:19:13,800
在开开合合太低预测都是这样，那他们会不会有他们这两个扇子？

311
00:19:13,950 --> 00:19:16,020
执行的逻辑是不一样的情况

312
00:19:20,580 --> 00:19:22,770
答案是会有可能不一样的

313
00:19:22,950 --> 00:19:25,170
比方说，我们举个例子的聚合

314
00:19:25,710 --> 00:19:29,520
那我们这个CS小孩要计算出一个艾瑞智的情况

315
00:19:29,670 --> 00:19:34,380
那哪个菜可以与此事并不并不能返回给泰迪b一个IRIS？

316
00:19:34,530 --> 00:19:39,840
他返回给泰迪必须得是散步的抗体，对吧？因为如果每个泰KTV回来

317
00:19:39,845 --> 00:19:41,790
泰迪弟弟委屈那么

318
00:19:41,850 --> 00:19:46,050
壳迪迪的每个菜QQ的IM是在近期三个月出来，结果星期背的

319
00:19:46,500 --> 00:19:49,980
啊，只能通过上午的抗体将一个分子分母

320
00:19:50,070 --> 00:19:51,450
增加的情况

321
00:19:51,900 --> 00:19:54,840
啊，然后最终才能算出一个正确的it之

322
00:19:55,590 --> 00:20:00,360
那这只是举了个最简单的例子，其实还还有很多例子都是

323
00:20:00,600 --> 00:20:04,170
这个扇子，其实我们在c BB和采黑色是贵阳的

324
00:20:08,010 --> 00:20:09,780
再来看这个问题

325
00:20:09,900 --> 00:20:15,210
这样一个雨季，在咳出来销售测试纸设计应该客服代码，比方说我们是三

326
00:20:15,215 --> 00:20:17,700
一个应该是应该一个是大于十

327
00:20:18,570 --> 00:20:20,610
啊，这个所以举报他应该迟点

328
00:20:20,790 --> 00:20:23,310
我们去想要知道快乐，你这样一个点

329
00:20:23,430 --> 00:20:25,140
能不能只说进行的一个呢？

330
00:20:26,940 --> 00:20:28,710
答案是不能

331
00:20:29,010 --> 00:20:34,320
那我们来回顾一下前面课程讲过的一个内容就是嗯，泰迪b的数据在

332
00:20:34,325 --> 00:20:36,570
其实中到底是怎样存储的？

333
00:20:36,660 --> 00:20:41,970
比方说，我们这条西口这个索引中只有一个词，这样一遍，那其实在k1层

334
00:20:41,975 --> 00:20:43,350
但是，在数据里面

335
00:20:43,560 --> 00:20:46,800
也只会有你的这样一类的数据

336
00:20:47,010 --> 00:20:48,840
只要应该是在

337
00:20:48,900 --> 00:20:50,040
所以数据中

338
00:20:50,190 --> 00:20:55,500
那我们现在想要知道的是靠能力的内容，所以我们至少所以是不够的，我们还需要

339
00:20:56,190 --> 00:21:01,080
通过这个索引纸箱的专门替，或者说这就是MID或者很的

340
00:21:01,350 --> 00:21:04,350
啊，这样一个记录再去进行发表

341
00:21:04,410 --> 00:21:06,930
请价格操作，也被称为回家

342
00:21:07,110 --> 00:21:10,830
回回回表的话就是说我们首先要进行四英语词典

343
00:21:11,340 --> 00:21:16,650
知道这个一袋克斯到底对应的传统气势是哪些，然后我们再根据这些传媒体

344
00:21:17,400 --> 00:21:22,710
再进行一次泰国私盖是啥表本身，然后我们才能知道它所对应的快乐去取

345
00:21:22,715 --> 00:21:23,700
怎么样的那个？

346
00:21:28,410 --> 00:21:31,470
那刚才说了啊，我们

347
00:21:31,770 --> 00:21:37,080
对于这种需要回表的情况，我们其实是需要发两个请求的，一个是太过思念

348
00:21:37,110 --> 00:21:38,250
这是应该吃的

349
00:21:38,490 --> 00:21:39,270
那

350
00:21:39,360 --> 00:21:42,750
能不能我们将这个请求并为一个呢？

351
00:21:43,320 --> 00:21:44,250
因为

352
00:21:44,790 --> 00:21:50,100
刚才说的就是应该是这样，它可以，它是只负责扫所以的那我们能不能改一下？

353
00:21:50,105 --> 00:21:51,630
真是这样的职责

354
00:21:51,690 --> 00:21:52,980
涨价一个扇子

355
00:21:53,310 --> 00:21:58,590
他发现，比方说我所要说的这个烤冷面啊，并不在所以说他顺便来

356
00:21:58,650 --> 00:22:00,510
做一下，回表操作

357
00:22:00,570 --> 00:22:01,890
这是在她QQ内

358
00:22:02,010 --> 00:22:05,760
就把回表回来了，这样就不需要太低，一直发两个选择了

359
00:22:05,820 --> 00:22:07,170
这能不能做到呢？

360
00:22:11,880 --> 00:22:12,480
我知道

361
00:22:13,680 --> 00:22:16,320
这个答案是不能

362
00:22:16,800 --> 00:22:20,010
因为我们的数据是分布式的，比方说

363
00:22:20,400 --> 00:22:25,710
这样一个图就展示这种情况，我们这个数据从从负无穷到正无穷上是这样分布的

364
00:22:26,070 --> 00:22:27,720
然后比如说有一

365
00:22:27,810 --> 00:22:33,120
它分布在了这个五个三，这样一个人群上，然后所以二分布在了3和10，还有

366
00:22:33,125 --> 00:22:33,900
21

367
00:22:34,080 --> 00:22:37,230
后面才是这个表情，比方说是21分二

368
00:22:37,410 --> 00:22:38,070
啊？

369
00:22:38,880 --> 00:22:44,190
当我这样一个傻，一想要上这样一个所有的时候，比方说他

370
00:22:44,195 --> 00:22:45,660
给了某个才可以

371
00:22:45,720 --> 00:22:49,890
那其实它所对应的表记录并不一定在这个菜市场上

372
00:22:50,040 --> 00:22:51,840
所以他自己表现

373
00:22:51,870 --> 00:22:55,020
是不能顺便完成这样一个操作的？

374
00:22:55,770 --> 00:22:57,690
当然，要是你问这个

375
00:22:57,930 --> 00:23:03,240
表嫉妒也在这样一个态势，QQ，能不能做到那几个人是可以做的？但是我们现在并不是

376
00:23:03,245 --> 00:23:04,170
没有叫座

377
00:23:04,320 --> 00:23:05,820
大多数情况下

378
00:23:05,825 --> 00:23:10,770
本身就是要从很多数据嘛，所以这些数据一般都不会在不会在一个车上

379
00:23:15,330 --> 00:23:17,880
最后我们来讲一下

380
00:23:18,030 --> 00:23:23,340
刚才说的这样一些扇子，它到底是怎么样在QQ下线上具体进行执行执行？

381
00:23:23,345 --> 00:23:25,290
他的执行的流程是什么样子？

382
00:23:25,680 --> 00:23:30,990
因为这样一个流程，嗯，其实可以帮助于大家去理解一些问题

383
00:23:32,130 --> 00:23:34,710
所以我们这门课程也会简单地介绍一下

384
00:23:38,250 --> 00:23:42,210
首先我们来看一下刚才说的这几个扇子，它的羽翼

385
00:23:42,240 --> 00:23:44,430
比方说，这样一个借口

386
00:23:44,460 --> 00:23:49,590
它包含三个算是先是这个词概算只是少数少数，所以好的a系列

387
00:23:49,620 --> 00:23:52,050
然后去过滤，最后只取第一行

388
00:23:52,500 --> 00:23:55,200
那其实对于这样一个盘口来说

389
00:23:55,650 --> 00:23:58,200
我们扫除所有，好像是不需要的

390
00:23:58,440 --> 00:24:01,980
因为比方说我们可能第一条这个过滤下来的数据

391
00:24:02,160 --> 00:24:06,390
就已经符合这样一个条件了，并且我们最多也只需要第一行

392
00:24:06,420 --> 00:24:09,240
其实我们其实一开始也并不需要扫，所以啊！

393
00:24:09,900 --> 00:24:15,210
他也就是相对于这样的星球，那很可能只是几行就够了，完全没必要上所有的东西

394
00:24:17,250 --> 00:24:18,270
所以

395
00:24:18,330 --> 00:24:23,640
呃，或者解决这个问题，我们实际上并不会真的去撒，所以哈这每个算子也变

396
00:24:23,645 --> 00:24:25,860
并不会真的去进行降价操作

397
00:24:26,370 --> 00:24:29,790
怎么会采用一个叫火山模型的这样一个模型？

398
00:24:30,630 --> 00:24:33,600
来进行具体的计算

399
00:24:33,605 --> 00:24:36,540
那火山模型的意思就是啊

400
00:24:36,630 --> 00:24:39,810
比方说，我们刚才也同样是刚才的三个蒜子

401
00:24:39,930 --> 00:24:41,850
然后这其中每个扇子

402
00:24:41,855 --> 00:24:46,860
他实际做的是这样的事情，比方说对于太保护盖，他只会撒下一行

403
00:24:46,920 --> 00:24:48,300
然后返回给上一次

404
00:24:48,510 --> 00:24:53,820
然后对于实在铤来说他他也只会从下面的扇子去取一下

405
00:24:53,825 --> 00:24:54,840
然后过滤

406
00:24:55,170 --> 00:24:59,400
如果已经过去成功了，那么就把这一行去返回给上面

407
00:24:59,405 --> 00:25:00,420
那如果

408
00:25:00,600 --> 00:25:03,090
啊，过滤不成功，那继续提取

409
00:25:03,095 --> 00:25:06,870
直到取到某一行过于成功的位置返回给下面

410
00:25:07,530 --> 00:25:09,780
啊，对于里面的蒜子来说

411
00:25:09,960 --> 00:25:15,270
那刚才我们是连着的一，所以这个连着扇子就只需要从下面取一行就可以

412
00:25:16,020 --> 00:25:19,080
那在这样的流程下面，我们就实现了

413
00:25:19,260 --> 00:25:23,340
他她只需要扫描需要扫描那些好

414
00:25:23,550 --> 00:25:28,080
就能就能完成这样，整个选择不需要扫更多的东西

415
00:25:28,920 --> 00:25:33,570
就是30之前的这样一个佛像模型那这样一个模型

416
00:25:33,810 --> 00:25:39,120
他其实是一个非常经典的一个执行模型，它的优点是扫的数据量非常非常

417
00:25:39,810 --> 00:25:43,020
因为我们本身就是沮丧了我们所需要的数据

418
00:25:43,320 --> 00:25:48,480
因为我每次在内存之中间，因为在各个圈子之间都是只有一行

419
00:25:48,540 --> 00:25:51,180
在进行权利，所以它的内存开销也很少

420
00:25:52,260 --> 00:25:57,570
但是刚才说的，因为我们只是处理一下，所以在飞发表的情况

421
00:25:57,575 --> 00:25:59,130
假性能就比较低了

422
00:25:59,400 --> 00:26:00,060
啊？

423
00:26:00,600 --> 00:26:03,870
比方说，在十年前，20年前

424
00:26:04,050 --> 00:26:05,670
大家这个存储

425
00:26:05,790 --> 00:26:11,100
这个设备他的性格非常低，所以本身发表比方说战争的90%的时间

426
00:26:11,250 --> 00:26:13,290
所以这个火山模型非常有效

427
00:26:13,295 --> 00:26:18,300
但现在大家都有了ss那个表本身花费的时间

428
00:26:18,305 --> 00:26:19,770
就会大大的缩短

429
00:26:19,890 --> 00:26:23,910
那非常表所发出的时间其实占比较会比较多

430
00:26:24,030 --> 00:26:25,800
那在这种情况下

431
00:26:25,920 --> 00:26:28,920
如果我们还是一次性指数据

432
00:26:29,070 --> 00:26:34,110
我们想要尽可能减少，而那其实可能法并不能得到很高的性能

433
00:26:35,340 --> 00:26:40,380
所以，为了解决这个问题，我们从30开始在TT的QQ q销售中

434
00:26:40,470 --> 00:26:44,850
就有了向量化执行这样一个呃执行的模型

435
00:26:45,270 --> 00:26:49,950
这一个模型，其实相比之前火山模型唯一区别就在于前的火山模型

436
00:26:50,340 --> 00:26:52,800
他一次性就只处理一哈

437
00:26:52,860 --> 00:26:55,680
但是，在向量化模型中一次性会处理多好

438
00:26:56,010 --> 00:26:58,020
他每次对方说啥表？

439
00:26:58,025 --> 00:26:59,370
一早上来就是多少？

440
00:26:59,550 --> 00:27:04,860
然后比方说过滤，每次都是接受了多好，然后过滤的多少，并且也是返回来个

441
00:27:05,490 --> 00:27:09,030
也就是每个扇子期间都是以呃若干行

442
00:27:09,180 --> 00:27:10,740
为单位进行传递的

443
00:27:10,830 --> 00:27:13,110
这个若干行在最大的

444
00:27:13,200 --> 00:27:18,270
从树下石1024行，就是每次都是按照1024本一批去传递

445
00:27:19,920 --> 00:27:23,100
啊，然后具体到函数表达式的时候

446
00:27:23,490 --> 00:27:24,270
到了

447
00:27:24,510 --> 00:27:29,250
既然我们这边已经传递个多好嘛，然后比方说对于同样一个函数表达式

448
00:27:29,255 --> 00:27:30,300
那其实

449
00:27:30,330 --> 00:27:33,690
在每一行，他进行的计算都是一样的

450
00:27:34,170 --> 00:27:39,480
从此向函数表达式，我们也会按照列来进行计算，就比方说a

451
00:27:39,485 --> 00:27:40,620
加b+c

452
00:27:40,980 --> 00:27:44,220
就这样一个表达式，我们会先去

453
00:27:44,250 --> 00:27:45,960
回家必然后

454
00:27:46,140 --> 00:27:51,450
算出所有所有行的一家必然后再对所有很多人家必须进行加息，这一个操作

455
00:27:52,230 --> 00:27:57,540
都是相当于这里面所有的，不管是你是函数还是这个算子之间的数据

456
00:27:58,020 --> 00:28:00,060
还有下面这个聚合表达式

457
00:28:00,120 --> 00:28:04,470
也就是你做聚合的时候就不管到底是什么操作？全都是

458
00:28:04,475 --> 00:28:06,780
以银行为单位进行处理

459
00:28:07,590 --> 00:28:12,900
需要说明的是，嗯，在泰迪地之间其实也已经实现了这个

460
00:28:12,905 --> 00:28:15,720
前面说的这个第一条和第三条

461
00:28:16,110 --> 00:28:18,690
这个大约在21开始就已经

462
00:28:18,695 --> 00:28:21,990
完整时间了，但是还是给了是目前是还没有实现

463
00:28:22,020 --> 00:28:23,460
回来的时候可能会实现

464
00:28:24,390 --> 00:28:26,700
但他可以这边其实都已经做了

465
00:28:29,340 --> 00:28:33,780
那这样一个东西，它具体形象直观的表示就是这个样子

466
00:28:34,230 --> 00:28:36,300
让我们比方说对这样一条西口

467
00:28:36,660 --> 00:28:40,650
首先，这个手表就会扫出来一批东西，就是一批

468
00:28:40,890 --> 00:28:41,880
发冷汗

469
00:28:42,240 --> 00:28:43,650
一批可能吧！

470
00:28:43,860 --> 00:28:46,230
然后我们的各位条件是负大于板

471
00:28:46,320 --> 00:28:48,210
怎么会对这两批数据？

472
00:28:48,480 --> 00:28:50,790
这些一次性的比较大雨

473
00:28:50,910 --> 00:28:53,460
然后比较大一之后会大家出来一个结果

474
00:28:53,970 --> 00:28:56,790
然后对这个结果，我们再去进行管理

475
00:28:56,880 --> 00:28:59,100
过滤下来就会积累这些数据

476
00:28:59,400 --> 00:29:00,240
最后

477
00:29:00,390 --> 00:29:01,830
这也是一批数据嘛？

478
00:29:01,920 --> 00:29:07,230
这只是这个数据终结两哈，然后我们最终在的这个这一批数据再进行一次

479
00:29:07,410 --> 00:29:08,070
聚合

480
00:29:09,210 --> 00:29:12,330
所以这里面所有的单位都是以列为

481
00:29:12,360 --> 00:29:13,380
干过这行的

482
00:29:14,400 --> 00:29:19,710
那它的效果到底怎么样呢？我们可以看一下这样一个班去骂这个班去妈是鸡

483
00:29:19,715 --> 00:29:20,760
130

484
00:29:20,940 --> 00:29:26,250
按照走走不走？刚才说的这样一个下面的模型来进行比较，这个农民就是

485
00:29:26,255 --> 00:29:27,030
就不走

486
00:29:27,090 --> 00:29:28,530
刚才说的这个校园话

487
00:29:28,535 --> 00:29:31,380
也就是火山勃起，然后拜出就是走了襄阳话

488
00:29:31,620 --> 00:29:36,630
那可以看到嗯，我们这个计算越复杂其实

489
00:29:36,780 --> 00:29:40,980
走走了，校园化它所带来的这样一个提升就会越大

490
00:29:41,430 --> 00:29:46,740
当然，对于本身，如果比较简单的请求，比如说只要3 MM那，其实他的提升

491
00:29:46,745 --> 00:29:47,850
就会比较少

492
00:29:47,940 --> 00:29:48,810
因为

493
00:29:48,930 --> 00:29:54,240
像对这样的请求来说，大部分时间都放在螺丝钉上，那比方说1%

494
00:29:54,600 --> 00:29:59,910
本来就80%的时间都在这里，币币上那本来就没多少时间花在了后面后面

495
00:29:59,915 --> 00:30:03,660
处理上所以相对这种简单的请求呢？

496
00:30:03,810 --> 00:30:09,120
他的提升并不是很大，但是想让这个请求越来越复杂了，他提升就会越越来越

497
00:30:09,125 --> 00:30:09,960
没有明显

498
00:30:10,410 --> 00:30:11,880
而且可以看到的是

499
00:30:12,270 --> 00:30:17,070
因为这个肉丝BB，他的本身的价值是固定的，所以以后比方说我们

500
00:30:17,310 --> 00:30:22,620
不断地优化的这样一个绕丝db，他的占比比方说我们我们现在这样一个占比

501
00:30:22,625 --> 00:30:24,810
她比方说，这样的80%以上

502
00:30:25,200 --> 00:30:29,310
要是我们未来可以优化到只占20%，就是把这个时间缩小了

503
00:30:29,490 --> 00:30:30,330
那么

504
00:30:30,570 --> 00:30:35,880
你可想象一下，那么走了，但其实就会比不走伴，也就是走了校园话会比走左上

505
00:30:35,885 --> 00:30:36,600
模型

506
00:30:36,810 --> 00:30:39,030
那就会具有更明显的效果

507
00:30:39,240 --> 00:30:44,550
那本节课就到这边问题，然后大家如果有什么疑问的话可以登录我们的平

508
00:30:44,555 --> 00:30:49,770
看看官方网下啊，有哪个4s的屏下不看来进行答疑？

509
00:30:50,910 --> 00:30:51,780
谢谢大家

