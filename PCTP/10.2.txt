1
00:00:00,060 --> 00:00:05,370
嗯嗯嗯嗯嗯

2
00:00:05,375 --> 00:00:10,680
大家好

3
00:00:10,685 --> 00:00:15,990
啊，今天这节课我给大家带来的是kkv的单机存储引擎

4
00:00:15,995 --> 00:00:17,760
成了一个基本的介绍

5
00:00:18,120 --> 00:00:19,620
首先我先

6
00:00:20,610 --> 00:00:21,780
介绍下我自己

7
00:00:21,900 --> 00:00:27,210
啊，我是来自kkv的开发工程师，然后章我叫张博

8
00:00:29,010 --> 00:00:29,610
在

9
00:00:29,850 --> 00:00:35,160
啊，这这节课的大概的学习目标就是也了解一下，然后第一个相关的研

10
00:00:35,165 --> 00:00:37,320
你特性及主要参数

11
00:00:37,350 --> 00:00:42,660
主要为了那是为了我，我们在了解到赵弟弟的原理之后，我们

12
00:00:42,665 --> 00:00:47,970
对他kv了一些参数的调优，以及呃第八个相关的东西更

13
00:00:47,975 --> 00:00:53,280
能更游刃有余，所以啊，这节课大纲的主要就是先试讲

14
00:00:53,285 --> 00:00:58,590
等一下，然后送出去的原理和优缺点以及其他的原理，然后之后会

15
00:00:58,595 --> 00:01:00,240
想到哥斯弟弟在这

16
00:01:00,270 --> 00:01:05,580
基本的特性，以及读写数据的流程，还有些参数介绍

17
00:01:05,790 --> 00:01:11,100
最后呢，我们我会讲一下我们嗯嗯唧唧，老司机必做了一

18
00:01:11,105 --> 00:01:16,410
一个kky6分离的一个呃存储引擎叫太太我会讲

19
00:01:16,415 --> 00:01:17,880
其他的设计实现

20
00:01:18,870 --> 00:01:24,180
那我们就先来第一部分第第一部分主要是介绍一下

21
00:01:24,185 --> 00:01:25,260
爬山去

22
00:01:28,080 --> 00:01:33,390
首先呢，阿桑却是非圆圆地更新那是什么？

23
00:01:33,395 --> 00:01:38,700
什么是非，远离更新的，这是我们要先说下一个相对的概念，就是原地更新

24
00:01:38,705 --> 00:01:44,010
谁看到这张图？他是嗯左边呢是一个原地更新的

25
00:01:44,220 --> 00:01:48,330
然后右边是非远的更新，你可以看到图像，比如说

26
00:01:48,360 --> 00:01:49,200
我们

27
00:01:49,410 --> 00:01:54,720
要更新一个k1，那对于原地更新来说，那我们就会找到

28
00:01:54,725 --> 00:02:00,030
意义和存在相应的v一会去更新这个外流，而对于非

29
00:02:00,035 --> 00:02:05,340
最远的东西呢，我们就并不会去找原来的ky表示存在什么地方？

30
00:02:05,430 --> 00:02:10,740
可是我碰的恶，就是在另外一个地方会写入一个新的k和y

31
00:02:11,070 --> 00:02:16,380
而在读的时候会尽量去找新的ky 6而忽略到以前的搜索

32
00:02:16,385 --> 00:02:18,510
可能那个kt 6那

33
00:02:18,515 --> 00:02:23,820
原地更新最最最典型的一个结构就是壁加税而非原地更新呢就是我

34
00:02:23,825 --> 00:02:28,530
我们用到了然后还说对于毕加索来说这种

35
00:02:28,590 --> 00:02:33,900
的园地更新那肯定啊，他对读书有好好的，因为我们

36
00:02:33,905 --> 00:02:39,210
在读的时候只需要去找到相信的那一个地方就行了，而但是他

37
00:02:39,215 --> 00:02:43,830
相应的也会有写竞争的损失，因为你想我们要去

38
00:02:44,760 --> 00:02:50,070
在更新的时候要去找到原来的地方，然后在更新那个地方啊！

39
00:02:50,075 --> 00:02:55,380
那对于飞翔这更新的丫山翠呢？那肯定就是写友好，因为我们写出病

40
00:02:55,385 --> 00:03:00,690
需要去找到原来的地方，而直接进行一个额外的投入，而但是

41
00:03:00,780 --> 00:03:01,680
相应的

42
00:03:01,710 --> 00:03:07,020
没有淫荡，我们也会损失我们的毒性呢，而毒性呢？为什么呢？

43
00:03:07,470 --> 00:03:10,170
因为我们在读的时候有可能

44
00:03:10,320 --> 00:03:15,630
我们并不能确切地知道我们的k16到底在什么地方，最新的开发都是在

45
00:03:15,635 --> 00:03:20,940
什么地方，所以我们就需要找多个地方，所以因此就导致了血

46
00:03:20,945 --> 00:03:24,540
读性能的损耗啊，还有一个就是说

47
00:03:25,590 --> 00:03:30,900
因为AK扳手都是存在不同的地方，所以她需要一定期重新组织数据

48
00:03:30,905 --> 00:03:32,760
有优化读的性能

49
00:03:35,280 --> 00:03:40,590
那还要另外一点就是我们经常会说，然后咱们说是对SSD有好的

50
00:03:40,950 --> 00:03:46,260
那为什么说是对sto好呢？那这就要说一下

51
00:03:46,770 --> 00:03:47,730
那个

52
00:03:48,030 --> 00:03:53,190
第四二十个，一个最基本的原理啊，我们在

53
00:03:53,340 --> 00:03:55,020
闪存在蹲的时候

54
00:03:55,800 --> 00:04:01,110
它是饿，每次饿它是分为不同那个不好看，而每个不大可能又

55
00:04:01,115 --> 00:04:06,420
分为很多配置在每次写入的时候实际是呃呃写入的

56
00:04:06,425 --> 00:04:09,570
单位是以配置为单位，但是呢？

57
00:04:09,630 --> 00:04:14,940
如果我们一旦想要更新的话，那这时候我们并不能去直接

58
00:04:14,945 --> 00:04:16,380
修改原来的

59
00:04:16,500 --> 00:04:21,810
呃，那个那个有内容的配置，而是要找一块新的空闲的

60
00:04:21,815 --> 00:04:24,000
可以去那如果我们更新

61
00:04:24,990 --> 00:04:30,300
比较多的话，那其实你会看到他一旦更新了一个配置需要

62
00:04:30,305 --> 00:04:35,610
那个内容，他就要写入一个新的配置，那其实对于整个就会有很多配合

63
00:04:36,090 --> 00:04:41,400
是就是失效了，因为他被更新过了他以前的内容就是失效了，而这之后

64
00:04:41,910 --> 00:04:47,220
呃，那个SD会有一个gc的策略，他继续策略的时候他就要去回收

65
00:04:47,225 --> 00:04:51,210
这些失效的配置而回收失效的配置时候他

66
00:04:51,660 --> 00:04:56,370
查出数据并不能以配置为单位，而是要把整个步道的

67
00:04:56,375 --> 00:05:01,680
进行单位查出，所以这也会导致一些写写性能的说

68
00:05:01,685 --> 00:05:06,990
好，所以第三次因为都是耳熟的写入，并没有什么更新，所以说啊，然后他就说

69
00:05:07,380 --> 00:05:08,760
是sto好的

70
00:05:10,050 --> 00:05:12,330
那

71
00:05:13,110 --> 00:05:18,420
那接下来我们就来说一下，阿森纳的一个基本结构首先

72
00:05:18,425 --> 00:05:20,880
刚才也说了，我们是

73
00:05:21,150 --> 00:05:26,460
本来是最实际的一个基本思想就是把磁盘的读写尽量转换为顺序的读

74
00:05:26,465 --> 00:05:30,390
有些人因此会损失一部分读的性能

75
00:05:30,570 --> 00:05:35,880
然后会需要我们额外的合并一些操作，但是换来的会是有高效的

76
00:05:35,885 --> 00:05:36,900
写信呢？

77
00:05:37,260 --> 00:05:42,570
然后你可以看到这边这张图，嗯，大三岁，其实就是成一个

78
00:05:42,575 --> 00:05:47,550
树形结构，他会分为很多个系，包括每层会有

79
00:05:47,580 --> 00:05:52,890
呃，一个或者多个CON碰面，你现在看到图这张图这样的上面啊！

80
00:05:52,895 --> 00:05:57,600
它最上面不是有一个卡通的人士存在外面的这时候

81
00:05:57,660 --> 00:06:02,970
我们会把它写入我盼着这个写写进这个慢慢来，但是在这个漫威内部是

82
00:06:02,975 --> 00:06:03,900
这一个

83
00:06:03,960 --> 00:06:09,270
是因为是内存的，所以随机写入的性能会比较好，就会构建出一个有序

84
00:06:09,275 --> 00:06:09,900
特殊

85
00:06:10,410 --> 00:06:12,090
然后而随着

86
00:06:12,210 --> 00:06:17,520
慢慢的累积我他大刀达到一定的线

87
00:06:17,525 --> 00:06:22,830
成都的时候，我们就会把他往底层写，也就是枉自拍里写，然后写到下面

88
00:06:22,835 --> 00:06:28,140
从同样的下层，如果满了，它会继续往下再下重写，直到一层层

89
00:06:28,145 --> 00:06:30,270
写到最底下，然后

90
00:06:30,540 --> 00:06:32,580
而中间这个

91
00:06:32,730 --> 00:06:38,040
上一层，写到下一层的时候就会做一个噩梦的操作

92
00:06:38,045 --> 00:06:43,350
进了这是之前比较以前比较古典的一个啊，咱们说的结构

93
00:06:43,355 --> 00:06:48,330
现在的这个不是少的，实际也就是我们所说的好看的

94
00:06:49,500 --> 00:06:54,330
那之后，也就是每层的容量成倍增长，然后越下层容量越大

95
00:06:56,730 --> 00:06:58,200
那接着

96
00:06:58,380 --> 00:07:03,690
那个康派克森是怎样的？嗯，其实也盼审最基本的是有两个

97
00:07:03,695 --> 00:07:09,000
两种策略，第一种呢是拉风里面儿泡了水，还有另外一种是

98
00:07:09,240 --> 00:07:14,550
前20没我微信，那这两个最主要的区别就是说我们之前看

99
00:07:14,555 --> 00:07:19,860
知道了，它每一层会有一到多个可以破坏曾在这里浪了一门吵吵

100
00:07:19,865 --> 00:07:23,430
这些也就是每一层只有一个卡包练车

101
00:07:23,460 --> 00:07:24,510
那你可以给

102
00:07:25,500 --> 00:07:26,790
你可以看到

103
00:07:26,795 --> 00:07:29,280
哦，我们比如说我们把l1

104
00:07:29,285 --> 00:07:34,590
现在，然后依然然后令满了，我们需要把它写完，然后一去那至少你就可以看到它们

105
00:07:34,595 --> 00:07:39,720
开始的时候是选选择了上层的，这个需要往下刷的

106
00:07:39,750 --> 00:07:42,600
呃，这个航空练车，我下次能考碰见的

107
00:07:42,630 --> 00:07:47,940
做一个梦的操作，然后生成新的考验年纪，但是呢，对于第二任的来说

108
00:07:47,945 --> 00:07:53,250
他亦曾是还可以有多个CON包年的，所以这时候你会发

109
00:07:53,255 --> 00:07:57,870
发现他的，然后领满的时候，这时候并不会去

110
00:07:57,900 --> 00:08:03,210
是需要重新写，然后一文件，而是把多个，然后用文件直接

111
00:08:03,215 --> 00:08:05,370
写道额合并成一起

112
00:08:05,520 --> 00:08:09,300
一个写到下一层生成一个新的考评年级

113
00:08:11,280 --> 00:08:12,570
那个

114
00:08:14,100 --> 00:08:19,410
之后我们会看一下先，先来看一下啊，我们是怎么来评估一个？

115
00:08:19,415 --> 00:08:24,720
啊，咱们说的性能的，那我们其实是有三个指标，第一个

116
00:08:24,725 --> 00:08:30,030
这是独放大，另外写放大一些空间放大那什么是毒放大呢？

117
00:08:30,035 --> 00:08:35,340
厨房那其实嗯，就是指一次查询所需要l操作的次数

118
00:08:35,345 --> 00:08:37,590
在这里也要特特别注意下

119
00:08:37,680 --> 00:08:42,990
他他并不是说我们在读的时候要读多读少拜寺

120
00:08:42,995 --> 00:08:48,300
说说只是只是说哎呦操作的次数，因为我们都在硬盘里

121
00:08:48,305 --> 00:08:53,610
里面读的时候是依次读出一个报考，而非是拜辞拜辞的毒，对于

122
00:08:53,615 --> 00:08:58,920
写放大呢，写放大就是实际写入磁盘的数据大小比上用户需要

123
00:08:58,925 --> 00:09:00,270
按程序写入的

124
00:09:00,300 --> 00:09:05,610
数据大小那怎么说呢？嗯，实习就是因为我们在看，你可以看到之前

125
00:09:05,910 --> 00:09:07,740
我在看拍摄的时候

126
00:09:10,590 --> 00:09:15,900
在看他吃的时候，我们熬夜的这个东西，因为上一层的往下刷，他又

127
00:09:15,905 --> 00:09:17,010
背写了一遍

128
00:09:17,015 --> 00:09:21,990
所以这是会有一定的写放大也就是写了一遍的数据，之后又写了一遍

129
00:09:22,290 --> 00:09:27,600
那种时间就是说也就是我们一个纯粹从插入到而且吹到刷到

130
00:09:27,605 --> 00:09:30,510
最底层总共要背写多少遍？

131
00:09:30,515 --> 00:09:32,610
那这个其实就是解放大

132
00:09:32,880 --> 00:09:35,940
对于空间放大的空间放大就是

133
00:09:36,720 --> 00:09:42,030
就是呃存在而纯粹，所有n na数量的比上我们非重复

134
00:09:42,035 --> 00:09:47,340
做的很水的数量，也就是为医院说的数量，这样的就能够计算出空间放大

135
00:09:47,880 --> 00:09:49,500
那我们下面可以看一下

136
00:09:50,670 --> 00:09:55,980
这大概是一个简单的对，来我给你泡泡泡了几个钱？

137
00:09:55,985 --> 00:10:00,210
瑞瑞妹妹就泡了一次，做了一个啊，这几个指标的分析

138
00:10:00,270 --> 00:10:02,880
首先，t是一个

139
00:10:03,300 --> 00:10:08,610
每层存储容量增长倍数，也就是刚才我们说到了

140
00:10:08,790 --> 00:10:14,100
打算说是一个树形结构，然后每一层每一层之间，他是有一个

141
00:10:14,105 --> 00:10:15,360
我们把差距的

142
00:10:15,540 --> 00:10:20,850
容量是不断地翻倍的增长，越下层的容量越高，所以我们就会定一个

143
00:10:21,270 --> 00:10:26,580
增长的倍数，但这个倍数有可能是个定制，也有可能是每一层之间的

144
00:10:26,585 --> 00:10:31,890
这个增长倍数是不一样的，为了简便，期间我们认为每一层之间的容量

145
00:10:32,610 --> 00:10:37,920
增长的倍数是一个定制，而另外一个就是然后就是他曾说的是高那么

146
00:10:37,925 --> 00:10:38,700
没看到

147
00:10:39,930 --> 00:10:42,750
其实对于那个人来说，他的

148
00:10:42,755 --> 00:10:48,060
血放大会比较高，而对于瑞瑞，他就是血放大，会好一些

149
00:10:48,065 --> 00:10:52,410
但是相应的写好了，那顿就会有损耗，而且

150
00:10:52,770 --> 00:10:58,080
而且不好那顿就是会有一定的提高，你可以看到，就先这两个刚好是

151
00:10:58,530 --> 00:10:59,550
互相相反

152
00:10:59,760 --> 00:11:01,710
这一空间放大来说

153
00:11:02,790 --> 00:11:08,100
对于他们来说，它的空间放大，主要就是因为它主它的机会

154
00:11:08,105 --> 00:11:08,760
噗

155
00:11:09,240 --> 00:11:11,790
几乎整个阿森纳的容量

156
00:11:12,000 --> 00:11:17,310
额，100%分之89，十%，几乎都是在发那个

157
00:11:17,315 --> 00:11:22,620
容量占比都是在最底下那层，所以它的空间放大，主要是来自于最底下那个

158
00:11:23,190 --> 00:11:28,500
也就是说，最低下内存是一个唯一的key而上面所有层数都是对

159
00:11:28,505 --> 00:11:31,140
CK的一个重复一个阿对

160
00:11:31,890 --> 00:11:37,200
而泰瑞来说，也就是最底层那个他会有那一层，因为会

161
00:11:37,205 --> 00:11:42,510
有七个卡包，后面所以也就是说那睇睇个卡碰见的都是对待

162
00:11:42,515 --> 00:11:47,100
一个很碰见了一个重复，所以它的空间放大就是OT

163
00:11:47,430 --> 00:11:48,390
那我们可以

164
00:11:48,480 --> 00:11:51,060
简单的来分析一下，为什么说？

165
00:11:51,450 --> 00:11:53,370
为什么说他这个？

166
00:11:53,640 --> 00:11:56,280
写方大是一个这样的呢？

167
00:11:56,430 --> 00:11:57,600
我们可以看一下

168
00:11:58,500 --> 00:11:59,370
等我们

169
00:12:00,420 --> 00:12:01,920
首先

170
00:12:01,925 --> 00:12:07,230
首先，从那个慢慢的从慢慢为flash到对此的里面，那我们那

171
00:12:07,235 --> 00:12:12,540
那时候解方法肯定只是一，而对于然后领到，然后一到，然后二

172
00:12:12,545 --> 00:12:14,190
我们会是这样的

173
00:12:14,610 --> 00:12:19,920
你说我们现在然后零然后溢满了，那这时候我就会写到然后

174
00:12:19,925 --> 00:12:20,910
到二区

175
00:12:21,120 --> 00:12:26,430
假设下，嗷嗷空空的，那我就会先第一次写的啊，然后之后这个写，然后一

176
00:12:26,435 --> 00:12:28,230
又满了那她

177
00:12:28,440 --> 00:12:33,210
然后依旧会跟l2的那个已经写过的那些黑白的

178
00:12:33,480 --> 00:12:34,620
进行合并

179
00:12:34,625 --> 00:12:39,060
所以之前在嗷嗷嗷的那一些数据又被写了一次

180
00:12:39,120 --> 00:12:44,430
完之后然后又又满了啊然后啊那些数据又被写了一次，然后又满了他摔下来啊又

181
00:12:44,435 --> 00:12:45,420
写了一次

182
00:12:46,140 --> 00:12:47,130
直到

183
00:12:47,700 --> 00:12:52,950
那然后一一会刷多少次呢？嗷嗷嗷，才会买了，也就是它们的空间

184
00:12:53,040 --> 00:12:54,720
空间的那个增长的

185
00:12:54,780 --> 00:12:59,010
那个比例t，所以就是熬夜要写到

186
00:12:59,040 --> 00:13:04,350
写TT他们买，然后二星了，所以也就是在然后二上的那些ky

187
00:13:04,355 --> 00:13:09,660
不知道，他平均来说几乎被写了，第一次抽烟是7/2次

188
00:13:10,050 --> 00:13:12,150
所以所以也就是有了这样

189
00:13:14,100 --> 00:13:18,330
我们对于拉着她的血，每一层它都要多

190
00:13:18,335 --> 00:13:21,480
那个那个的k16，他都要背多写

191
00:13:21,510 --> 00:13:25,830
T被所以呢，有l层的，也就是TCL

192
00:13:25,835 --> 00:13:28,350
我这一天人来说，你可以看到

193
00:13:30,480 --> 00:13:31,560
之前他这样吗？

194
00:13:31,740 --> 00:13:33,480
他对于现在

195
00:13:33,540 --> 00:13:37,980
躺着升到下层的时候，下层的东西没有被重复写

196
00:13:38,190 --> 00:13:39,900
所以下所以

197
00:13:40,860 --> 00:13:43,710
所以唯一的次数饿，所以唯一的

198
00:13:43,715 --> 00:13:49,020
洗发大的地方，也就是说它然后就醒了，然后一次又一次解放大，然后

199
00:13:49,025 --> 00:13:54,330
要再熬熬，再再再再再一次写完他所以他也就是只是而而此

200
00:13:54,420 --> 00:13:57,960
相应的，我们读的时候其实就是读

201
00:13:59,220 --> 00:14:00,060
读的

202
00:14:00,120 --> 00:14:03,600
那个那个每层层考碰见的次数

203
00:14:03,960 --> 00:14:09,270
因为因为每一层之间也是有个闰制的区别的，所以你

204
00:14:09,275 --> 00:14:13,140
每一层只需要读一次，看普京特那

205
00:14:13,230 --> 00:14:18,540
对于拉货来说，那我每一层只要赌一次，但是对于亲人来说就不一样，因为他有

206
00:14:18,545 --> 00:14:20,640
对每一层有替考，剖腹的

207
00:14:20,645 --> 00:14:23,760
所以她需要去剃成上一个我们的层高

208
00:14:24,270 --> 00:14:25,290
大概就这样

209
00:14:26,910 --> 00:14:27,690
怎么样啊？

210
00:14:27,780 --> 00:14:31,320
现在清楚了，阿森说那我来说一下

211
00:14:31,470 --> 00:14:33,000
只能说下周四弟弟吧

212
00:14:33,960 --> 00:14:38,010
首先，绕克思域是facebook

213
00:14:38,430 --> 00:14:43,740
基于lab一个优化的他曾进呃，他对性能恶进行了优化

214
00:14:43,950 --> 00:14:49,260
增加了一些来五帝币没有的一些特性啊，实际上也就是一个持久化的

215
00:14:49,265 --> 00:14:54,570
K86的单基从容影音，然后就积压三岁，然后也就是IV VC，然后最基本

216
00:14:54,575 --> 00:14:59,430
这个操作就是这些，该土地里就是这样，six，感觉跟一个

217
00:15:00,000 --> 00:15:02,730
那个内存的，还是卖布利斯？

218
00:15:03,480 --> 00:15:04,830
那

219
00:15:05,100 --> 00:15:10,410
我们那次碧琪实在太KB就是做单机存储里，可以看，可以看到一个ta KB的

220
00:15:10,415 --> 00:15:14,190
基本结构对于上层来说，我们就是

221
00:15:14,195 --> 00:15:15,060
需要

222
00:15:15,420 --> 00:15:16,740
反正这个跟

223
00:15:16,770 --> 00:15:22,080
不管是润肤的na，以及l rna进行一二派时候写入相应数据

224
00:15:22,350 --> 00:15:26,430
我们都会写到绕克斯地里面，而不同时间节点的

225
00:15:26,435 --> 00:15:27,630
的数据的

226
00:15:27,720 --> 00:15:29,880
一致性是由@来保证的

227
00:15:32,730 --> 00:15:35,370
这样就是一个劳克斯d的结构

228
00:15:35,375 --> 00:15:36,900
首先有

229
00:15:37,230 --> 00:15:42,540
呃，几个必要重要部分？第一个就是wl另外一个是那位推广

230
00:15:42,810 --> 00:15:45,150
另外一个就是ST

231
00:15:45,510 --> 00:15:48,960
呃，这个ST c也就是我上一节讲到的

232
00:15:48,965 --> 00:15:49,830
那个

233
00:15:50,040 --> 00:15:50,820
啊？

234
00:15:51,000 --> 00:15:56,310
阿三去的坎碰见他阿三出院考试念的比较常见的一种

235
00:15:56,315 --> 00:16:01,620
BB，说另外一种就是soft，然后装CD，免得了阿森纳的巅峰年龄

236
00:16:01,625 --> 00:16:03,780
都是ST f

237
00:16:03,785 --> 00:16:04,530
而

238
00:16:04,590 --> 00:16:09,900
那个在在慢慢慢慢慢慢的就是在内存里面放的啊！

239
00:16:10,050 --> 00:16:12,630
很碰见他他实际用的是

240
00:16:12,660 --> 00:16:15,480
那这个慢慢听，我实习就是一个c类型的

241
00:16:16,320 --> 00:16:20,190
他另外一个就是买个饭，然后接下来我会分别讲哈

242
00:16:20,460 --> 00:16:22,620
一个都是什么干什么用？

243
00:16:23,490 --> 00:16:25,830
首先先说w

244
00:16:26,220 --> 00:16:29,520
弟弟在写入的时候，他会先把

245
00:16:29,525 --> 00:16:34,830
他写入了本次写入的操作内容写入wlwll，而实际是一个

246
00:16:34,835 --> 00:16:36,900
就叫卵子还有多少了？

247
00:16:36,930 --> 00:16:40,260
实际是一个顺序写入的一个文件

248
00:16:40,440 --> 00:16:41,250
这样的

249
00:16:41,255 --> 00:16:42,030
他

250
00:16:42,210 --> 00:16:47,520
会先把本子行内容会持久化，知道这个log里面之后呢，才会把

251
00:16:47,525 --> 00:16:52,830
相应的内容写到卖萌瑞瑞，也就是我们的慢慢推广，所以

252
00:16:53,760 --> 00:16:54,570
然后

253
00:16:54,600 --> 00:16:55,620
在之后呢？

254
00:16:55,710 --> 00:17:01,020
这个卖卖卖，推广，一旦满了之后，他就会变成瘾，没有拖，买完了推广而生成一个

255
00:17:01,025 --> 00:17:05,430
真的那样推广让接下来的写入进行写入，而这个

256
00:17:06,030 --> 00:17:09,060
慢慢推广，就会有对应的一个富裕正唠嗑

257
00:17:09,210 --> 00:17:13,590
然后等待这个卖肉退保四大渠道s，赛季末的时候

258
00:17:13,650 --> 00:17:16,200
我们就可以安全的，可以把这个

259
00:17:16,740 --> 00:17:18,480
这个老删除掉

260
00:17:19,260 --> 00:17:21,750
那为什么要这么做呢？那主要是因为？

261
00:17:22,740 --> 00:17:23,430
是

262
00:17:23,435 --> 00:17:26,010
主要是因为我们需要一个

263
00:17:26,040 --> 00:17:28,770
那个故障恢复，如果进程发生了

264
00:17:28,800 --> 00:17:31,440
发生了异常或者数据集出现了

265
00:17:31,650 --> 00:17:35,790
宕宕机之类的那我们这时候我们先写入了大概

266
00:17:35,910 --> 00:17:41,220
呃wl他已经是酒话了，就算后面的这些还没有完成，但只要我

267
00:17:41,225 --> 00:17:41,910
我们

268
00:17:42,060 --> 00:17:47,370
有他，我们在重启之后就可以同学通过这个log恢复我们以前的

269
00:17:47,375 --> 00:17:52,680
如果但是啊，但另外的也就是说，如果我们在这些地方推广

270
00:17:52,685 --> 00:17:57,990
已经正常的持久化到埃塞推广了，也就是已经写入磁盘了，那我当然也就可以

271
00:17:57,995 --> 00:17:58,950
你把这个

272
00:17:58,955 --> 00:18:00,840
Win log删除掉

273
00:18:01,770 --> 00:18:02,550
所以

274
00:18:03,000 --> 00:18:04,080
大概就是个这样

275
00:18:06,870 --> 00:18:07,710
啊？

276
00:18:08,280 --> 00:18:12,540
那个卖卖退货就不多介绍它实际就是一个

277
00:18:12,545 --> 00:18:17,850
那个是给那个，然后再来说下来是吹风还是吹不他其实

278
00:18:18,270 --> 00:18:23,580
啊，就是刚刚说了，阿三去的每一层的一个砍破脸的他的主要

279
00:18:23,585 --> 00:18:25,170
结构就是这样的

280
00:18:25,260 --> 00:18:27,060
首先是有对她不好看

281
00:18:27,210 --> 00:18:29,100
然后还有cos，不好看

282
00:18:29,160 --> 00:18:33,600
已经被她的代课老师应该是和付出，他们都是干什么的？

283
00:18:33,720 --> 00:18:35,340
首先，最基本的是方程

284
00:18:35,640 --> 00:18:40,950
让CP在读一个文件的时候，恶毒i ct文件时候，她会先

285
00:18:41,100 --> 00:18:41,700
告诉

286
00:18:41,760 --> 00:18:47,070
先去读这个文件末尾的定长了几个字节，也就是这个负

287
00:18:47,075 --> 00:18:52,380
这个风车里面会存有卖炭翁在这部落和因内部部落的一个

288
00:18:52,385 --> 00:18:57,690
一个偏移地址那样的，我们是可以从通过分层知道这两个变量

289
00:18:57,695 --> 00:18:59,850
长度的唠嗑里面的

290
00:19:00,480 --> 00:19:01,710
啊，那那种

291
00:19:01,920 --> 00:19:06,360
而且他应该是落了实际就是记录仪非常词儿唠颗粒

292
00:19:06,540 --> 00:19:11,850
都是都有哪些都在什么地方，而应该不布劳可能就是实际指向对她不好

293
00:19:12,150 --> 00:19:14,790
先说

294
00:19:15,780 --> 00:19:21,090
虽然说对他不好，这个是他不知道，就是实际存储数据的地方啊说

295
00:19:21,095 --> 00:19:26,400
弟弟用了一个前置压缩，也就是把相同key的前缀呃

296
00:19:26,490 --> 00:19:30,630
就是如果是有相同的可以那前缀就不用重复的去

297
00:19:30,900 --> 00:19:32,190
存了

298
00:19:33,060 --> 00:19:38,370
然后之后呢，音那个是老葛会会存入每会保存着每一

299
00:19:38,375 --> 00:19:40,140
就要对他不知道的一个

300
00:19:40,290 --> 00:19:41,640
气韵的的范围

301
00:19:41,645 --> 00:19:46,950
通过这样子，我就能从外面很快的查到我相应的key，在哪个地方？

302
00:19:47,280 --> 00:19:51,810
然后去读就好了然后卖菜的应该是报告的就指向了飞车多少个？

303
00:19:51,815 --> 00:19:54,690
分数分布是什么呢？这主要是

304
00:19:54,810 --> 00:20:00,120
呃，主要是村的是我们后面会讲到一个不能过的去就是所以

305
00:20:00,125 --> 00:20:05,430
公共区我们就能确定这个ST c到底存存在某一个t

306
00:20:05,700 --> 00:20:11,010
如果不存在某一个可以的话，那我们就不用再去费费劲去找音这个

307
00:20:11,130 --> 00:20:13,860
不知道，然后再去找对他不知道里面的内容

308
00:20:16,830 --> 00:20:18,450
而另外一个就卖给贩子

309
00:20:18,510 --> 00:20:23,820
WIFI的实际是为了原子性的更新数据库元数据

310
00:20:23,825 --> 00:20:25,680
保证会是一坑死

311
00:20:26,040 --> 00:20:27,390
要看CC c

312
00:20:27,570 --> 00:20:30,210
比如说我们在增加一些文件

313
00:20:30,360 --> 00:20:35,580
然后我们发生了，我怕克制，那恐怕是肯定会增加一些文件

314
00:20:35,670 --> 00:20:37,530
并且删除一些文件

315
00:20:37,680 --> 00:20:40,770
但是如果说我们这时候这个吻鳄

316
00:20:41,550 --> 00:20:46,860
我们我们刚做完考完试，我们还没有来得及把这个文件进行物理删除那

317
00:20:46,865 --> 00:20:47,820
这时候

318
00:20:48,030 --> 00:20:50,220
我现在当季了，那怎么整呢？

319
00:20:50,280 --> 00:20:55,590
但是实际上他就会先先先把这个操作写入慢的饭的，所以

320
00:20:55,595 --> 00:21:00,900
一旦洗出来的饭，吃了就确认我这个操作已经是要做了，已经确定要做了，只是有可能

321
00:21:00,960 --> 00:21:02,970
我还没来得及，就当机了

322
00:21:02,975 --> 00:21:08,040
但是，在MC地狱重启之后呢，我们会先去便利便这个蛮有意思的

323
00:21:08,250 --> 00:21:11,280
然后要知知道他历史都做过什么操作

324
00:21:11,310 --> 00:21:15,630
然后通过这些操作的，我们知道哦，我们之前是没过这个文件了

325
00:21:15,660 --> 00:21:19,500
所以即使现在也可以在目录看到这些文件，但是

326
00:21:19,710 --> 00:21:25,020
一旦重启之后，也会把这些文件删除返回到一个之前我们跟跟

327
00:21:25,025 --> 00:21:27,600
我们当即之前的一致的一个状态

328
00:21:32,310 --> 00:21:35,100
那些已经介绍完了，那就是

329
00:21:36,000 --> 00:21:41,310
我刚才也说了，差不多就来总结下，写入流程，那第一个就是一个前台的写入

330
00:21:41,370 --> 00:21:46,680
对，就是我们在写入的时候先把数据写到wall 19话只有

331
00:21:46,685 --> 00:21:51,990
看完之后我们会写几面儿，不只是前台的那后台的，也就是他会义务的去

332
00:21:51,995 --> 00:21:53,250
做了一些事情

333
00:21:53,430 --> 00:21:54,720
第一就是香

334
00:21:54,725 --> 00:21:57,120
反正他不买了，那我们会把门槛踢破

335
00:21:57,125 --> 00:22:02,430
不老实的l ling，另外一个就是然后嗯，那个下面的来吧，我已经买了

336
00:22:02,435 --> 00:22:04,050
我会进行抗排斥

337
00:22:04,140 --> 00:22:06,570
考试是呢，主要是分两种

338
00:22:06,575 --> 00:22:09,150
一种是然后我就看着他们吃

339
00:22:09,180 --> 00:22:14,490
弟兄们有那么多卡卡卡卡卡卡卡卡卡卡卡就是实际LOL就

340
00:22:14,495 --> 00:22:17,160
这是一个切的音为ll，令它其实

341
00:22:17,280 --> 00:22:19,470
每一个熬夜的位置

342
00:22:19,475 --> 00:22:20,340
都是

343
00:22:21,330 --> 00:22:26,640
本然后文文件之间的论据，它们都是由有重叠的，所以没

344
00:22:26,700 --> 00:22:31,650
然然后领往下刷的时候是将多个二零文件一块儿到le

345
00:22:32,040 --> 00:22:37,350
还有意的而而而那个剩下的，然后ell lo那些就是

346
00:22:37,355 --> 00:22:38,760
像正常的

347
00:22:38,880 --> 00:22:41,280
把他就是个拉我我都没泡泡了噻

348
00:22:41,580 --> 00:22:46,890
他这一层的啦，我会跟下一层的拉我的文件合并起来，然后

349
00:22:46,920 --> 00:22:51,360
生成一个新的文件，而且内部所有考试生的实际就是一个

350
00:22:51,390 --> 00:22:53,670
我们扒出是的，亲爱的

351
00:22:54,720 --> 00:22:56,400
啊，在这里会有一个

352
00:22:57,060 --> 00:22:59,670
BB的有一个东西叫萨克斯萨克斯

353
00:22:59,850 --> 00:23:00,540
因为

354
00:23:00,630 --> 00:23:03,150
呃，实际来说我们

355
00:23:03,270 --> 00:23:07,590
呃呃，不是，是可以并并且执行的

356
00:23:08,340 --> 00:23:13,650
因为嗯，下面没她是他是一个跑腿，省的来我们，所以下面每一层

357
00:23:13,655 --> 00:23:14,760
之间的

358
00:23:14,910 --> 00:23:20,040
呃，那个在进行卡牌设计的时候，它的文件的任职

359
00:23:20,460 --> 00:23:25,770
是不重叠的，所以我可以在没在一层里面做多个好男生，但是然后你们

360
00:23:25,775 --> 00:23:31,080
是礼拜，因为熬灵芝，然后零的skt，他们的粤语之间是交错的

361
00:23:31,230 --> 00:23:36,540
所以，而且不可能会有病发的卡牌吃那我们这是可以做的，一个就是三

362
00:23:36,545 --> 00:23:37,620
他恐怕吃

363
00:23:37,710 --> 00:23:39,060
的却是只有一个

364
00:23:39,300 --> 00:23:41,220
可以并啊只能

365
00:23:41,250 --> 00:23:46,350
一个同事做的考察，按照但是他可以通过这个照片进行分割

366
00:23:46,380 --> 00:23:51,690
把那个这个照顾的瑞士分成为多段，然后交给不同的县城来做

367
00:23:52,080 --> 00:23:52,890
让他去

368
00:23:56,130 --> 00:23:57,240
想借他的就是

369
00:23:57,450 --> 00:23:58,470
真的

370
00:23:58,500 --> 00:23:59,460
比如说

371
00:23:59,580 --> 00:24:01,500
对于付出来说，第一部

372
00:24:01,650 --> 00:24:06,960
我们家的过一个第一次献血，答对了，第二部就是写到现在那边

373
00:24:06,965 --> 00:24:07,740
财报

374
00:24:07,890 --> 00:24:11,100
然后这一个写入的流程就算结束了

375
00:24:11,400 --> 00:24:13,050
谈另外一个呢就是

376
00:24:13,055 --> 00:24:13,680
一个

377
00:24:14,400 --> 00:24:15,690
后台的发20

378
00:24:16,530 --> 00:24:20,880
还有完全部买了，那我们就会把它写入到还要领里面

379
00:24:21,780 --> 00:24:27,090
他的卡牌是在做客麦生的时候是绕CD是根据

380
00:24:27,095 --> 00:24:30,030
自己他会计算一个，恐怕陈思阔

381
00:24:30,270 --> 00:24:35,580
商行卡迈上报告没曾选择最高报告就是那个文件，他会

382
00:24:36,600 --> 00:24:40,410
首先先拿了那几个文件，然后之后他会找到下一层

383
00:24:40,440 --> 00:24:45,750
认识跟他重叠的那个文件，作为他整个卡牌选了一个书，然后

384
00:24:45,755 --> 00:24:47,520
最后会做一个归

385
00:24:49,440 --> 00:24:52,380
规定排序，然后生成新的

386
00:24:52,440 --> 00:24:53,370
几个？

387
00:24:53,520 --> 00:24:55,800
排排好序的ST f

388
00:24:56,160 --> 00:24:59,850
在在这里的时候，考完试你也会做一些东西，就比如说

389
00:24:59,855 --> 00:25:04,620
已经被删除的数据，比如说我们上次有一个底内侧

390
00:25:04,625 --> 00:25:07,920
这如果这是最底层的话，那最底层

391
00:25:08,070 --> 00:25:10,500
这这些这些这些

392
00:25:10,530 --> 00:25:15,840
这些也有那相应的key的话，那就会把那些k也删掉，然后那个弟弟他也

393
00:25:15,845 --> 00:25:16,860
我不会报名

394
00:25:18,030 --> 00:25:23,340
和另外还有被更新的数据一样的，就上有个更新的数据，下面有原来的可以

395
00:25:23,430 --> 00:25:27,600
拜拜六那我们进行敞开吃的话，实际是可以把原来

396
00:25:27,870 --> 00:25:28,980
原来的班儿

397
00:25:29,070 --> 00:25:34,380
好像是就可以了，不用再重新使用这些最新的一个ky 6就可以了

398
00:25:36,630 --> 00:25:39,450
他对于读流程的毒流程就是先

399
00:25:40,080 --> 00:25:41,550
先去找

400
00:25:41,610 --> 00:25:46,410
啊独一个t先先去找慢慢推广的，没有没有，然后再按

401
00:25:46,710 --> 00:25:52,020
是从最新到最老毒l0里面的文件，看那个里面有没有相应的题？

402
00:25:52,770 --> 00:25:58,080
如果没有的话，那就是再读le，然后再读了再读了再读了再读一次

403
00:25:58,170 --> 00:26:00,840
要注意啊，现在说过了因为

404
00:26:00,990 --> 00:26:06,300
因为除了20l后一礼拜的，这下一次推过的润之，他都是不

405
00:26:06,305 --> 00:26:09,330
香蕉的所以你可以你

406
00:26:09,360 --> 00:26:13,950
你读e CK的话，对于这这些来往你肯定只用读一

407
00:26:13,980 --> 00:26:16,500
恶毒一个那个

408
00:26:17,730 --> 00:26:22,800
还是替补就可以了，而不用像l0去把每一个KTV都要读一遍

409
00:26:26,280 --> 00:26:27,300
好好

410
00:26:27,305 --> 00:26:30,780
那刚才的读写流程已经说差不多，那我来说一下

411
00:26:31,260 --> 00:26:33,270
BB的一个主要的特性

412
00:26:33,540 --> 00:26:34,140
啊？

413
00:26:34,170 --> 00:26:39,480
这个主要特性的，主要是说它可以用到一些特性，第一个就是444

414
00:26:39,600 --> 00:26:44,910
提供某一个时间节点的一个整个数据库的一个快照，另外一个是靠着范围

415
00:26:45,210 --> 00:26:49,380
他们范围实际是对数据的一个逻辑的分区

416
00:26:49,385 --> 00:26:54,000
你在你同意就可以，可以写在不同的抗给我发微信里面有

417
00:26:54,510 --> 00:26:59,820
不一而不相同的白流量，另外一个是一只还是说出来那玩意儿才放？

418
00:27:00,180 --> 00:27:01,380
这是在

419
00:27:01,385 --> 00:27:03,930
Pta就是tak k进行

420
00:27:03,990 --> 00:27:09,300
钱钱一副本的时候，他是先把我们现在整个某个人

421
00:27:09,305 --> 00:27:13,260
这个时候数据捞出来，然后生成一个sto

422
00:27:13,740 --> 00:27:16,020
文件，然后再把那个24分

423
00:27:16,025 --> 00:27:21,330
At的文件发到需要另另外一个台kv汤，然后那个太kv

424
00:27:21,335 --> 00:27:26,640
那个另外，它可以把那个steam菲尔菲尔银架子下去，就相当于把一个

425
00:27:26,790 --> 00:27:28,980
副本进行了迁移或者复制

426
00:27:29,100 --> 00:27:30,630
和另外一个就是

427
00:27:30,810 --> 00:27:32,430
这个是不用修车？

428
00:27:33,570 --> 00:27:37,410
是为了在特殊场景下加速干的，然后我们接下来

429
00:27:37,470 --> 00:27:38,280
第一说

430
00:27:38,970 --> 00:27:39,960
说

431
00:27:40,110 --> 00:27:40,800
啊？

432
00:27:41,010 --> 00:27:41,940
刚上上课啊！

433
00:27:42,150 --> 00:27:47,460
30的实际也就是一个最基本的mcc的应用和实际

434
00:27:47,465 --> 00:27:51,570
就是一个sea克斯单本我们在每次写入的时候

435
00:27:51,690 --> 00:27:53,340
其实你的这个

436
00:27:53,910 --> 00:27:59,220
实际存在，然后四月份的可以会是这样的，这是你写作的优秀可以而实际上

437
00:27:59,225 --> 00:28:01,020
还会给你一个谁？

438
00:28:01,230 --> 00:28:06,540
喷喷的一个c克斯担任这个c克斯单单是单调递增的，你每次写入可以，他都会加一

439
00:28:07,110 --> 00:28:09,210
就这样就会有了一个

440
00:28:09,215 --> 00:28:14,430
暧昧CC c那我们在那个大厦的话，实际就是在四大少的

441
00:28:14,700 --> 00:28:15,420
会

442
00:28:15,750 --> 00:28:20,940
给自己拿一个c克斯版本，也就是你在读的时候

443
00:28:20,970 --> 00:28:21,900
就是

444
00:28:22,020 --> 00:28:27,330
这个KFC克斯坦背必须小于，你是男上的水果丝，来不了，那它才能被这个啊！

445
00:28:27,335 --> 00:28:29,700
差不多，要不然他就读不到

446
00:28:30,240 --> 00:28:34,710
但当然这还有另外一点就是我们在考试的的时候

447
00:28:35,220 --> 00:28:40,530
也不是说对所有更新的可以，他都会删除的，都会删除他也

448
00:28:40,535 --> 00:28:45,840
要考虑对是否对现在已有的四大少的课件，如果对现在是已有的

449
00:28:45,900 --> 00:28:51,120
要少少可见的话，那我们恐怕生的时候还并不会把更新的

450
00:28:51,750 --> 00:28:53,640
更新的那个k，删除掉

451
00:28:55,500 --> 00:28:57,180
他另外一个呢就是

452
00:28:57,630 --> 00:28:58,710
媳妇儿不是

453
00:28:58,715 --> 00:29:04,020
这个社会发生的，实际是说呃，我们一个以及瑞特，他是

454
00:29:04,260 --> 00:29:09,570
他要读数据的时候，她会先去取一个新朋友圈，那个朋友圈是什么？

455
00:29:09,575 --> 00:29:14,760
它实际是一个某个时间点，所有有效的ST f

456
00:29:14,820 --> 00:29:17,130
和慢慢推广的一个集合

457
00:29:17,370 --> 00:29:19,380
那为什么要这样呢，就是说

458
00:29:19,500 --> 00:29:24,810
反正有可能会这样的我的一个一个瑞特，我正在读，我正在便利，但有可能我

459
00:29:24,815 --> 00:29:30,120
读着读着读着，刚好就碰到了疼她的，而那个坎儿是把那个文件

460
00:29:30,125 --> 00:29:31,650
删除掉了，怎么办？

461
00:29:32,100 --> 00:29:36,330
那这时候我其实就是通过孙科卫生来做到的

462
00:29:36,660 --> 00:29:38,640
在四门，为什么等我来看一下？

463
00:29:40,050 --> 00:29:42,000
首先，它其实就是一个

464
00:29:42,180 --> 00:29:45,210
他每一个steam文件，还有一个

465
00:29:46,050 --> 00:29:46,860
有个

466
00:29:48,060 --> 00:29:49,380
要引用技术

467
00:29:49,920 --> 00:29:50,940
现在这样看

468
00:29:51,780 --> 00:29:55,980
假设我们现在是有三个文件

469
00:29:55,985 --> 00:30:00,300
然后那就是我们先给他一个看门的卫士，也就是最新的卫生

470
00:30:01,830 --> 00:30:02,730
的时候

471
00:30:02,760 --> 00:30:08,070
他那个为什么会引用着这三个s文件，所以这三个s

472
00:30:08,190 --> 00:30:12,180
呃，三个文件的才语音技术就是一那接下来呢？

473
00:30:12,185 --> 00:30:13,170
表示我们

474
00:30:13,175 --> 00:30:16,980
有新的写入，我们新增了一个ST文件

475
00:30:17,280 --> 00:30:18,180
784

476
00:30:18,600 --> 00:30:19,680
那这时候

477
00:30:20,370 --> 00:30:25,680
假设我们原来的不是审议被一个以此为准，一直用着呢那我们现在最新的玩儿

478
00:30:25,685 --> 00:30:27,900
就是这样的，他会引用的

479
00:30:27,990 --> 00:30:33,300
四个文件，然后但是因为一份生意，还引用这三个文件，所以这三个三个文件里有

480
00:30:33,305 --> 00:30:35,820
就是啊，本来四应用技术一

481
00:30:36,090 --> 00:30:38,730
那接下来如果发生卡牌，怕吃了

482
00:30:39,600 --> 00:30:44,580
要要要注意哦，我们班可能是设置的时候，我们会把以前的

483
00:30:44,910 --> 00:30:50,220
文件和音频的文件，然后生成一个奥普的文件，但是这这时候并不

484
00:30:50,225 --> 00:30:55,530
不是对阴部的文件有任何修改的ST t文件有个最基本

485
00:30:55,535 --> 00:31:00,000
就是说，一旦它生成了，那他就是不能更改，它是只读的

486
00:31:02,130 --> 00:31:02,850
都一样

487
00:31:02,880 --> 00:31:03,750
我们生

488
00:31:03,755 --> 00:31:06,240
我们iPhone4S s

489
00:31:06,390 --> 00:31:11,700
上拍摄一块合并成为一个f5f5生成了，但这时候呢？

490
00:31:12,120 --> 00:31:12,990
你看看

491
00:31:14,190 --> 00:31:19,500
还放ss ss，还并不不能删除，因为他还正在被她的饮食

492
00:31:19,505 --> 00:31:23,190
云技术还不为零，他还正在被其他的不是，是引用的

493
00:31:23,250 --> 00:31:25,770
我们接下来假设我们不是啊！

494
00:31:25,890 --> 00:31:27,420
已经没人用了

495
00:31:27,450 --> 00:31:32,760
在这时候，s影音技术就被领了，但还是以技术为令之后，这时候我们就

496
00:31:32,765 --> 00:31:33,450
对

497
00:31:33,510 --> 00:31:35,820
这个文件进行实际的物理删除

498
00:31:36,870 --> 00:31:42,180
这样如果一直一直一直说不用啊，那个是审议，也就相应被师傅不是音

499
00:31:42,420 --> 00:31:45,750
算了，也就连带着还放了三个瘾基数为零

500
00:31:45,780 --> 00:31:47,070
然后最后

501
00:31:47,700 --> 00:31:49,950
相应的文件就会物理删除

502
00:31:50,640 --> 00:31:53,490
但是，即使大概就是这样，也就是说

503
00:31:53,550 --> 00:31:56,430
对于对于之前的那个一次如一次

504
00:31:57,690 --> 00:32:03,000
就算就算他需要他，需要读WIFI f3，但这是因为已经被拍摄了

505
00:32:03,030 --> 00:32:08,070
看这个卡拍摄删除的文件并不影响你投11亿一个实际的读取

506
00:32:12,780 --> 00:32:18,090
另外一个就是看看么，看看能让实际就是对于接下来的一个逻辑分区

507
00:32:18,570 --> 00:32:23,310
呃，你可以从这张图上看到一班，然后他KC会有

508
00:32:23,340 --> 00:32:28,650
啊三呃，对于呃，那个会有三个CF，一个是最基本的地

509
00:32:28,655 --> 00:32:33,960
O CS b内存数据，然后相应的l of和off这都是我们

510
00:32:34,050 --> 00:32:39,360
那个是模型需要用到的，嗯，那这里就是多个媳妇之间，实际是

511
00:32:39,365 --> 00:32:44,670
共享w YY，他的为了就是能在胯下的原原子写入

512
00:32:45,090 --> 00:32:50,400
但是，但是他每一个CF会有自己的慢慢推广和ST文件这样

513
00:32:50,405 --> 00:32:54,390
你对于每一个你自己的应用，你可以去

514
00:32:54,395 --> 00:32:59,700
相应的去对某一个CF的参数进行优化，以满足你的需求

515
00:33:01,860 --> 00:33:03,210
啊，当然现在

516
00:33:03,510 --> 00:33:05,040
现在这个不开始

517
00:33:05,220 --> 00:33:10,050
现在我们都不知道开始积极提供单独CF

518
00:33:10,320 --> 00:33:15,630
给一个不好看的，也同也提供12的不好看，也就是你们三个

519
00:33:16,170 --> 00:33:21,090
不够用，一个不好开始这样的，更有利于你就不要开始资源的一个利用

520
00:33:22,050 --> 00:33:24,390
好另外一个

521
00:33:24,960 --> 00:33:30,030
特性就是你这样子ST我之前也说过了，但如果如果我们

522
00:33:30,210 --> 00:33:35,520
如果没有，人家才是替我们要去办一个台湾币的副本，那我们怎么做呢？那我们

523
00:33:35,525 --> 00:33:36,840
我们就是只能

524
00:33:38,760 --> 00:33:44,070
只能把先把我应该是kt的数据全捞上来，然后再

525
00:33:44,075 --> 00:33:49,380
一个一个把那些KTV的n出去发到另外一个他可以，然后那个他可以去进去

526
00:33:49,860 --> 00:33:54,690
写入，然后写写，慢慢推敲，最后再转化出来是t文件

527
00:33:54,750 --> 00:34:00,060
然后这时候在一层一层的把数据往下刷，那这时候肯定也自然会引入我们

528
00:34:00,065 --> 00:34:02,940
的西方大，但是如果有因战时呢？

529
00:34:02,970 --> 00:34:07,590
评价值的话，我们就会判断应寨子的那个文件的一个认知

530
00:34:07,680 --> 00:34:11,910
如果会尽量的把这个est文件尽量的网

531
00:34:11,970 --> 00:34:15,870
放到最底层下，这样的我们就可以介绍一些

532
00:34:16,140 --> 00:34:17,550
不必要的喜欢他

533
00:34:21,510 --> 00:34:22,860
他另外一个是

534
00:34:23,040 --> 00:34:24,120
说我们过得去

535
00:34:24,360 --> 00:34:28,410
啊不同播放器的目的实际就是我们在

536
00:34:28,530 --> 00:34:29,340
顿

537
00:34:29,550 --> 00:34:30,600
读的时候

538
00:34:30,960 --> 00:34:32,430
我们要读一个t

539
00:34:32,610 --> 00:34:37,920
那你像之前也可以看到他需要，然后理由需要挨个把那些

540
00:34:37,925 --> 00:34:40,710
自己都要读一遍，而确定可以不在这里面

541
00:34:40,920 --> 00:34:43,680
但如果有不能不去，我就可以

542
00:34:43,770 --> 00:34:46,890
并不需要去实际的读她的对她不好看

543
00:34:47,070 --> 00:34:52,380
他只要查一下，不能过得去，如果没有这个课的话，那我可以快速的跳过这个ST

544
00:34:52,385 --> 00:34:56,100
可以吧，我就不用需要就不需要引入实际的

545
00:34:56,105 --> 00:34:57,960
那个物理的LOL

546
00:34:58,590 --> 00:35:02,100
过过过过去呢那实际其实他就是

547
00:35:04,470 --> 00:35:05,850
一些比特币

548
00:35:05,880 --> 00:35:06,840
加上

549
00:35:07,020 --> 00:35:09,180
呃，这个哈希方式

550
00:35:09,240 --> 00:35:11,220
比如说我们现在来了一个

551
00:35:11,880 --> 00:35:13,200
一个kx

552
00:35:13,320 --> 00:35:18,630
还会有再多个还是方式映射到相应的比特被，然后把那个比特被

553
00:35:18,635 --> 00:35:19,440
是一

554
00:35:19,445 --> 00:35:21,990
比如说这个s是这三个唯一

555
00:35:22,050 --> 00:35:26,430
比如就来一个外，他映射下来是这三个唯一

556
00:35:27,570 --> 00:35:28,680
那下一次

557
00:35:28,740 --> 00:35:29,490
如果

558
00:35:29,640 --> 00:35:31,380
如果我们要查

559
00:35:31,620 --> 00:35:36,480
就kx，我们可以看到这个不过去，我们就会还是把k

560
00:35:36,720 --> 00:35:42,030
把这个key映射一下，然后找三个笔头呗，反正三个比特别多为一那就可以

561
00:35:42,035 --> 00:35:43,140
确认哦这

562
00:35:43,145 --> 00:35:47,070
这个额，确定这个是崔宝迪确实有这个k

563
00:35:47,250 --> 00:35:47,940
但是

564
00:35:48,210 --> 00:35:50,490
不能过去也是有一个问题的

565
00:35:50,640 --> 00:35:54,120
就是说他会有风俗炮在这里就是说

566
00:35:54,360 --> 00:35:59,550
有可能他不过世界告诉你啊，这个k在这里面，但实际他并不在

567
00:35:59,760 --> 00:36:05,070
这是为什么？因为因为比特卫总是有限的，比如说我有，可我们有可能来

568
00:36:05,075 --> 00:36:08,070
那个最那个最有可能映射到我这

569
00:36:08,075 --> 00:36:10,620
已经收到，这儿已经应收到这儿

570
00:36:10,860 --> 00:36:16,170
虽然的确不存在的，但是这三个比特位的确设为一了，那所以这时候不能

571
00:36:16,175 --> 00:36:18,270
就会误判，因为你的这些

572
00:36:18,360 --> 00:36:19,050
存在

573
00:36:19,770 --> 00:36:21,960
啊，当然这个其实

574
00:36:22,320 --> 00:36:27,630
也没有什么问题，只是影响一下效率，因为我们在实际他并不会说是

575
00:36:27,780 --> 00:36:29,130
一个存在的k

576
00:36:29,310 --> 00:36:32,790
然后不能过去就告诉你不存在，他只会说是

577
00:36:32,795 --> 00:36:36,030
一个不存在可以有可能不能去告诉你？不存在

578
00:36:36,090 --> 00:36:36,840
就算了

579
00:36:37,050 --> 00:36:42,360
我告诉你存在，那就算存在的话，那我们这是个误判，我们去读下来还退不退？

580
00:36:42,365 --> 00:36:45,600
都没有发现，但这也不影响结果的正确性

581
00:36:47,490 --> 00:36:52,800
读一画就是来说，就是用不用过去来避免磁盘IO可以跳舞？

582
00:36:52,805 --> 00:36:55,530
有一些不必要is to的一个读取

583
00:36:55,560 --> 00:37:00,870
他们另外一个就是说顺序扫描的时候顺序扫描的时候其实的时候我们就

584
00:37:00,875 --> 00:37:06,180
不能用正常的一个不懂过滤器了，因为你也想你是一段润润枝，你不可能

585
00:37:06,185 --> 00:37:09,780
去把那个睿智，每一个都去查一下，不能过得去

586
00:37:10,320 --> 00:37:15,630
所以呢，这时候我们会有一个佩克尔维特维特尔普尔菲斯斯特特别特别是对

587
00:37:15,635 --> 00:37:16,830
这个前缀

588
00:37:17,130 --> 00:37:18,660
创建一个，不能过去

589
00:37:18,690 --> 00:37:19,770
所以我们在

590
00:37:19,830 --> 00:37:25,140
顺序扫描之后就可以去查看先生的steam，有没有这个前缀？

591
00:37:25,145 --> 00:37:30,450
没有这个针日化，我们也不需要去读这个ST不依次来介绍我们的毒贩

592
00:37:34,140 --> 00:37:35,160
啊？

593
00:37:35,490 --> 00:37:40,770
其实，让CBA介绍这么多罪，剩下的就是主要说一下

594
00:37:40,800 --> 00:37:46,110
一些参数的介绍，主要是他KTV经常会用到一些参数

595
00:37:46,680 --> 00:37:48,630
一个什么鸡巴广告

596
00:37:48,690 --> 00:37:50,280
这个实际就是说

597
00:37:50,285 --> 00:37:54,210
进行后台进行任务的最大现场说那后台进行

598
00:37:54,215 --> 00:37:59,520
后来任务是有什么第一个是卡牌，选第二个就是负20号麦克斯拉不好

599
00:38:00,510 --> 00:38:05,820
也就是我们一个一个卡牌的任务，能背多少个县城来，同时执行

600
00:38:07,050 --> 00:38:08,430
啊，因为

601
00:38:08,520 --> 00:38:13,830
4月20来说，你增长麦克白块儿不是对然后领往下摔

602
00:38:13,835 --> 00:38:19,140
是没有任何益处的，所以这时候你还是有可能会需要去增加那次算

603
00:38:19,530 --> 00:38:20,460
他们搬去了

604
00:38:20,700 --> 00:38:23,100
他另外就是卖四万的粉丝

605
00:38:23,130 --> 00:38:26,610
要下一次就是来控制那个path文件的大小

606
00:38:26,670 --> 00:38:29,010
那个那个OPPO find是

607
00:38:29,040 --> 00:38:32,400
控制同时能打开的最大文件句柄数

608
00:38:34,680 --> 00:38:39,990
然后捞个赛事呢，其实就是数据化大小之前也看到ST文件的

609
00:38:40,320 --> 00:38:45,300
这基本的结构才有对她不知道什么什么不知道的，其实那些多少个其实就是

610
00:38:45,420 --> 00:38:48,330
也不知道在此为一个基本的单元

611
00:38:48,390 --> 00:38:52,020
啊对这些单元数据进行压缩，同时

612
00:38:52,050 --> 00:38:57,360
我们在有不知道开始，也就是对这个不老进行缓存，而另外呢，还有个卡

613
00:38:57,365 --> 00:39:02,670
我不是我不是说地狱，每一层数据的压缩方式，他每一层数据

614
00:39:02,675 --> 00:39:04,920
去压缩方式可以单独配置

615
00:39:04,925 --> 00:39:06,450
可以配置不同的

616
00:39:06,540 --> 00:39:09,390
呃，压缩方式，因为有些压缩

617
00:39:09,690 --> 00:39:15,000
比较饿消耗CPU，但是压缩这个有些相对来说不消耗

618
00:39:15,270 --> 00:39:20,580
CPU，但是压缩效果可能没那么好，这就需要我们单独配置，因为其实这

619
00:39:20,585 --> 00:39:23,400
其实就是一个CPU和IO的权衡

620
00:39:23,490 --> 00:39:25,050
如果我们哎呦

621
00:39:25,200 --> 00:39:28,980
还有忙不过来了，那我们这时候就可以减少一下

622
00:39:29,160 --> 00:39:33,240
的卡牌是输出的一个写入，那就是相应的去

623
00:39:33,390 --> 00:39:38,130
压榨一下CPU，让他压缩率更高亮了，我们写这个数据也就更少

624
00:39:39,390 --> 00:39:42,630
大概就是这样思路和另外一个就是嘴巴和赛斯

625
00:39:42,780 --> 00:39:45,540
11就是他要是第一面就差不多大小

626
00:39:45,600 --> 00:39:47,670
然后他给你非常30被子

627
00:39:47,880 --> 00:39:48,510
是

628
00:39:49,080 --> 00:39:53,370
CPS是是文件在love里面的大小

629
00:39:53,430 --> 00:39:58,740
其实它还会有一个系数，也就是每一层有可能下一面一层比上面

630
00:39:59,700 --> 00:40:05,010
Tst，文件的大小就是成倍增长了，但是这个这个参数默认为一，所以

631
00:40:05,015 --> 00:40:06,390
本身默认来说

632
00:40:06,510 --> 00:40:11,130
然后一到然后嗯下面的时候来我的SD文件是一样大的

633
00:40:11,790 --> 00:40:13,530
今晚上就是不好看了30

634
00:40:14,070 --> 00:40:15,180
这个已经说过了

635
00:40:16,560 --> 00:40:17,400
然后是

636
00:40:19,440 --> 00:40:23,310
啊嘴巴放下来摔死多少相关的一个参数

637
00:40:23,640 --> 00:40:28,950
这是什么呢？实际是威斯db的一个流控机是当时ID发现他的卡

638
00:40:29,040 --> 00:40:30,570
还是来不及的话

639
00:40:30,780 --> 00:40:32,070
40，来不及的话

640
00:40:32,100 --> 00:40:36,120
让他对上层的反馈，因为就是导致写入

641
00:40:36,210 --> 00:40:38,610
什么这样一次来？

642
00:40:39,630 --> 00:40:40,320
反正

643
00:40:40,440 --> 00:40:42,480
有一个喘气的机会

644
00:40:42,900 --> 00:40:46,950
所以这这这主要是有几个参数来控制的，第一个是说

645
00:40:46,955 --> 00:40:52,260
呃，这个买个钱包数量过多，也是数量达到麦克斯v8分摊吧！

646
00:40:52,980 --> 00:40:53,790
我们会

647
00:40:53,970 --> 00:40:55,770
就是一个WIFI 4到的一个

648
00:40:55,950 --> 00:40:58,470
呃，一个状态，那时候醒了就会变慢

649
00:40:58,500 --> 00:41:03,810
呃，内部会进行一个留空，然后另外一个就是然后领文件过多我们

650
00:41:03,815 --> 00:41:04,470
会

651
00:41:04,500 --> 00:41:06,330
呃，其实减缓血如

652
00:41:06,390 --> 00:41:07,380
也就是

653
00:41:07,590 --> 00:41:12,900
就是外套到也就是说，我们四楼的另外一个，另外一个就是如果他再打

654
00:41:12,905 --> 00:41:16,860
达到4到5外资的话，那这时候我弟弟是几乎

655
00:41:16,890 --> 00:41:18,090
不会写入的

656
00:41:18,120 --> 00:41:19,380
而不是减缓血弱

657
00:41:19,590 --> 00:41:24,900
同样的饭厅，考上半生半死，也就是说，我们的需要做的烤牌的还有很多

658
00:41:25,680 --> 00:41:30,990
可以达到少部分健康白色，白色，喜欢写入达到哈哈的盆景，看看身白一次是停止线

659
00:41:30,995 --> 00:41:31,740
电路

660
00:41:32,130 --> 00:41:36,810
好，有时候司机b就介绍这么多，下面就是

661
00:41:36,840 --> 00:41:42,150
大概说下，我们一个泰坦的一个相关的东西太多了，其实就是一个

662
00:41:42,155 --> 00:41:44,430
简直分离的思想

663
00:41:44,610 --> 00:41:49,920
因为我三岁的，最大的问题就是说，之前也说过，刚还是顺导致的

664
00:41:50,280 --> 00:41:51,600
啊血放大

665
00:41:52,050 --> 00:41:53,280
那我们有没有什么？

666
00:41:53,490 --> 00:41:54,240
办法

667
00:41:54,300 --> 00:41:59,610
能减小这个血放大了实际有一个就是说在大外六的时候

668
00:42:00,060 --> 00:42:03,930
卖掉很大的时候，我们能不能把这个歪嘴提出来？

669
00:42:03,990 --> 00:42:07,350
这样的，其实我这个整个写入的鹌鹑也就很小了

670
00:42:07,355 --> 00:42:08,070
这样子

671
00:42:08,490 --> 00:42:09,780
比如我们来计算一下

672
00:42:10,620 --> 00:42:14,520
我们有个k小说是十六八一次，我们班都是1 KB

673
00:42:14,610 --> 00:42:18,510
假设我们这个阿三去的血放大是40倍

674
00:42:18,870 --> 00:42:21,990
那我们的课也就是要背写40遍

675
00:42:22,380 --> 00:42:24,060
就是40×40

676
00:42:24,150 --> 00:42:28,170
然后但是我们歪歪扭扭歪到实际是写到另外一个地方

677
00:42:28,200 --> 00:42:31,230
而实际写进去，而三寸的东西

678
00:42:31,235 --> 00:42:32,940
Kk和一个

679
00:42:33,000 --> 00:42:35,880
一个烟的那个烟的是指向这个

680
00:42:35,940 --> 00:42:39,420
在另外一个地方放着歪着，所以考完试的时候只要是

681
00:42:39,570 --> 00:42:44,880
主要是不用去重庆那个单位我就可以了，所以我们就是歪了只是

682
00:42:44,940 --> 00:42:47,040
写了一遍，也是写到外面那个地方

683
00:42:47,370 --> 00:42:52,680
比上我们原来一个直你可以看到，本来是40倍的写放大，现在只有16

684
00:42:52,685 --> 00:42:53,310
600

685
00:42:53,730 --> 00:42:55,590
当然，这是一个很理想的情况

686
00:42:55,595 --> 00:43:00,900
因为实际你歪歪的话，你玩到死了，另外一个地方，那个歪的时候可能也会因为GCC写

687
00:43:01,650 --> 00:43:04,650
但是相比原来你来说肯定会好很多

688
00:43:05,400 --> 00:43:06,540
但是

689
00:43:06,960 --> 00:43:07,830
啊？

690
00:43:07,890 --> 00:43:13,200
同样的，没有银弹你你减少了血放大，你会带

691
00:43:13,205 --> 00:43:16,650
在国外的一个问题，一个问题，主要就是说

692
00:43:16,680 --> 00:43:19,740
我们在读的时候读性能会有损失

693
00:43:19,770 --> 00:43:25,080
因为以前我们查询查到这个k那就行，挨着你就能获得它的外表，但是

694
00:43:25,085 --> 00:43:30,390
现在呢？我们查到这个可以，你还要去通过那个英雄是到其他地方去找

695
00:43:31,050 --> 00:43:31,950
还一个

696
00:43:32,250 --> 00:43:37,170
他的外表才行，而且就是引入了一个随机的一个读取

697
00:43:37,830 --> 00:43:40,980
但是嗯，实际这个情况也还好，因为

698
00:43:41,070 --> 00:43:46,200
我们在实际读取的时候，很多时候我们的

699
00:43:46,260 --> 00:43:50,820
As to的一些不知道是被开始住了，我们并不会

700
00:43:50,910 --> 00:43:54,870
那个导致直接来哦，所以所以最终的

701
00:43:55,020 --> 00:44:00,330
你因为歪了小了你整个个翡翠的整体就小了那你就可以更多的节点

702
00:44:00,335 --> 00:44:01,860
就开始到内存中

703
00:44:01,890 --> 00:44:05,670
所以你最后实际进行IO的次数有可能也是一次

704
00:44:06,090 --> 00:44:11,220
在前面的时候，你只是在内存找，直到找到那个歪了的时候，对应戴克斯

705
00:44:11,670 --> 00:44:16,320
在进行只有一次，然后就是去那个其他地方去堵那个白的

706
00:44:18,030 --> 00:44:20,370
在当然还有一个范围查询

707
00:44:20,520 --> 00:44:22,890
他们查询的时候更是

708
00:44:24,180 --> 00:44:25,680
还是完全的

709
00:44:25,685 --> 00:44:30,990
可以也进行一个顺序的读取，你这是要每一个弯道会放在不同的地方，它可能

710
00:44:30,995 --> 00:44:35,700
并不是连续的，所以你就需要很多随机的l，但是

711
00:44:36,030 --> 00:44:38,070
这种情况在现在这个

712
00:44:38,250 --> 00:44:42,210
刚下来说已经好很多，第一个是SSD的并行性

713
00:44:42,330 --> 00:44:43,770
还是这些并行性

714
00:44:43,830 --> 00:44:46,020
这时候我们可以做一个普通饭吃

715
00:44:46,080 --> 00:44:51,390
你在赌钱，一个t的时候，我已经去把后面可以相关的歪歪的

716
00:44:51,780 --> 00:44:53,130
那个已经

717
00:44:53,135 --> 00:44:57,630
用用其他的后台县城提前去把那个县令YY料取出来

718
00:44:57,690 --> 00:45:01,290
因为sto SSD的并行性，其实

719
00:45:01,320 --> 00:45:04,020
一旦达到满了并行，他身体可以

720
00:45:04,080 --> 00:45:08,970
额，跟顺序all的那个什么差距？就其实已经很小了

721
00:45:11,730 --> 00:45:12,600
啊？

722
00:45:12,810 --> 00:45:16,980
那个折我们泰坦的一个主要参考就是

723
00:45:18,480 --> 00:45:23,010
CC c，前阵子一个论文，它主要其实就是一个这样的结构

724
00:45:23,070 --> 00:45:24,690
在最开始投入的时候

725
00:45:24,840 --> 00:45:27,300
怎么开外的？我会直接写到v log里面

726
00:45:27,840 --> 00:45:33,150
而这个via这个v log里面会产生现在的是，这次再把慢慢推给我

727
00:45:33,630 --> 00:45:36,060
洗衣服面推，不然后再发出进去

728
00:45:36,510 --> 00:45:37,230
所以

729
00:45:37,235 --> 00:45:41,610
对，也就是在这一次的时候，这个微辣的确实相当于打不了了谣啊！

730
00:45:43,530 --> 00:45:44,250
当然

731
00:45:44,610 --> 00:45:48,300
同样，我们还是需要继续，因为你之前在

732
00:45:48,330 --> 00:45:50,850
做卡牌，这其实相当于一种

733
00:45:50,880 --> 00:45:55,080
某种程度的CC，他会把更新过了，可以删除了，k

734
00:45:55,890 --> 00:45:57,150
的清除掉

735
00:45:57,660 --> 00:46:02,970
但是这时候你外流已经被提出来了，那你肯定这时候就需要一个单独的记忆，因为

736
00:46:02,975 --> 00:46:06,480
再再而三去里面有可能把那个k已经删除掉了

737
00:46:06,510 --> 00:46:10,170
在这时候，他另外一个地方并不知道她要去

738
00:46:10,260 --> 00:46:11,550
删除这个外流

739
00:46:11,580 --> 00:46:13,170
所以我们会定期的

740
00:46:13,290 --> 00:46:16,560
去做gc像vik里面，他这个

741
00:46:16,950 --> 00:46:19,350
那个v忘了他实际是一个

742
00:46:19,830 --> 00:46:20,460
晚安

743
00:46:21,300 --> 00:46:26,610
他会在他的里面，不过不断地去写入新的数据，还有个菜也会定期

744
00:46:26,615 --> 00:46:29,400
记得我们会出发太阳去读这个

745
00:46:29,460 --> 00:46:34,770
呃，这个这个歪歪这个歪歪有个大硬相应的可以这时候我们就要回到

746
00:46:34,775 --> 00:46:40,080
大家去里面去查那个k，现在有没有被更新或者这个k有没有？

747
00:46:40,085 --> 00:46:41,190
被删除掉

748
00:46:41,195 --> 00:46:42,510
如果被删除

749
00:46:42,515 --> 00:46:45,990
除掉的话也就代表我们这个群的歪歪已经失效了

750
00:46:45,995 --> 00:46:49,080
在失效的话，我们就直接可以移动跳

751
00:46:49,170 --> 00:46:52,710
如果没有失效的话，那我们就会把这个东西

752
00:46:53,010 --> 00:46:55,290
在我碰得到这个害的前面

753
00:46:55,350 --> 00:46:57,090
然后，移动俏的指甲

754
00:46:57,120 --> 00:46:58,020
这个

755
00:46:58,140 --> 00:47:02,820
心血如这个位置，我们还是需要去更新下啊，咱们说的这时候

756
00:47:02,825 --> 00:47:04,020
还是要给

757
00:47:04,050 --> 00:47:06,600
之外的回阿三去把那个

758
00:47:06,630 --> 00:47:11,940
把那个因大学需要更新下，因为我们现在已经在被窝了了，这个八六已经在v log了

759
00:47:12,000 --> 00:47:13,230
另外一个地方了

760
00:47:15,090 --> 00:47:16,710
好

761
00:47:16,980 --> 00:47:22,290
其实泰坦也并不是完全按照这样来的啊，主要我们有几个坎儿

762
00:47:23,100 --> 00:47:26,730
呃，就首先第一个是我们是要选择性那点的

763
00:47:26,735 --> 00:47:28,860
就是对于小的安利哦，我们也

764
00:47:28,865 --> 00:47:31,560
也是想为了能更好的提供

765
00:47:31,830 --> 00:47:37,140
赌性所所以只有比较大的来着，我们才会写到我们的v log

766
00:47:37,290 --> 00:47:39,450
我在泰坦里面，我们叫多少软件？

767
00:47:39,570 --> 00:47:42,150
另外一个就是从ww db的

768
00:47:42,155 --> 00:47:44,250
无缝升级，因为对于

769
00:47:44,370 --> 00:47:49,680
可以看到，威斯特其实她已经去掉ww vvvvvvvvv一个区别还是

770
00:47:49,685 --> 00:47:50,490
蛮大

771
00:47:50,700 --> 00:47:51,390
所以

772
00:47:52,290 --> 00:47:55,770
所以你一旦升级的话，你可能就需要重新导数据

773
00:47:55,775 --> 00:47:57,600
而我们泰坦是想

774
00:47:58,080 --> 00:48:03,390
只需要开启一个参数，然后我们后台的会慢慢的把一些不知道不能啊，把一些

775
00:48:03,395 --> 00:48:05,280
大来了，放弃不到文件

776
00:48:05,285 --> 00:48:10,230
然后保证对业务一个无感支行，另外一个就是赢家是一个人范儿

777
00:48:10,320 --> 00:48:12,060
因为需要你居然是做饭哦

778
00:48:12,120 --> 00:48:16,740
如果如果我们这时候就开始直接写进不了的话

779
00:48:16,745 --> 00:48:19,830
后面就没有机会再写信，我们不知道文件了

780
00:48:19,950 --> 00:48:22,170
这时候我们做的是还是保留？

781
00:48:23,130 --> 00:48:25,260
那个装饰ddwvvr的文件

782
00:48:25,350 --> 00:48:30,540
然后这时候会先写达到了然后他们多少还是会把玩了洗衣机慢慢推高

783
00:48:30,720 --> 00:48:32,310
但是，在孵化的时候

784
00:48:32,370 --> 00:48:37,680
我们会把这些歪了我一块儿进步，老婆，这样，然后再看我们身上的时候，我们会

785
00:48:37,980 --> 00:48:38,820
48

786
00:48:39,750 --> 00:48:45,060
上大班的风景，不知道文件，也就是说，如果我们赢下二次的话，我们没有从前面走

787
00:48:45,480 --> 00:48:49,350
我们从后面一下进来嗯的确认是ST文件

788
00:48:49,380 --> 00:48:54,690
里面既有k也有有大白的，但是随着卡牌什么进行，我们会把那些大

789
00:48:54,695 --> 00:48:56,070
260，慢慢的

790
00:48:56,100 --> 00:48:57,660
软件不好，不能这样里面

791
00:48:59,580 --> 00:49:04,110
哦，那泰坦一样是几岁？但是泰坦的不知道文件实际

792
00:49:04,470 --> 00:49:05,310
对啊！

793
00:49:05,790 --> 00:49:06,480
是

794
00:49:06,780 --> 00:49:12,090
呃呃，就是ACC不一样的，他并不是一个环环，它就是一个正常一个

795
00:49:12,095 --> 00:49:13,200
顺序文件

796
00:49:13,290 --> 00:49:17,430
所以我们也需要gc，但是可能跟VC KC gc是不一样啊！

797
00:49:17,520 --> 00:49:22,410
那怎么来计算呢？实际就是通过的高斯GB两个个特性

798
00:49:22,470 --> 00:49:24,810
一个是然后cb的吹泡泡水

799
00:49:24,960 --> 00:49:25,680
我们

800
00:49:25,710 --> 00:49:31,020
在他们发的问题，实际就是针对每一个ST它会生成一个推不剖腹

801
00:49:31,440 --> 00:49:34,200
先抛开，你可以自定义，像我们就会

802
00:49:34,320 --> 00:49:36,960
而在生产ST e时候

803
00:49:36,965 --> 00:49:38,070
我们会

804
00:49:38,100 --> 00:49:43,410
收集这两个题目存在不同，不知道文件中歪到了大小的一个总和

805
00:49:44,040 --> 00:49:48,780
像你就能知道这这个skill有相应的那些因素也都存在

806
00:49:48,840 --> 00:49:54,150
拿几个报文件，然后总总共这些资料有多大，然后另外一个就是你们

807
00:49:54,155 --> 00:49:57,720
类似的，他是在进行卡牌的时候会调用

808
00:49:57,780 --> 00:49:58,590
比如说

809
00:49:58,650 --> 00:50:03,030
我们在考试的时候，我们会有阴部的文件，还会有欧普的文件

810
00:50:03,180 --> 00:50:08,490
音部的进来在熬不如出去那每一个AI文件都会有一个退步

811
00:50:09,240 --> 00:50:14,520
那我们这次这个推广好的做法，那我们就是能得到我们

812
00:50:15,000 --> 00:50:18,390
这个厂牌是导致了多少歪就失效了

813
00:50:18,420 --> 00:50:23,730
像这样的我们就可以记录哦，相信了不知道不知道有多少班有失效了，知道这个信息之

814
00:50:24,030 --> 00:50:29,340
我们不断地累加，一旦这个不知道文件就歪了，失笑的一个比率达到一定的

815
00:50:29,345 --> 00:50:31,830
的时候我们就会出发gc

816
00:50:34,140 --> 00:50:35,430
他的问题是

817
00:50:35,970 --> 00:50:40,050
那怎么保证GCC不会删除正在被毒的？

818
00:50:40,140 --> 00:50:44,700
落文件呢那实际其实我们这次只是进行一个逻辑删除

819
00:50:45,150 --> 00:50:50,460
实际物理删除呢，是等到所有四川的都不在会读到这个，不知道文件

820
00:50:50,465 --> 00:50:52,860
时候才会进行物理删除

821
00:50:53,040 --> 00:50:58,350
啊，但这里也有个突出的情况，就是说如果再有并发写的时候，我们如何更新？

822
00:50:58,355 --> 00:51:03,180
不知道，应该是吧，因为在更新不到应该是时候他会把

823
00:51:03,240 --> 00:51:08,550
会把那个读音类似的新的不知道，应该是写回来才去，但是这时候

824
00:51:08,555 --> 00:51:13,140
不可能同时在这一个k，我会也有个相当歪了的更新

825
00:51:13,170 --> 00:51:18,480
如果那个y OK和ylc更新了然后我后面才把这个不知名的私信

826
00:51:19,110 --> 00:51:21,630
那我就可能会导致我这个有更新

827
00:51:21,660 --> 00:51:22,440
就是

828
00:51:22,710 --> 00:51:28,020
那所以呢，这是我在更新，不知道，应该是之前我需要再次检查，我现在

829
00:51:28,025 --> 00:51:29,730
他们是里面这个

830
00:51:29,735 --> 00:51:35,040
到2k对应的y老师怎么存的？如果发现我这中间外都有更新，那就

831
00:51:35,045 --> 00:51:37,080
这回来不老兵那个死了

832
00:51:37,085 --> 00:51:38,430
更新就会就

833
00:51:38,490 --> 00:51:42,960
不去实际更新就废弃掉，因为你会发现已经有歪歪的更新了

834
00:51:43,860 --> 00:51:49,170
另外，那就大概说下来就是gc的流程了，这大概就是我们那个卡牌的

835
00:51:49,175 --> 00:51:52,410
的时候根据贴吧plus也可以计算出来

836
00:51:52,530 --> 00:51:57,840
哦，报文件夹删除外露的一个大小的总和，然后根据这些我信息哦

837
00:51:57,845 --> 00:51:59,460
我们还需要一个报告

838
00:51:59,490 --> 00:52:01,740
我根据这个报告们这种排序

839
00:52:01,745 --> 00:52:06,180
从大到小依次选择这个不知道文件，我可以作为CC的候选

840
00:52:06,390 --> 00:52:07,260
主要是

841
00:52:07,265 --> 00:52:12,570
然后对于这些候选啊，候选文件呢？我们精彩一样，排除掉那些被

842
00:52:12,600 --> 00:52:13,800
删除歪的哦

843
00:52:13,805 --> 00:52:16,710
比例未达到阈值的文件，然后之后

844
00:52:16,800 --> 00:52:20,100
剩下这些文件呢？我们就是类似于

845
00:52:20,760 --> 00:52:25,230
和那次余额看它吃一样对这些文件

846
00:52:25,320 --> 00:52:28,500
进行一个合并，然后生成一个新的多少文件？

847
00:52:28,505 --> 00:52:31,380
然后新闻文件的记录也会写入慢的饭似的

848
00:52:31,410 --> 00:52:34,110
然后之后再把这个t不知道，应该是

849
00:52:34,170 --> 00:52:35,370
也会让他们去

850
00:52:35,375 --> 00:52:36,210
然后之后

851
00:52:36,270 --> 00:52:39,600
如果确定请回成功的话，那就把这牺牲

852
00:52:39,630 --> 00:52:43,710
就会这些删除文件，然后也记录在慢慢发展的文件中

853
00:52:44,580 --> 00:52:46,320
然后大概就是这样

854
00:52:48,030 --> 00:52:49,620
这堂课就是

855
00:52:49,890 --> 00:52:51,630
到这里结束，谢谢大家

856
00:52:56,340 --> 00:52:56,940
我不知道

857
00:53:01,650 --> 00:53:02,250
我不知道

858
00:53:06,960 --> 00:53:07,560
我不知道

859
00:53:12,270 --> 00:53:12,870
我不知道

860
00:53:17,580 --> 00:53:18,180
我不知道

861
00:53:22,890 --> 00:53:23,490
我不知道

862
00:53:28,200 --> 00:53:28,800
我不知道

863
00:53:33,510 --> 00:53:34,110
我不知道

864
00:53:38,820 --> 00:53:39,420
我不知道

865
00:53:44,130 --> 00:53:44,730
我不知道

866
00:53:49,440 --> 00:53:50,040
我不知道

