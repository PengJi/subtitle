1
00:00:00,030 --> 00:00:05,340


2
00:00:12,510 --> 00:00:13,890
这个好今天

3
00:00:13,920 --> 00:00:18,630
由由我来给大家分分享一下关于高考用原理的一些概念

4
00:00:18,870 --> 00:00:21,450
首先做一个自我介绍

5
00:00:22,080 --> 00:00:26,160
呃，我叫梁玉仝，然后目前是在AK ka组

6
00:00:26,250 --> 00:00:31,320
呃，做一些相关的研发工作，主要是负责pd相关的一些

7
00:00:31,350 --> 00:00:32,490
呃开发

8
00:00:34,980 --> 00:00:40,290
今天呢，我们将从以下几个方面来介绍一些关于高考概念

9
00:00:40,440 --> 00:00:41,820
首先我们会

10
00:00:41,940 --> 00:00:45,780
呃，看一下为什么我们的系统需要高可用其次

11
00:00:45,840 --> 00:00:50,040
呃，什么才是高考用这个关于高考用的，具体的定义是什么？

12
00:00:50,370 --> 00:00:54,000
就是我们再看一下，怎么才能让一个系统做到高可用？

13
00:00:54,060 --> 00:00:57,360
好像具体会从一以下几个方面

14
00:00:57,630 --> 00:01:01,320
首先会介绍一些常见的一些高考用方案

15
00:01:01,590 --> 00:01:04,500
其次呢，我们会呃

16
00:01:05,190 --> 00:01:08,820
介绍一些关于科普的高可用的一些相关的概念

17
00:01:09,090 --> 00:01:14,160
最后呢，我们会看一些呃ttb，在高朋友方面的一些

18
00:01:14,165 --> 00:01:14,940
哦哦

19
00:01:14,970 --> 00:01:15,750
运用

20
00:01:16,950 --> 00:01:22,260
然后最后一个部分就是我们会将讲一下关于这个跨数据中心

21
00:01:22,265 --> 00:01:23,520
现在这个部首发

22
00:01:23,670 --> 00:01:28,080
好像这个主要是在性能跟高考用之间做的一个权衡

23
00:01:31,020 --> 00:01:35,550
首先我们看一下，为什么我们一个系统需要做做到高可用呢？

24
00:01:37,080 --> 00:01:42,390
啊，假设我们的系统只有一个，一个一个节点，它对外提供服务，那么正常情况

25
00:01:42,395 --> 00:01:46,320
关卡呃，是完全OK的，但是如果

26
00:01:46,380 --> 00:01:51,690
呃，出现了当时系统出现了宕机或者是调电的情况下，那么这个时候

27
00:01:51,695 --> 00:01:57,000
对外的服务就是完全不可用的了，那这样对于一个服务来说，他是完全

28
00:01:57,005 --> 00:01:58,110
不可容忍的

29
00:01:59,640 --> 00:02:04,950
再比如初出现了有几比如说出现了一些包括磁盘

30
00:02:05,010 --> 00:02:07,470
一些故障，那么这个时候还会面临的

31
00:02:07,475 --> 00:02:09,390
给您的数据丢失的危险

32
00:02:09,420 --> 00:02:14,040
那这个其实对于系统来说，对于用户来说其实都是无法接受的

33
00:02:17,970 --> 00:02:23,280
哦，我们看一下关于高考用的这个具体的定义，然后这个是从危机上面摘下来

34
00:02:23,285 --> 00:02:24,360
写的一段话

35
00:02:24,540 --> 00:02:29,850
呃，具体呃关注的词就是这个阿太她具体包含了这个啊！

36
00:02:30,210 --> 00:02:35,520
系统的这个可用时间，也就是说，对于一个完全可用的系统来说

37
00:02:35,525 --> 00:02:38,130
他是要求7×24小时

38
00:02:38,340 --> 00:02:43,650
不断的对外提供服务的，而所谓高考用就是我们尽量去缩短这个不可用

39
00:02:43,655 --> 00:02:44,700
这个时间

40
00:02:47,580 --> 00:02:49,860
他们不可用的原因主要有什么呢？

41
00:02:49,980 --> 00:02:53,130
然后这边是从20嗯摘下来的一

42
00:02:53,135 --> 00:02:58,440
一些关于不可用的原因，那些分类啊奥入口加上这个不可用的原因分为了

43
00:02:58,445 --> 00:02:59,550
两两种

44
00:02:59,580 --> 00:03:00,540
两大类

45
00:03:00,545 --> 00:03:04,560
第一类就是计划内的，也就是我们可以预支就是可以

46
00:03:04,980 --> 00:03:06,480
在我们的计划之内

47
00:03:06,960 --> 00:03:12,270
比如说像容量规划或者是说对于这些操作系统维护，比如说

48
00:03:12,275 --> 00:03:15,000
说你的嗯，那个儿可能有bug

49
00:03:15,900 --> 00:03:21,210
呃，可能有大哥，我们需要定期的升级包，包括网络可能会需要做一些

50
00:03:21,215 --> 00:03:21,870
孕妇

51
00:03:22,710 --> 00:03:26,310
那么对于计划外的就是我们完全不可预知的就是

52
00:03:26,315 --> 00:03:31,620
我们不知道它什么时候会出现问题，比如说呃，我们的这种啊中

53
00:03:31,625 --> 00:03:36,930
今天这样的话出现了问题，比如说我们的这个网络出现了这种故障或者电源可能

54
00:03:37,320 --> 00:03:39,300
啊，出现了这种供电问题

55
00:03:39,450 --> 00:03:44,760
以及我我们的这个人员，可能不小心去坐，做了一些不该做的

56
00:03:44,765 --> 00:03:45,630
操作

57
00:03:45,690 --> 00:03:48,420
再比如说，这种硬硬盘的这种机械故障

58
00:03:49,050 --> 00:03:54,360
还有一种就是说我们这种常见的这种自然灾害，比如说地震啊，洪水啊这些

59
00:03:54,365 --> 00:03:56,130
这些都是我完全不可预见

60
00:03:56,220 --> 00:04:00,450
所以啊，这部分被归为了占座计划外的，然后这些

61
00:04:00,540 --> 00:04:04,170
不管是计划内还是计划外的，这些都是导致我们的系统

62
00:04:04,260 --> 00:04:05,670
不可用的一个原因

63
00:04:08,970 --> 00:04:11,010
那么我们怎么来判断？

64
00:04:11,070 --> 00:04:15,720
一个系统是不是怎么如如何去判断这个系统是不是高考用的？

65
00:04:15,810 --> 00:04:21,120
那么，通常是通过这个我们叫做s LA也就是呃，服务级别协议

66
00:04:21,480 --> 00:04:26,790
它是由这个服务的供应商与客户之间的约定俗成的一个

67
00:04:26,795 --> 00:04:27,990
呃，协议

68
00:04:27,995 --> 00:04:30,150
他具体可能包含了两部分

69
00:04:30,450 --> 00:04:34,740
第一部分，比如说第第一部分是叫做平均故障时间

70
00:04:35,430 --> 00:04:40,740
也就是说，当系统从一次故障中恢复到下，依次发生故障的这个是

71
00:04:40,745 --> 00:04:41,760
时间

72
00:04:41,765 --> 00:04:47,070
第二个就是这个平均恢复时间，也就是说，当系系统故障之后

73
00:04:47,280 --> 00:04:52,590
到恢复中中恢复正常中间的这个实验监测，然后通常呢？

74
00:04:52,595 --> 00:04:57,900
无伤会跟这个课，可就是客户会去协商这两个时辰

75
00:04:58,110 --> 00:05:01,980
比如说可能不超过屙成年不超过

76
00:05:02,100 --> 00:05:05,040
多长时间？作为一个约定俗成的一个协议

77
00:05:07,800 --> 00:05:12,690
其次呢，就是我们常说的这个，呃，这个系统高可用是属于几个九？

78
00:05:12,840 --> 00:05:18,150
呃，这个几个酒的概念就是说啊，我们比如说呃，拿一个九举例就是说

79
00:05:18,420 --> 00:05:23,730
啊，我们这个系统全年这个对外服务的时长要要超过90%

80
00:05:24,510 --> 00:05:25,410
那么

81
00:05:25,440 --> 00:05:30,750
对于59来说，其实你全年当期的时间就已经饿不能

82
00:05:30,755 --> 00:05:33,330
超过我这边去的5点20分钟

83
00:05:33,690 --> 00:05:39,000
对于一个新号来说，如果你能系统能达到五个九，其实就就已经饿

84
00:05:39,005 --> 00:05:39,960
不容易了

85
00:05:39,990 --> 00:05:44,520
然后置于六九可能就更加对于系统要求就更加苛刻了

86
00:05:49,230 --> 00:05:54,540
那么，如何去设计一个啊，高可用的系统呢？

87
00:05:54,630 --> 00:05:59,940
我主要是从以下三个方面，嗯嗯，来综合考虑第一方面就

88
00:05:59,945 --> 00:06:05,250
就是说我们需要消除这个系列的系统，系统中的这个单点故障

89
00:06:05,310 --> 00:06:10,200
他这所谓的单点呢他他可能是一个物理的单点，也可能是一个逻辑的蛋

90
00:06:10,410 --> 00:06:15,720
然后这个端点通常会导致整个系统的不可用，所以我们通常采取的办法就是

91
00:06:15,840 --> 00:06:18,450
我们将这个单点去进行一个勇于

92
00:06:19,500 --> 00:06:21,210
比如说嗯

93
00:06:21,215 --> 00:06:23,070
我们友谊对于

94
00:06:23,075 --> 00:06:26,610
一个物理节点来说，我们可以通常去给他做备份

95
00:06:26,640 --> 00:06:27,510
去

96
00:06:28,500 --> 00:06:30,600
去给他曾增加副本

97
00:06:30,900 --> 00:06:31,860
然后

98
00:06:32,160 --> 00:06:37,470
呃，对于那么对于这种就是还有一种，比如说不可以，就是不太容易作用

99
00:06:37,475 --> 00:06:41,040
这种娱乐组建，我们比如说路由或者负载中心

100
00:06:41,070 --> 00:06:43,980
呃，负债负载均衡或者是这种配置中心的呢？

101
00:06:44,130 --> 00:06:49,440
我们往往需要去呃，借助一些啊，其他的呃方法让它变得

102
00:06:49,445 --> 00:06:50,970
好好比如说我们可能

103
00:06:51,000 --> 00:06:55,470
呃，对于配置重新来说，我们可能会去用这种at CD或者是o CP等等

104
00:06:56,190 --> 00:07:01,500
呃，还有一个就是说我们在发生故障之后会如何去快速的？

105
00:07:01,505 --> 00:07:06,420
检检测到故障，以及触发相应的这种故故障转移机制

106
00:07:07,260 --> 00:07:12,570
结果这边我们屙列举的第三点就是故障的监测和维护，对于故障的

107
00:07:12,575 --> 00:07:17,880
所以维护我们需要做到的就是他势必需要尽可能的对用户透明的就是，也就是用户用

108
00:07:17,885 --> 00:07:21,240
户户可能不应该去感知到这个系统发生了故障

109
00:07:25,410 --> 00:07:30,720
那么，还有一些人影响到高铁系统高可用的一些其他的因素，比如说

110
00:07:30,870 --> 00:07:36,180
呃，这个系统的整体的一个价格设计是不是从一开始设计上就考虑到了？

111
00:07:36,185 --> 00:07:37,800
这个高考用的这个

112
00:07:37,830 --> 00:07:38,790
呃因素

113
00:07:38,820 --> 00:07:41,190
其次呢，就是这个软件的实现质量

114
00:07:41,280 --> 00:07:42,780
以及工程师的水平

115
00:07:42,785 --> 00:07:46,350
比如说你的，呃，这个写写代码的人的这个

116
00:07:46,355 --> 00:07:50,610
能力是怎么样的？是不是这个八卦的产出力足够低？

117
00:07:50,670 --> 00:07:53,220
然后测试的这个覆盖率是不是做报告？

118
00:07:54,510 --> 00:07:58,620
其实就是运维人员的这个技术能力与管理水平

119
00:07:58,740 --> 00:08:04,050
啊，这点就是说比如说我们的这个运维人员是不是有足够的这个背景知识能够？

120
00:08:04,055 --> 00:08:09,360
去合理的去呃操作对对系统进行一些操操作和运维

121
00:08:09,870 --> 00:08:15,180
以及对于不同，这个也不同，这个权限的人是不是做到了？

122
00:08:15,270 --> 00:08:20,580
丞丞相控制，比如说可能一个低产线的人我是没法对对系统做一些

123
00:08:20,700 --> 00:08:21,450
好了

124
00:08:22,440 --> 00:08:25,080
做一些啊更高权限的这个操作

125
00:08:26,310 --> 00:08:29,850
还有一点就是这个硬件方面，也就是说我们这个

126
00:08:29,855 --> 00:08:34,080
呃，采购硬件的时候是不是考虑了这个啊？硬件的质量

127
00:08:34,085 --> 00:08:36,750
是不是足够足够足够好？

128
00:08:37,080 --> 00:08:42,210
包括呃第三方的服务，比如说这个网络的供应商等等

129
00:08:42,450 --> 00:08:47,760
最后一点呢，就是这种我们这种所谓建筑建筑施工队挖掘机

130
00:08:47,765 --> 00:08:53,070
比如说我们经常会听到某某某某建筑，就是在在在施工的时候

131
00:08:53,075 --> 00:08:56,790
把这个光鲜花缎那我们这点在设计的时候其实

132
00:08:56,820 --> 00:08:59,820
是系统设计的时候也需要去把它考虑进去

133
00:09:04,230 --> 00:09:09,540
额，接下来呢，我们以马斯克为例来看一下这个我们常见的一些高考

134
00:09:09,545 --> 00:09:10,440
不用发

135
00:09:12,780 --> 00:09:14,970
额，首先是一部复制

136
00:09:15,930 --> 00:09:21,240
所谓异步复制呢？就是当客户端发到发发起请求，然后到

137
00:09:21,245 --> 00:09:24,060
这个主角主角点的时候

138
00:09:24,065 --> 00:09:27,150
呃，主角点在写写写入这个请求

139
00:09:27,360 --> 00:09:32,670
完成之后就会返回给这个客户端这个告诉他这个写入成功了然后会

140
00:09:32,675 --> 00:09:37,980
去呃一部的去维护一个队列去把这个请求发发送给我们的这个重建点

141
00:09:37,985 --> 00:09:40,620
然后从这边去啊，写出这个请求

142
00:09:41,370 --> 00:09:43,350
上面它的好处就是说

143
00:09:43,800 --> 00:09:49,110
呃，因为他其实主角点写入之后就可以返回了，所以它的性能其实是接近

144
00:09:49,115 --> 00:09:50,640
有一个单据的性能

145
00:09:50,850 --> 00:09:53,820
但那么它的问题就是说啊！

146
00:09:54,030 --> 00:09:57,540
当我的这个一个主节点挂掉之后

147
00:09:58,260 --> 00:10:03,570
是因为这个数据同步是一个抑恶的，那我们其实是没法保

148
00:10:03,575 --> 00:10:07,920
这种这个从节点上跟主角点上的这个数据是实时一致的

149
00:10:07,925 --> 00:10:12,090
所以可能当把这个总结点升主之后，我们会发现可能会

150
00:10:12,180 --> 00:10:13,410
丢了一部分数据

151
00:10:17,130 --> 00:10:19,410
然后第二种就是同步复制

152
00:10:19,530 --> 00:10:24,780
同步复制，就是说当这个客户端发起一个请请求之后，然后

153
00:10:24,930 --> 00:10:30,240
在主题里面写写完这个请求以后必须要等到这个从节点也写完这个题

154
00:10:30,245 --> 00:10:30,930
球

155
00:10:30,935 --> 00:10:36,240
我们才能把这个请请求完成的这个响应去哦返回对这个

156
00:10:36,330 --> 00:10:37,170
客户端

157
00:10:38,280 --> 00:10:39,960
然后他所她所

158
00:10:40,080 --> 00:10:45,390
她他所呃呃呃存在的问题就是说因为这个啊，从主角演到这这个

159
00:10:45,630 --> 00:10:50,880
从这点是需要通通信的，所以可能会带来一些这个性能上的开销

160
00:10:50,970 --> 00:10:52,260
另外就是说

161
00:10:53,310 --> 00:10:55,950
当我们这个网络发生的隔离

162
00:10:55,980 --> 00:10:57,960
对于主节点来说

163
00:10:57,965 --> 00:11:03,210
因为已经破坏了这个原有的这个写入的这个流程，那么我们需要去考虑

164
00:11:03,215 --> 00:11:07,410
这个时候，我们的一个主题是，是否需要是否可以去继续提供服务？

165
00:11:07,620 --> 00:11:09,510
耳朵与这个从起点来说

166
00:11:09,540 --> 00:11:14,850
她他需要考虑的就是说啊，如果这个主节点正正正正的挂掉了

167
00:11:15,150 --> 00:11:20,460
那我们是需要去呃，生活的那么如果这个只是短暂的，这个我们

168
00:11:20,465 --> 00:11:25,260
网络隔离那这个时候我们是要决定这个从接点是否需要升

169
00:11:25,265 --> 00:11:25,860
住的

170
00:11:25,865 --> 00:11:27,420
如果嗯

171
00:11:27,630 --> 00:11:32,940
如果我们把这个就是这样生出了，那么我们后面后面还可能会面临到这些一些数据的

172
00:11:33,330 --> 00:11:35,820
啊勇云或者去重庆这些工作

173
00:11:40,530 --> 00:11:45,840
而无论是上述的两两种两种情况，其实都是很难保

174
00:11:45,900 --> 00:11:51,210
保证这个数据的一致性的，因为其实可以同步复制来说，如果中间发生了网络隔离

175
00:11:51,450 --> 00:11:54,210
呃，其实也相当于是这种就是

176
00:11:54,215 --> 00:11:57,600
啊类似于这种退化成了一个异步复制的一个状态

177
00:11:57,630 --> 00:12:02,940
而并且他其实对对于故障的转移是非非常难以去

178
00:12:03,450 --> 00:12:04,230
呃

179
00:12:04,530 --> 00:12:05,370
好两个

180
00:12:09,060 --> 00:12:13,650
接下来看一下这个袜子的是love的是怎么样做到这个？

181
00:12:13,655 --> 00:12:14,850
啊，高考用的

182
00:12:18,270 --> 00:12:23,580
首先我们看一个图，然后这个是一个比比较就是啊！

183
00:12:24,150 --> 00:12:27,930
整体的一个关于科普的，一个个具体的流程

184
00:12:27,990 --> 00:12:33,300
首先，呃，整个让让她其实可以分为哪三个部分，第一个就是这个红色的

185
00:12:33,900 --> 00:12:36,030
所以说和某种第二个就是唠嗑

186
00:12:36,360 --> 00:12:40,680
然后第三个就是这个蓝色这个部分叫做c这么性

187
00:12:42,090 --> 00:12:47,400
对于每一个绿矿来说，我们其实都可以理解成他是一个节点，然后当

188
00:12:48,360 --> 00:12:49,140
因为

189
00:12:49,320 --> 00:12:50,160
然后

190
00:12:50,340 --> 00:12:55,650
12分这个矛盾呢？其实她会呃他其实是一个共识算法，然后

191
00:12:55,710 --> 00:13:01,020
她他它其实包含了包括选举以及这种恶对于请求答案

192
00:13:01,025 --> 00:13:02,550
成一个共识的一个作用

193
00:13:03,960 --> 00:13:07,680
比如说，当这个图案呈鄂发了一个请求，我们首先会

194
00:13:07,685 --> 00:13:12,990
这个请求去呃呃呃，因为这个请求会发给力的，然后这个时候呢，利益的需要

195
00:13:12,995 --> 00:13:16,140
去跟其他的菠萝味儿达成一个共识

196
00:13:16,145 --> 00:13:21,450
当达成这个共识之后呢，他会把这个星球去写道，这个报告当中，所以

197
00:13:21,455 --> 00:13:26,760
我们就可以认为，如果当这个请求打就是达成的共识，那么他们这个浪漫

198
00:13:26,765 --> 00:13:28,110
到个中其实是

199
00:13:28,200 --> 00:13:29,550
一一致的

200
00:13:29,555 --> 00:13:30,330
然后

201
00:13:30,335 --> 00:13:35,640
再会把这个闹钟的这个具体的这个请请求对所含的内容去

202
00:13:35,790 --> 00:13:39,090
给他义务地去运用到这个这个

203
00:13:39,120 --> 00:13:44,430
状态机里面，然后我们可以理解为就是一旦这个唠唠嗑被，嗯，应用到这个

204
00:13:44,435 --> 00:13:48,420
装在这里面了，我们就认为这个数据在这个时刻

205
00:13:48,510 --> 00:13:50,610
呃，是一致的

206
00:13:55,320 --> 00:13:56,070
我觉得

207
00:14:00,780 --> 00:14:01,380
我不知道

208
00:14:06,090 --> 00:14:06,690
我不知道

209
00:14:11,400 --> 00:14:14,040
然后嗯

210
00:14:14,610 --> 00:14:19,920
关于呃袜子的其实他是有几个关键的概念的，首先是恶劣的人选

211
00:14:20,550 --> 00:14:24,690
然后让他们当中，呃里的都是通过投票产生的

212
00:14:24,810 --> 00:14:30,060
当出现这种宕机或者网络隔离的情况下，如果这个力量

213
00:14:30,210 --> 00:14:35,520
所在的机器挂掉了，或者是说这个理这个备忘就是由于网络的问题被隔离掉了，那这个

214
00:14:35,525 --> 00:14:37,860
的时候，其他的过论文就会重新

215
00:14:38,130 --> 00:14:40,590
发起选举去选举新的理解

216
00:14:40,860 --> 00:14:45,210
他们对于落的复制来说，第二个关键案件就是那个复制对于

217
00:14:45,240 --> 00:14:50,550
这个那个绘制来说额利润会接受这个可负担的请求，然后在本地追加这个

218
00:14:51,120 --> 00:14:56,430
日志，然后同时呢，它会把这个日志去发送给这个啊，其他的锅炉

219
00:14:56,435 --> 00:15:01,740
如果发现除了微商的日志，跟自己不一样，然后离了，会把自己的日子去

220
00:15:01,800 --> 00:15:04,200
覆盖掉这个花落为当中的这个日志

221
00:15:05,520 --> 00:15:07,950
那么，这部当中还有一些呃

222
00:15:08,010 --> 00:15:13,320
这个比较重要的约束，首先是这个历史是必须要满足这个大多

223
00:15:13,325 --> 00:15:18,630
数的这个呃节点的这个啊，同意的也就是说他必须要听

224
00:15:18,635 --> 00:15:23,940
收到这个一半以上的，这个投投票，他才能去呃，成为一个利润

225
00:15:24,510 --> 00:15:27,630
其次呢，就是说这个落后的复制势必需要

226
00:15:27,780 --> 00:15:33,090
而成功去呃，复制到一半接连以上我们才认为这条路口是有效的

227
00:15:34,020 --> 00:15:36,270
还有一个就是说啊！

228
00:15:36,300 --> 00:15:39,780
只有这个持有这个最新日志的节点，我们才

229
00:15:39,810 --> 00:15:42,300
才才才才才才可能成为丽的

230
00:15:45,810 --> 00:15:51,120
接着我们看一下这个关于这个袜子的这个搞高可用和一致性

231
00:15:52,290 --> 00:15:57,600
首先要看一下故障恢复，嗯，假设我们现在集群中这个少数的部落文化掉

232
00:15:57,605 --> 00:16:02,910
其实它并不会影响这个啊，理解是错误的，因为其其实我们可以从刚刚的说

233
00:16:02,915 --> 00:16:05,040
这个数也可以看到他并不会

234
00:16:05,100 --> 00:16:09,750
当少数的一个弗洛尔挂掉之后，他并不会影影响我们这个破坏我们

235
00:16:09,990 --> 00:16:15,300
刚刚说的提到的那个约束，也就是说这个时候集群中还是有

236
00:16:15,305 --> 00:16:17,190
大多数是几点可以去？

237
00:16:17,220 --> 00:16:21,030
对绿豆进行选举，以及这个呃

238
00:16:21,120 --> 00:16:26,430
日志的这个也也也也也存在大多数可以去写入的

239
00:16:30,030 --> 00:16:32,190
然后假设我们这个历史

240
00:16:32,250 --> 00:16:37,560
发生了故障，或者是被隔离的时候，然后后喉咙喉咙就会通过这个心跳的人

241
00:16:37,565 --> 00:16:38,610
这个机制

242
00:16:38,670 --> 00:16:43,980
然后我们会然后这个网络我就会发现这个历史可能已经不在了然后他就会重新去了

243
00:16:45,000 --> 00:16:46,530
开启新闻的选举

244
00:16:46,830 --> 00:16:50,730
当这个啊军训中还有一半以上的这个副本

245
00:16:50,760 --> 00:16:56,070
呃，存活的时候，那么这个时候是一定可以选出里的人，所以这个时候是不？

246
00:16:56,075 --> 00:16:56,760
会

247
00:16:56,940 --> 00:16:58,320
的影响服务的

248
00:16:59,700 --> 00:17:05,010
对于数据的一致性来说，首先因为我们在写入数据的时候，第一段会保持

249
00:17:05,015 --> 00:17:05,610
是吗？

250
00:17:05,615 --> 00:17:10,920
这个日志是会被复制到大多数的缺点的时候，所以当这个时候

251
00:17:10,925 --> 00:17:14,400
之后，当这个一部分的节点发生的隔离的时候

252
00:17:14,520 --> 00:17:19,830
我们只要有111半以上的阶段还活着，那么我们就可以把保证

253
00:17:19,835 --> 00:17:25,140
这个至少有一个节点是包含最新的日志的，因为我们呃之前的

254
00:17:26,490 --> 00:17:31,800
之前我们的那个约束就是说啊，这个理解必须要这个日志必须要

255
00:17:31,805 --> 00:17:37,110
等到这个大多数节点去复制完成之后，这个日志才有效的，所以说

256
00:17:37,115 --> 00:17:41,730
时候只要还有一般节点存活，那么其中至少是有一个节目是包含最新的

257
00:17:42,060 --> 00:17:43,110
然后我们又

258
00:17:43,115 --> 00:17:48,420
有有之之前的那个约束说这个阶段是只能从这个包含最新的

259
00:17:48,425 --> 00:17:50,340
这是这个节点东西选出来的

260
00:17:50,345 --> 00:17:53,820
所以这个时候是不会发生这个数据的丢失的

261
00:17:58,530 --> 00:17:59,130
我不知道

262
00:18:00,270 --> 00:18:05,580
然后我们再看一下这个呃，关于副本的这个这边有一个问题

263
00:18:05,640 --> 00:18:10,950
就是说，如果我们使用这个三副本的配置啊，是否这个只要还有一个佛？

264
00:18:10,955 --> 00:18:13,200
本存活就能撑场的工作呢？

265
00:18:13,380 --> 00:18:16,080
那么，答案肯定是饿不是的

266
00:18:16,710 --> 00:18:18,540
因为我我们

267
00:18:18,600 --> 00:18:23,910
因为绕口的其实并不是说这个啊，把433负副本

268
00:18:23,915 --> 00:18:24,750
都是

269
00:18:24,755 --> 00:18:30,060
一定要保证他去写入的，因为我们只要有大多数写入成功了之后

270
00:18:30,065 --> 00:18:34,440
我们就认为这个日日知识有效的了，所以这个时候如果说

271
00:18:35,520 --> 00:18:40,830
呃呃嗯嗯，如果说我有三三个副本的话，那么两

272
00:18:40,835 --> 00:18:46,140
其中两个可能写入了那么剩下的一个可能是啊，就是因为某种原因

273
00:18:46,320 --> 00:18:48,210
导致还落后了，那这个时候

274
00:18:48,540 --> 00:18:49,470
如果

275
00:18:49,475 --> 00:18:51,210
啊挂掉的是？

276
00:18:51,600 --> 00:18:53,760
呃，两个最新的那个

277
00:18:54,630 --> 00:18:57,630
这个时候其实会有这个数据不一致的问题

278
00:19:04,590 --> 00:19:09,900
呃，这个我们来看一下关于AI利弊的一些高可用的一些呃

279
00:19:09,905 --> 00:19:10,590
概念

280
00:19:12,630 --> 00:19:17,940
呃，在看这个，关于他这个高考用的这个一些概念的，之前我们现在了解

281
00:19:17,945 --> 00:19:21,360
一下这个多副本当中的这个一致性模型

282
00:19:21,930 --> 00:19:27,240
一一致性模型，其实主要分为了三种啊强抑制性弱于性

283
00:19:27,245 --> 00:19:29,070
以及这个最终一执行

284
00:19:29,075 --> 00:19:34,380
强一致性啊，就是说当这个数据一旦被写入了，那么它在任意的时候都是能读的

285
00:19:34,385 --> 00:19:35,700
这个最新的侄子

286
00:19:36,330 --> 00:19:41,640
能说一些知心与强制性性就完全相反，就是说他一旦写了这个

287
00:19:41,645 --> 00:19:44,040
写入之后，其实他他是不是不保证？

288
00:19:44,045 --> 00:19:48,630
这个是在认识可能读出来的，她甚至有可能都读不出来

289
00:19:49,290 --> 00:19:54,600
那最终一致性呢？就是说当写入一个星期之后，我保证在某个

290
00:19:54,605 --> 00:19:56,250
抽时间上好之后

291
00:19:56,370 --> 00:20:01,680
我是肯定的是，能读出来的，但是在这个时间窗口之内，我是不能保证他是不是能读出来？

292
00:20:06,390 --> 00:20:09,150
然后关于cap和高可用

293
00:20:09,840 --> 00:20:14,460
CP，其实是这个分布式的系统理论的这个基石

294
00:20:14,520 --> 00:20:19,830
呃CC呃，其中c代表的就是一致性，a代表的是可用性而被代表的是这个

295
00:20:19,950 --> 00:20:21,330
分区容错性

296
00:20:21,420 --> 00:20:26,730
对于我们常见的那种单机型数据库，其实还是处于CA的，他是没办法

297
00:20:26,735 --> 00:20:30,180
对这个处理这个网络合理的这个问题的

298
00:20:30,210 --> 00:20:35,520
而对于像第三者或者coach db，这些是属于AP AA PA系统

299
00:20:35,820 --> 00:20:41,130
然后他其实是选用的这个是最终一致性的，这个恶魔型，然后他

300
00:20:41,135 --> 00:20:46,440
他他利弊呃，他太太为了，其实适用于选择的是一个叫做c

301
00:20:46,445 --> 00:20:48,630
T的模型，然后呃

302
00:20:48,870 --> 00:20:52,020
并且是呃，尽可能去做到这个AK的

303
00:20:56,160 --> 00:21:00,540
那么我们为什么会选择这样一个CP+AC的这个？

304
00:21:00,545 --> 00:21:02,160
呃，系统的这个

305
00:21:02,190 --> 00:21:04,590
自己类型的，首先我们是需要去

306
00:21:04,595 --> 00:21:06,780
啊，因为泰迪必须金融蛮随口的

307
00:21:06,870 --> 00:21:12,180
所以我们都可以不用去考虑，最终比如说像AA这种

308
00:21:12,300 --> 00:21:14,820
RAP类型的这种系统的这种

309
00:21:15,300 --> 00:21:20,610
一致性模型需要去额外的去对啊，修改一些啊这种业务

310
00:21:20,615 --> 00:21:22,950
去去考虑这种啊！

311
00:21:23,130 --> 00:21:28,440
事物的这种模型的，这种系统的这种啊，这种一次性的这种模型

312
00:21:29,700 --> 00:21:35,010
然后其次呢，就因为系统不管无论如何？其实是不存在这种100%的可用性

313
00:21:35,015 --> 00:21:37,320
现在比如说啊，这种

314
00:21:37,380 --> 00:21:38,070
这种

315
00:21:38,370 --> 00:21:43,680
虽然在看，其实是我们是完全没法避免的，所以我们之所以选择这样的

316
00:21:44,730 --> 00:21:49,110
这样的模型其实是啊，可以保证在这种

317
00:21:49,470 --> 00:21:54,180
CP的热的情况下，我们尽可能的去减少他的这种呃呃

318
00:21:54,390 --> 00:21:57,720
这种减少他的这种不可能的这种事件

319
00:22:01,710 --> 00:22:07,020
然后太太委这边是使用到了一个额，我们叫做毛腿若因因为对于太太

320
00:22:07,025 --> 00:22:12,330
这个当中的to I6，其实是一个有序的，我们会根据这个呃

321
00:22:12,335 --> 00:22:15,030
按照这个ty的，按照这个大小

322
00:22:15,120 --> 00:22:15,930
这个哦

323
00:22:16,200 --> 00:22:21,510
会按照这个大概范围，然后根据大小去把它划分成一个月

324
00:22:21,515 --> 00:22:22,500
真的睿智

325
00:22:22,560 --> 00:22:27,870
然后这些瑞士嗯嗯，就是这个约诊包含他的副本去说

326
00:22:27,875 --> 00:22:31,260
我们就是饿叫做饿组成了一个圈子的

327
00:22:31,500 --> 00:22:36,810
然后对于啊，袜子都有负责节点来说，它其实是一个多对人多的关系，就是说

328
00:22:36,815 --> 00:22:42,120
这个节点上可能会包含很多很多的这个挖土尔，而一个吖噗噗噗噗噗噗当中的这个

329
00:22:42,125 --> 00:22:46,620
这个啊个个的这个副本也可能会散落在不同的节点去上

330
00:22:47,580 --> 00:22:51,600
然后她可能是一个比较随机的，这个一个状态

331
00:22:53,700 --> 00:22:59,010
那这边有一个问题就是说如如果是3300副本配置的，这个太嘿黑黢黢

332
00:22:59,015 --> 00:23:04,320
是不是只要这个？有一半以上的这个KTV呃呃，还活着

333
00:23:04,325 --> 00:23:05,790
它就能正常工作了

334
00:23:05,910 --> 00:23:07,590
其实也不是的

335
00:23:07,680 --> 00:23:12,990
因为当一个太kv节点发生故障的时候，因为他上面有可能会包含有多个

336
00:23:13,440 --> 00:23:14,310
抓兔子

337
00:23:14,370 --> 00:23:18,300
他们所所有包含这这个

338
00:23:18,660 --> 00:23:23,970
所有这个在这个家故障节点上的睿智呢，他就会同时去少少了一个副本

339
00:23:23,975 --> 00:23:28,200
他们此时如果另一个节点发生了故障，那么跟之前

340
00:23:28,205 --> 00:23:29,880
发生故障的这个节点

341
00:23:30,570 --> 00:23:35,880
所包含的这个微诊呢？很可能是会有交集的，所以这个时候可能就是

342
00:23:35,885 --> 00:23:41,190
所以存在有两个副本都不可用的情况，那么根据我们之前说的

343
00:23:41,430 --> 00:23:43,290
呃，其实这个时候这个

344
00:23:43,320 --> 00:23:45,690
对于这个阿不不不不，太其实是

345
00:23:45,720 --> 00:23:46,740
可以服务的

346
00:23:52,890 --> 00:23:57,060
那么，针对这种问题呢？其实我们可以看到啊！

347
00:23:57,090 --> 00:23:59,580
呃，虽然我们这个

348
00:23:59,640 --> 00:24:00,390
就是

349
00:24:00,600 --> 00:24:03,030
呃，看起来这些呃

350
00:24:03,035 --> 00:24:08,070
护照可能是完全独立的一个事件，但其实他呃

351
00:24:08,100 --> 00:24:09,150
吃

352
00:24:09,270 --> 00:24:14,580
不完全是一个随机独立的时间，比如说呃，我们有两台这个

353
00:24:14,585 --> 00:24:17,010
节点是不是在同一个机架上的？

354
00:24:17,250 --> 00:24:19,110
那么，如果当这个机架

355
00:24:19,260 --> 00:24:24,570
这个调调了，那么它可能就开始故障了，所以他并不是一个完全随机读

356
00:24:24,575 --> 00:24:25,680
福利的一个事件

357
00:24:26,820 --> 00:24:32,130
所以针对这个问题呢？我们其实是有一个优化，就是说我们可以为这个在部署

358
00:24:32,135 --> 00:24:37,020
有的时候我们可以这个为这个每个台词背去打上这个不同的标签

359
00:24:37,170 --> 00:24:39,930
然后霹雳呢，会根据这个呃

360
00:24:40,770 --> 00:24:46,080
他对于上面的这个标签呢，去将这个服副本去按照这个标签

361
00:24:46,085 --> 00:24:48,570
所制定的这个规则去进行一些调度

362
00:24:48,690 --> 00:24:54,000
然后它所带来的好处就是说我们可以去屙容忍，就是不同级别的车

363
00:24:54,360 --> 00:24:58,110
啊部长比如说呃，我们将

364
00:24:58,170 --> 00:25:03,480
我们可以去屙挂掉呃，通过配置这个标标签，我们可以

365
00:25:03,485 --> 00:25:07,710
去容忍他去挂掉一个机房或者是挂掉一个机甲

366
00:25:07,715 --> 00:25:08,400
这样子

367
00:25:13,110 --> 00:25:13,710
我不知道

368
00:25:17,610 --> 00:25:22,920
然后最后来说一下这个关于他对比的这个高手用太低温了，其实是容忍

369
00:25:22,925 --> 00:25:28,230
在一定限度内的这个节点的这个当期或者合理的所谓这个一定限度，就是说

370
00:25:28,235 --> 00:25:31,770
呃，我们要至少保证这个呃

371
00:25:31,890 --> 00:25:33,900
存活这个半数以上的副本

372
00:25:35,430 --> 00:25:40,740
另外呢，就是我们不是不能保证这个所有的决定，同时提供服务

373
00:25:41,130 --> 00:25:44,910
比如说我我有一台他弟弟，所以挂掉了

374
00:25:44,970 --> 00:25:47,520
或者是说呃，可能被

375
00:25:47,525 --> 00:25:52,830
隔离掉了，那这个时候呢？我们其实是无法保证它继续提供服务的，那这个时候

376
00:25:52,950 --> 00:25:58,260
可能是需要去业务方去做配合去把这个流量从这个这个挂掉

377
00:25:58,265 --> 00:26:03,570
这个特点比所谓的其他其他的这个太吏律上面，或者是做一些比如说

378
00:26:03,575 --> 00:26:05,820
将来医学科普，把自己讲的

379
00:26:06,600 --> 00:26:07,260
工作

380
00:26:08,850 --> 00:26:14,160
那么第三点呢？就是说对于故障的时候，转移过程中性能开销可能会导致

381
00:26:14,165 --> 00:26:15,960
让这个服务器

382
00:26:16,290 --> 00:26:21,600
因为其实呃呃，无论是这个PT调度也好，或者是其其他

383
00:26:21,605 --> 00:26:25,050
那这种不负责的操作也好，其实它带来的就是说

384
00:26:25,200 --> 00:26:30,390
哦，我们可能会占用这个磁盘的这种lo或者是一些好计算资源

385
00:26:30,450 --> 00:26:35,760
另外呢，比如说泰迪b在访问台北的时候，呃，如果发生这个台词背

386
00:26:36,210 --> 00:26:37,680
就是这个

387
00:26:37,685 --> 00:26:42,990
理解点化疗，那他可能会，他就会会采取之后白豆腐这种鄂城市区

388
00:26:42,995 --> 00:26:43,650
地址

389
00:26:44,160 --> 00:26:49,470
所以她可能会在这个呃，这个业务上面看看来可能会有一些

390
00:26:49,950 --> 00:26:50,730
哦哦

391
00:26:50,970 --> 00:26:52,920
带来多少会有一些延迟

392
00:26:54,660 --> 00:26:57,810
然后最最后一点呢就是说啊！

393
00:26:57,900 --> 00:27:03,060
我们其实嗯嗯，就是一一致性呃呃，是么？

394
00:27:03,150 --> 00:27:06,270
就是要有优先与这个可用性的

395
00:27:06,330 --> 00:27:11,640
因为其实对于呃他利弊来说，如果你不能保证这个啊！

396
00:27:12,180 --> 00:27:15,690
数据的这个墙仪式那么其实我们就是应该去学服务的

397
00:27:15,810 --> 00:27:19,950
因为与其不能服务肯定要比这个

398
00:27:20,880 --> 00:27:25,140
呃，提供一个这个错误的，这个数据也好

399
00:27:26,790 --> 00:27:32,100
那么，我们也提供了一些工作，就提提提供了一些工具就是可以嗯

400
00:27:32,910 --> 00:27:35,400
让用户可以去啊！

401
00:27:35,640 --> 00:27:40,950
做一些力量恢复的，那么这个时候用户需要知道的就是说啊，我在进行这个站

402
00:27:40,955 --> 00:27:45,450
恢复的时候，其实我是放弃了这个新系统的一致性的

403
00:27:50,160 --> 00:27:50,760
我不知道

404
00:27:51,720 --> 00:27:54,810
呃，最后呢，我们来讲一些

405
00:27:54,815 --> 00:27:58,350
这个关于跨数据中心的这个啊，部署方案

406
00:28:01,140 --> 00:28:05,910
首先，第一种是这种三中三三数据中心的这种部署方案

407
00:28:06,000 --> 00:28:10,650
就是每一个呃数据中心呃，他可能位于

408
00:28:10,710 --> 00:28:16,020
一一个城市，然后呃，完完全全部署一套，只有包括pdddd

409
00:28:16,080 --> 00:28:17,220
一台kv

410
00:28:18,390 --> 00:28:20,610
站内的一个呃中心

411
00:28:22,230 --> 00:28:27,540
然后她他的好处就是说我允许我一个中心呃呃

412
00:28:27,720 --> 00:28:31,020
呃，就是一个城市的一个数据中心挂掉

413
00:28:31,080 --> 00:28:35,730
然后它所带来的问题就是说，因为泰迪必须在

414
00:28:36,000 --> 00:28:41,310
写的时候会从pp去拿两次，这个tho毒的时候也需要去拿一次那么

415
00:28:41,315 --> 00:28:43,020
他其实哦

416
00:28:43,230 --> 00:28:44,250
在这个

417
00:28:45,030 --> 00:28:50,340
跨跨跨地区的这个网络传输中，其实是有很大的开展

418
00:28:50,345 --> 00:28:51,060
销售

419
00:28:51,090 --> 00:28:54,600
然后包括她弟弟弟房子太卑微了这个啊！

420
00:28:54,605 --> 00:28:59,910
呃，厉害的时候也是需要去跨网络传输的，包括泰特威之间的这个

421
00:28:59,915 --> 00:29:05,220
差不多就这些想像相关的一些操作，其实都是需要走网络的

422
00:29:05,520 --> 00:29:06,210
他们

423
00:29:06,240 --> 00:29:09,780
如果采用这种方式，不熟的话，其实对于网络的开销

424
00:29:09,810 --> 00:29:12,960
啊，网络所带来的这个影响是非常大的

425
00:29:17,670 --> 00:29:18,270
我不知道

426
00:29:19,590 --> 00:29:24,900
然后这边我也是刚才提到就是他允允许这个某一地的就

427
00:29:24,905 --> 00:29:26,790
机房啊挂掉

428
00:29:27,120 --> 00:29:30,630
那这个时候回去将呃，这个

429
00:29:31,020 --> 00:29:36,330
无论是pp也好，或者太妃妃好好的，可以将这个力的迁移在其他其他迁移到其他的

430
00:29:36,335 --> 00:29:37,860
这个数据中心

431
00:29:37,980 --> 00:29:39,810
然后继续对外挺服务

432
00:29:43,140 --> 00:29:48,450
然后针对刚刚这个网络所带来的就开销呢？其实我们这边是

433
00:29:48,455 --> 00:29:53,760
针对独立是有一个优化的，我们可以通过这个霹雳的这个优先级

434
00:29:53,765 --> 00:29:56,790
或者是通过他的这个呃

435
00:29:56,880 --> 00:30:02,190
调度将这个太特别的这个理解可以去啊，调度到同同一个，这个数据中心

436
00:30:02,490 --> 00:30:03,600
他们这个时候

437
00:30:03,605 --> 00:30:06,600
啊泰迪必须PK去拿t so

438
00:30:06,660 --> 00:30:11,970
以及去跟这个KTV去做交互，其实是就是可以减少这个网

439
00:30:11,975 --> 00:30:13,590
说的这个通信

440
00:30:13,890 --> 00:30:19,200
但是呃，对于血来说，呃，也是无法避免这个态度为之

441
00:30:19,205 --> 00:30:21,180
连这个辣粉的辣个的，这个头部的

442
00:30:27,990 --> 00:30:32,010
然后这边就是刚刚说的那个关于独的一个有好

443
00:30:36,720 --> 00:30:37,320
我不知道

444
00:30:39,630 --> 00:30:41,310
然后嗯

445
00:30:41,580 --> 00:30:46,890
还有一种就是两这种两地三中心的部署，也就是说哦，我两个数据中心是

446
00:30:46,895 --> 00:30:48,990
在同城的

447
00:30:49,200 --> 00:30:54,150
然后另一个数据中心放在另一个城市的，那么这样的好处就是说

448
00:30:55,890 --> 00:30:57,450
对于啊！

449
00:30:57,690 --> 00:31:03,000
我我不需要去这个在这个跟这个刚之前的那个顿优化一样

450
00:31:03,005 --> 00:31:04,800
就是我不需要去找这个

451
00:31:04,920 --> 00:31:08,400
呃，对于读来说，我不需要去走这个网络

452
00:31:08,405 --> 00:31:10,380
因为他的所有的这个理解

453
00:31:10,410 --> 00:31:15,720
包括霹雳雳的或者太多的历史，都是在同同同同的这个就是

454
00:31:15,780 --> 00:31:21,090
就是拥有这个两个中心的这个城市的，那么他们这个同城的这个网络开销其实是钥匙

455
00:31:21,095 --> 00:31:23,040
很多，另外就是

456
00:31:24,870 --> 00:31:30,180
它的可用性可能会相比啊，之前的那种3d，三中心的故事，我可能会

457
00:31:30,450 --> 00:31:35,760
理论上可能会差一点，因为毕竟我们是两个数据中心，是在一个城市的那么

458
00:31:35,765 --> 00:31:36,960
如果这个

459
00:31:38,040 --> 00:31:40,830
这个城市可能会发生一些啊！

460
00:31:41,100 --> 00:31:44,700
啊，自然灾害或者是其他什么的，那这个时候其实

461
00:31:44,705 --> 00:31:46,830
和可用性是会饿

462
00:31:47,550 --> 00:31:50,550
可能会造成这个整个系统这个不好用

463
00:31:56,700 --> 00:32:02,010
然后他说的呃呃呃他其实有一个比较好的，相比三第三中心

464
00:32:02,015 --> 00:32:07,320
现在这个优势就是它可能呃，这个自由资源利用率会更高，高一点

465
00:32:12,030 --> 00:32:12,630
怎么办？

466
00:32:17,340 --> 00:32:17,940
我不知道

467
00:32:22,650 --> 00:32:23,250
我不知道

468
00:32:26,370 --> 00:32:31,590
然后还有一种就是这种两两种新疆兵二部的这种同步的方式

469
00:32:31,650 --> 00:32:36,960
也就是说，我每一个数据中心都完全就是完整的，不属于他这个太db集群

470
00:32:37,680 --> 00:32:41,280
然后通过这个冰冰落的去

471
00:32:41,285 --> 00:32:44,040
做一个义务的复制，其实她很

472
00:32:44,045 --> 00:32:46,620
就那个买进口的这个艺博会是其实

473
00:32:46,680 --> 00:32:48,450
呃，比较类似

474
00:32:53,160 --> 00:32:56,910
那好处就是说啊，就是说

475
00:32:58,410 --> 00:33:02,040
相比于买车后的好处，就是说如果我这个集群

476
00:33:02,160 --> 00:33:05,640
内部发生了这个故障，我们确实还是有这种

477
00:33:05,645 --> 00:33:07,230
啊，故障转运符

478
00:33:07,710 --> 00:33:09,840
自动恢复的，这种能力的

479
00:33:09,930 --> 00:33:15,240
他的问题就是说啊，跟买最后一样就是当这个主题群

480
00:33:15,300 --> 00:33:16,710
失效之后

481
00:33:17,850 --> 00:33:23,160
这个时候我们去把这个统计群群众主之后，可能会给跟马赛克一样有一定的

482
00:33:23,165 --> 00:33:25,980
这个数据是呃，丢失了这个问题

483
00:33:29,250 --> 00:33:34,560
还有一种方案就是呃，通过这个恶两句，这个还是两地？

484
00:33:34,565 --> 00:33:37,110
需要两种亲，然后通过这个冰浪

485
00:33:37,650 --> 00:33:40,350
新浪的方式去把互为主备

486
00:33:40,470 --> 00:33:44,370
那么它的好处就是说啊，相比于呃

487
00:33:45,600 --> 00:33:47,970
相比于之前啊！

488
00:33:48,360 --> 00:33:49,260
这是

489
00:33:49,440 --> 00:33:54,750
类似于买卖烧烤的一种艺术方式来说，他其实是有一个还装备份的这个

490
00:33:55,020 --> 00:34:00,330
养了这种功能，但是它有一个前提就是你的这个业务必须要是能够

491
00:34:00,335 --> 00:34:05,640
去做拆分能够去美美的是每个数据中心去访问

492
00:34:05,645 --> 00:34:07,410
自己的这个单独的一个库

493
00:34:11,280 --> 00:34:14,490
然后这边是一些相关的参考资料

494
00:34:19,200 --> 00:34:24,510
关于答疑安排，大家可以去登录我们的这个病害，我的这个官方网校

495
00:34:24,570 --> 00:34:26,940
可以通过这个屏幕的二维码去

496
00:34:27,090 --> 00:34:27,780
饿了

497
00:34:27,930 --> 00:34:28,620
关注

498
00:34:31,650 --> 00:34:32,940
好，谢谢大家

499
00:34:37,650 --> 00:34:38,250
我不知道

