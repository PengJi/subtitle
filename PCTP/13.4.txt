1
00:00:00,060 --> 00:00:05,370
嗯嗯嗯嗯嗯

2
00:00:10,860 --> 00:00:16,170
啊，我们今天就来讲一下那个泰迪逼的表关联算法那个相关的一些介绍

3
00:00:17,100 --> 00:00:21,870
然后昨天我那是在他弟弟CON gt负责那个

4
00:00:22,020 --> 00:00:25,710
按优化这边的主要是负责怎么让腐烂生成一个？

5
00:00:25,800 --> 00:00:28,680
怎么从原始的CS生成一个更好的普及？

6
00:00:29,460 --> 00:00:32,220
就客串来讲一下执行器这边的东西

7
00:00:33,480 --> 00:00:38,790
那这一次呢？主要就是讲一下泰迪逼中拥有的三个表关联

8
00:00:38,795 --> 00:00:39,960
的执行算子

9
00:00:40,260 --> 00:00:45,570
然后讲一下他们具体的执行原理，来方便大家更好地理解太低的执行计划

10
00:00:46,230 --> 00:00:49,680
也能更好地方便了解我那个在具体的

11
00:00:49,740 --> 00:00:52,770
这星期场景里面怎么选择这三个？

12
00:00:52,950 --> 00:00:54,480
作用的执行算子

13
00:00:54,990 --> 00:00:57,870
他他低于里面一共实现了三个重医算子

14
00:00:57,990 --> 00:01:03,300
一种是哈市咒语，然后另一个是梦而已，而第三种呢，是基于

15
00:01:03,390 --> 00:01:08,700
那个因代克斯的替代路由路由咒语对然后最后呢是几个简单的词

16
00:01:08,705 --> 00:01:12,840
场景比较来，稍微介绍一下这三种

17
00:01:13,050 --> 00:01:14,460
执行算法的优劣

18
00:01:15,270 --> 00:01:17,250
那第一种呢是哈士咒语？

19
00:01:17,310 --> 00:01:20,130
还是这个呢，就讲一下它的基本概念

20
00:01:20,220 --> 00:01:24,960
以及泰迪宾中的两种实现方式，那第二种目前还是在

21
00:01:24,990 --> 00:01:27,390
开发中的拿，目前在这边

22
00:01:27,570 --> 00:01:28,380
哎呀

23
00:01:28,385 --> 00:01:29,100
在

24
00:01:29,105 --> 00:01:31,980
伦理自动的只有第一种基本的还是周围？

25
00:01:32,550 --> 00:01:33,480
然后

26
00:01:33,660 --> 00:01:38,010
那第一那首先我们来了解一下它的基本的执行概念

27
00:01:38,130 --> 00:01:43,440
他是中医啊，他是忠于顾名思义，它肯定是要有一个哈市推广的，还在哈市中心

28
00:01:43,445 --> 00:01:47,220
里面呢，他就是根据他中意的等着条件

29
00:01:47,250 --> 00:01:50,070
来，首先必须对出一个哈士奇吧

30
00:01:50,460 --> 00:01:54,840
以这个例子来说，我们首先在里面选取一个表

31
00:01:55,020 --> 00:01:59,760
这里呢，就以t1为例，我们首先呢要读取其中的数据

32
00:02:00,210 --> 00:02:02,040
啊建立一个哈市推广

33
00:02:02,190 --> 00:02:07,050
等等，他设备建立完毕以后我们再开始读取tr的数据

34
00:02:07,140 --> 00:02:11,520
等妻儿的数据，然后我们每每一个圈儿的数据，每读到一行

35
00:02:11,525 --> 00:02:14,940
都在哈市微博里面去查一下

36
00:02:15,150 --> 00:02:20,460
这个还是CF里面有没有对应的一行如果有对应的一行的话？我们就考虑

37
00:02:20,465 --> 00:02:24,540
将这两行那个根据他那个上层需要的

38
00:02:24,545 --> 00:02:28,980
那个裂的情况，将它们拼出来一行，然后吐给上层算子

39
00:02:29,430 --> 00:02:34,500
那如果是奥特中意呢，他就是发现没有对应的值，它就还需要

40
00:02:34,560 --> 00:02:37,200
将另一边补充一个全套的值

41
00:02:38,040 --> 00:02:39,090
这样的话

42
00:02:39,330 --> 00:02:42,120
来满足她奥特周一的那个性质

43
00:02:43,980 --> 00:02:46,710
那如何选择一个哈士推广的？

44
00:02:46,830 --> 00:02:47,550
啊？

45
00:02:47,640 --> 00:02:52,560
如果他是因为周中用的话，我们肯定要选择的比较小的那边因为

46
00:02:52,620 --> 00:02:54,810
呃呃，必须的，他摔爆这个

47
00:02:54,900 --> 00:03:00,210
操作是堵塞的，如果我们去选择那个大的退回去，背后的她是推广的

48
00:03:00,215 --> 00:03:00,840
话

49
00:03:00,845 --> 00:03:06,150
咱们这个时候他一定要等着哈，师太普遍建立，完全之后，他才可以

50
00:03:06,155 --> 00:03:08,040
去读另一边的数据

51
00:03:08,045 --> 00:03:13,350
那所以呢，我们要选择比较比较小的那边去b的vivo这样

52
00:03:13,355 --> 00:03:15,720
他的必要的过程会比较快那

53
00:03:15,870 --> 00:03:21,000
那顿另一个表的数据的话，也就会能更早的去读到数据

54
00:03:23,370 --> 00:03:27,450
啊，这个图呢，就是泰迪犬中它是重要的一个

55
00:03:27,690 --> 00:03:29,250
大致的执行流程

56
00:03:29,430 --> 00:03:34,740
以这个例子为例，他这个例子里面是从t1跟t2做了一个作品，然后他呢？

57
00:03:35,130 --> 00:03:37,200
在t2这边有一个袭来时

58
00:03:37,680 --> 00:03:42,240
他这边是假定的梯这边是小婊砸梯这边是小表的话

59
00:03:42,540 --> 00:03:45,000
显然就是从梯这边

60
00:03:45,270 --> 00:03:50,070
上进入到哈市中医院，因为我可是里面，然后去b的一个哈市推广

61
00:03:50,400 --> 00:03:55,710
等这个哈哈，什么标的？完全之后大概去她他再去读另一边的数据

62
00:03:56,280 --> 00:03:59,700
然后每额将每一个数据都

63
00:03:59,970 --> 00:04:05,280
送到一个那个凹凸的窝窝里面，然后每一个倭寇儿子在这个城市里面做一个铺淘宝

64
00:04:05,285 --> 00:04:06,150
我的流程

65
00:04:06,420 --> 00:04:10,860
啊，从这个图里面可以看到她凹凸曼，可是并发的

66
00:04:10,950 --> 00:04:12,840
也就是说他在

67
00:04:12,845 --> 00:04:18,150
在那个因为这边虽然是一个堵塞的流程，但是当进入到奥特尔这边之后

68
00:04:18,155 --> 00:04:20,010
在这边可以一起多个算

69
00:04:20,015 --> 00:04:25,320
多个进程去并发的去下载在哈市内部里面去寻找数据

70
00:04:25,380 --> 00:04:30,630
这样的话，可以加速它的执行流程，然后这里还有一点需要注意的就是

71
00:04:30,900 --> 00:04:31,680
啊？

72
00:04:31,950 --> 00:04:37,260
有如图所示，他这个周一，哈哈哈，周一的话是要等他所有的计算都计算完全

73
00:04:37,265 --> 00:04:37,980
之后

74
00:04:38,010 --> 00:04:42,240
他才可以拿到它，才可以去向他的上层算子

75
00:04:42,360 --> 00:04:44,070
返回他的第一行数据

76
00:04:44,280 --> 00:04:45,390
他们如果

77
00:04:46,200 --> 00:04:47,760
如果我们是在

78
00:04:47,880 --> 00:04:51,060
那么，假设它这个时候它的凹凸这边

79
00:04:51,090 --> 00:04:54,630
底下并不是一个喜来生，而是一个哈市重印的话

80
00:04:54,750 --> 00:04:57,240
那么这个时候如果我们最开始

81
00:04:57,330 --> 00:04:58,530
没有去

82
00:04:58,590 --> 00:04:59,280
调

83
00:04:59,285 --> 00:05:04,590
这个怕是中隐去尝试拿它这个奥特尔沃克尔的第一行数据的话

84
00:05:04,595 --> 00:05:08,790
那这个时候他的整个运算流程都会被阻阻塞

85
00:05:08,795 --> 00:05:14,100
一直到你这个，因为这边哈斯to整个建立完全之后才会考

86
00:05:14,105 --> 00:05:19,410
去向向她的凹凸这边拿数据，因此他们这边这边就稍微做了一个

87
00:05:19,415 --> 00:05:20,220
而处理

88
00:05:20,370 --> 00:05:24,300
稍微做了一个处理，就是你在建立哈士奇后的时候

89
00:05:24,330 --> 00:05:29,640
一会就去调用一下，她凹凸这边的那个那个街口来去

90
00:05:30,150 --> 00:05:34,530
就让她一先把一些计算尽量的先做好，这样的话

91
00:05:34,590 --> 00:05:36,480
如果底下是一个哈士咒语

92
00:05:36,570 --> 00:05:41,880
然后你这边你这边在b的还是c货的时候调用一下，他这边的那个韩束

93
00:05:41,910 --> 00:05:47,220
虽然我们现在还没有没有办法拿他这边的数据去进行里面的

94
00:05:47,225 --> 00:05:48,420
具体的计算

95
00:05:48,425 --> 00:05:53,040
但是我们可以让下层的计算先预先进行这样的话

96
00:05:53,045 --> 00:05:55,920
啊，就整个流程就更加病情况了

97
00:05:57,180 --> 00:06:00,090
把接下来是它里面的两个

98
00:06:00,330 --> 00:06:05,640
跟他跟他说，以相关的两个环境变量啊，第一个呢呃，就一个一个环境

99
00:06:05,970 --> 00:06:08,220
啊，就是这个哈尔滨看看卡尔顿

100
00:06:08,670 --> 00:06:12,420
啊，他这个肯卡瑞斯的就是这边OK okok的数量

101
00:06:12,720 --> 00:06:18,030
啊默认的是五个，比如默认的时候会是由五个窝可并行的去

102
00:06:18,210 --> 00:06:20,880
叫他底下的算式拿到数据

103
00:06:20,970 --> 00:06:21,960
然后去

104
00:06:22,020 --> 00:06:24,480
像这个还是推广里面去做一个普洱吧！

105
00:06:24,485 --> 00:06:29,790
那如果觉得还是之后她他的执行流程比较慢的话，我们可以尝试调高

106
00:06:29,795 --> 00:06:30,630
这个

107
00:06:30,635 --> 00:06:34,290
他这个肯卡尔瑞斯这样的话，它的窝壳的数量也就高了

108
00:06:34,500 --> 00:06:37,380
然后他那个整个整个流，如果他

109
00:06:37,500 --> 00:06:42,810
啊，底下的数据返回，返回的速度比较快的话，那我我可是这边多了之后

110
00:06:42,870 --> 00:06:48,180
可以加入他的执行效率，那相相对应的让他窝可是多了之后

111
00:06:48,420 --> 00:06:53,730
使用的内存也会增高，因为这个时候也会增加他那个奥特曼

112
00:06:53,735 --> 00:06:54,780
悠悠的风险

113
00:06:54,870 --> 00:06:57,300
我们这个也是一个需要权衡的地方

114
00:07:00,840 --> 00:07:01,710
然后呢？

115
00:07:01,800 --> 00:07:06,420
就这里呢，就顺便简单的介绍一下，正在开发中的抓地，他受益

116
00:07:06,600 --> 00:07:10,170
那正如前面这个图，前面这个图上讲的这样

117
00:07:10,230 --> 00:07:14,580
他在六个哈哈co的时候目前他这边是一个单线程的流程

118
00:07:14,760 --> 00:07:15,450
啊？

119
00:07:15,690 --> 00:07:21,000
如果我们想要加速他的话，那一种方法就是将这个还是co变成一个

120
00:07:21,005 --> 00:07:23,670
变成安全的东西啊，这个其实会

121
00:07:23,880 --> 00:07:26,640
非常严重的磨损，它还是鲜活的

122
00:07:26,670 --> 00:07:27,630
那个效率

123
00:07:28,140 --> 00:07:33,300
就在一篇paper里面，他提出了一个提出了一个算法流程

124
00:07:33,360 --> 00:07:34,200
就是

125
00:07:34,470 --> 00:07:39,780
他首先会预先将因而儿的那里面的数据整体的扫

126
00:07:39,785 --> 00:07:45,090
一遍打扫一遍之后就可以获取到，因而数据的大致的一个分布

127
00:07:45,480 --> 00:07:48,420
那获取到分布之后，他可以

128
00:07:48,540 --> 00:07:53,850
可以将音乐的数据进行一个预那个郁郁那个预分区

129
00:07:53,855 --> 00:07:59,160
这样的话啊，每一个分区的把每一个分区的还是台风都可以

130
00:07:59,165 --> 00:08:04,470
只拿那个分区的数据去计算，这样的话，他是低保，相当于将哈市非保预先分

131
00:08:04,475 --> 00:08:06,660
成了好多好多个小会

132
00:08:06,750 --> 00:08:12,060
然后这这个时候他的病的哈尔滨货的流程就可以在并行化的舅舅就得了

133
00:08:12,150 --> 00:08:13,770
而这个时候，他可以

134
00:08:15,060 --> 00:08:20,370
在他论文里面，他的奔驰效果还是比较好的，就虽然他这个数据

135
00:08:20,580 --> 00:08:22,950
因为这边的数据是读了两遍

136
00:08:22,980 --> 00:08:28,290
但是也比你只读一遍，去单线程的并不他用的哈希co，有一个很大

137
00:08:28,295 --> 00:08:29,220
他的收益

138
00:08:31,800 --> 00:08:35,490
哈哈，水果里面这边就讲完了然后呢大？

139
00:08:35,495 --> 00:08:38,280
大概呢就是这这些内容我们可以

140
00:08:38,580 --> 00:08:40,650
可以稍微回顾一下他

141
00:08:41,220 --> 00:08:46,530
那个还是CF，他是怎样建立的，你如果要选哪个表的话？你应该去选哪个表建立还是？

142
00:08:47,250 --> 00:08:49,620
以及你建立哈施利波的时候

143
00:08:49,625 --> 00:08:53,460
他另一边读取数据的那个预处理是不是可以并行的？

144
00:08:53,730 --> 00:08:54,450
然后

145
00:08:54,480 --> 00:08:59,790
他说的时候就是说是说一句算是啊，这边的话就是他弟弟这边

146
00:08:59,795 --> 00:09:02,820
基本的还是若隐他做了哪一些？

147
00:09:02,850 --> 00:09:06,630
一些病情的处理，然后决定还是咒语这个算子

148
00:09:06,720 --> 00:09:11,820
是在那个基本的还是注意这个算子的基础上又做了哪些并行处理？

149
00:09:14,250 --> 00:09:15,990
咱接下来呢就是

150
00:09:16,050 --> 00:09:21,360
不是join这边他的一个基本概念以及泰迪币目前的实现流程实现性

151
00:09:21,365 --> 00:09:21,960
你看

152
00:09:22,890 --> 00:09:28,200
他他的基本概念啊，首先呢就是如果他周一的子节点传来的数据

153
00:09:28,830 --> 00:09:30,600
它是有序的时候

154
00:09:30,720 --> 00:09:33,150
那这个时候还需要建立哈市推广吗？

155
00:09:33,690 --> 00:09:35,340
他如果是有趣的话

156
00:09:35,345 --> 00:09:40,140
那显然这个时候我们可以可以考虑不去建立那个哈士奇狗

157
00:09:40,260 --> 00:09:44,880
只要只要按根据他那个有趣的顺序，我们依次比较就好了

158
00:09:44,885 --> 00:09:48,030
那整个流程的可以类比一下么？就是造成

159
00:09:48,035 --> 00:09:50,850
他那个合并两个子数组的流程

160
00:09:51,150 --> 00:09:52,110
只不过

161
00:09:52,115 --> 00:09:54,330
只不过没人受损，里面他是

162
00:09:54,390 --> 00:09:57,060
合并的时候，它是按顺序将它们

163
00:09:57,150 --> 00:09:58,920
一次放了位置，然后

164
00:09:58,925 --> 00:10:03,690
在莫氏中医这边呢，是当它们的值相同的时候做一次

165
00:10:03,695 --> 00:10:04,980
做一次那个

166
00:10:05,100 --> 00:10:10,410
啊，两个列两个行之间的病和合并让他们变成了一个行返回给上层

167
00:10:10,415 --> 00:10:11,010
烦死了

168
00:10:12,570 --> 00:10:17,790
啊这一台db这边的实现方式呢？目前实现了一个非常简单的版本

169
00:10:18,420 --> 00:10:21,840
非常简单，然后他就是一个单线程的

170
00:10:21,960 --> 00:10:23,490
大致模拟了

171
00:10:23,580 --> 00:10:26,280
刚才说的上刚才说的那个逻辑

172
00:10:26,520 --> 00:10:31,830
呃，他可能的优点的话就是它消耗内存比比较少，相对于CC

173
00:10:31,980 --> 00:10:37,290
相对还是这位，它具有并行，也要建立一个哈里森堡将阴历来的数据所全部

174
00:10:37,295 --> 00:10:37,950
全部

175
00:10:38,100 --> 00:10:40,260
全部存下来，这样

176
00:10:40,500 --> 00:10:43,860
有它的内存消耗是会少很多

177
00:10:45,720 --> 00:10:48,600
啊然后呢就是他的必中第三种

178
00:10:48,840 --> 00:10:49,830
作为你的

179
00:10:49,835 --> 00:10:50,520
贩子

180
00:10:50,610 --> 00:10:55,920
啊，就是那个那些个路费咒语，然后被呃利用索引的，而且还是那个

181
00:10:56,370 --> 00:10:58,050
分批分批去执行的

182
00:10:58,200 --> 00:11:00,330
而这边我们讲一下她那个

183
00:11:00,480 --> 00:11:04,410
它的基本概念的话，首先呢，就是最简单的那四季的六步骤

184
00:11:04,800 --> 00:11:08,040
啊他的可以看一下这个为啊，可以看一下他的伟大嘛

185
00:11:08,070 --> 00:11:12,510
在伟大嘛，就是非常简单的，我们每天从而这边拿一行

186
00:11:12,660 --> 00:11:17,970
然后再从另一边拿一下啊，看一下这两个是不是满足重要的条件？

187
00:11:18,060 --> 00:11:20,700
如果满足的话，我们就将它输出出去

188
00:11:20,910 --> 00:11:25,740
他很明显，他这个如果你你这个r这边有嗯嗯，行

189
00:11:25,890 --> 00:11:30,870
S里面有m好的话，它的复杂度就是n MM一个非常爆炸的一个复杂的

190
00:11:31,140 --> 00:11:34,020
所以它的明显就是效率非常低下的

191
00:11:34,260 --> 00:11:35,940
那这个时候如果

192
00:11:36,060 --> 00:11:38,910
S他里面这边有索引的话

193
00:11:39,180 --> 00:11:42,150
我们就可以考虑把所以用起来

194
00:11:42,420 --> 00:11:45,000
对于每一个偶尔我们去对

195
00:11:45,060 --> 00:11:47,430
对于每一个r，我们在s上

196
00:11:47,640 --> 00:11:52,950
用它做一次龈袋一起干，但是这个时候呢，它可以过滤大量无用的时候

197
00:11:52,955 --> 00:11:53,850
数据了

198
00:11:53,855 --> 00:11:57,600
但是他每一次他只返回了一条数据

199
00:11:57,810 --> 00:12:01,440
打效率还是比较低的，而且因为太低温会走

200
00:12:01,470 --> 00:12:06,780
涉及走网络这些原因，你每一次只拿一行数据的话，它的影响

201
00:12:06,785 --> 00:12:07,500
是为

202
00:12:07,505 --> 00:12:08,610
被放大的

203
00:12:08,880 --> 00:12:11,640
那这个时候，哪一个简单的处理办法？

204
00:12:11,670 --> 00:12:13,530
就是我们将他的

205
00:12:13,680 --> 00:12:18,210
每一次我们不止拿一行，我们一次可以拿一批数据

206
00:12:19,320 --> 00:12:22,320
而这个时候就是他那个80的之后的

207
00:12:22,350 --> 00:12:23,550
执行流程了

208
00:12:23,640 --> 00:12:26,220
就我们每一次拿一批数据

209
00:12:26,250 --> 00:12:27,990
打一批书记拿到之后

210
00:12:28,050 --> 00:12:28,890
啊？

211
00:12:29,430 --> 00:12:31,680
从而这边拿一批数据，然后

212
00:12:31,950 --> 00:12:37,260
用这一批数据去构造一个他的一个院子之类的，然后对着s那边去做

213
00:12:37,265 --> 00:12:42,570
一个烟那个死干，而这个时候s那边呢，也会读到一批数据啊，读到一

214
00:12:42,575 --> 00:12:44,190
T，数据这个时候他

215
00:12:44,370 --> 00:12:49,680
那个被内需要做一个处理，而这个处理的话我们用哈士周一或者用一个小的妹儿

216
00:12:49,685 --> 00:12:50,790
都可以

217
00:12:50,910 --> 00:12:55,890
就这里面做，利用哈利种隐或者墨重重，你再做一个精确的状况匹配

218
00:12:56,010 --> 00:12:57,060
这样的话

219
00:12:57,065 --> 00:12:59,850
我们就可以得到他最终的输出结果了

220
00:13:00,510 --> 00:13:01,380
咋这样？

221
00:13:02,430 --> 00:13:06,240
然后这边呢就是开立b中具体的实现方式

222
00:13:06,390 --> 00:13:09,840
那首先呢，他会去读他的奥特森从里面拿数据

223
00:13:10,080 --> 00:13:13,380
拿到数据之后，然后再分发给各个倭寇

224
00:13:14,040 --> 00:13:16,680
让他给个窝窝头，让每个窝坑呢？

225
00:13:16,980 --> 00:13:18,810
利用他自己的数据

226
00:13:19,200 --> 00:13:24,510
然后去给每一个音的卧铺，然后因为沃克这边他利用拿拿到数据

227
00:13:24,515 --> 00:13:27,360
之后再去做一个阴在此时干

228
00:13:27,510 --> 00:13:32,820
然后最后每每个因为倭寇里面也会做一个哈士，周一或者闷热中，迎来将他的

229
00:13:32,825 --> 00:13:34,350
数据聚合起来

230
00:13:34,620 --> 00:13:37,050
这样的话，最后输出给最后的答案

231
00:13:37,740 --> 00:13:38,400
啊？

232
00:13:39,510 --> 00:13:44,100
这边可以看啊，跟它相关的话是有两个参数，跟它相关的

233
00:13:44,250 --> 00:13:46,560
啊，第一个呢是他的肯卡尔斯

234
00:13:46,590 --> 00:13:49,860
他的肯尼日记决定了这边有多少个银子喔喔

235
00:13:50,340 --> 00:13:51,240
啊？

236
00:13:51,245 --> 00:13:52,830
就他这边的话

237
00:13:53,460 --> 00:13:58,770
你如果她默认只是四就是你这边默认的话，只有四个窝可

238
00:13:58,775 --> 00:14:00,120
可以去读书记

239
00:14:00,150 --> 00:14:01,770
快去快去拉出去

240
00:14:02,070 --> 00:14:05,610
然后呢，如果调大之后就可以增加它的并发度？

241
00:14:06,510 --> 00:14:09,180
那另一个呢，是他的83岁

242
00:14:09,240 --> 00:14:14,550
83岁的话，就是说你每一组每一组里面有多少行数据？

243
00:14:14,850 --> 00:14:16,590
把它默认只是25000

244
00:14:16,650 --> 00:14:17,970
那跟这个

245
00:14:18,030 --> 00:14:23,340
他开始是结合起来的话，就是你默认的话，没赌，没赌到25000

246
00:14:23,345 --> 00:14:25,860
的数据就会将这两万

247
00:14:25,865 --> 00:14:29,820
现在好像数据送到一个蜗壳里面，然后这个涡轮就开始工作了

248
00:14:30,120 --> 00:14:31,740
然后你通过调整

249
00:14:31,920 --> 00:14:34,830
调整这个塞子跟他的肯卡尔瑞斯

250
00:14:34,835 --> 00:14:39,270
可以调整你美你那个倭寇的启动时间已经你的并发度

251
00:14:39,275 --> 00:14:44,580
那实际测下来的话，他的肯定他这个赛制的话赢在大数据

252
00:14:44,585 --> 00:14:47,070
尽量的情况下，影响不是特别严重

253
00:14:47,130 --> 00:14:48,780
主要还是这个

254
00:14:48,785 --> 00:14:51,840
很他认识的他的影响效果比较明显

255
00:14:52,260 --> 00:14:56,820
啊，一般认为如果这个肯定润死以调的足够大

256
00:14:56,940 --> 00:15:02,250
啊在有索引的情况下一个应该是一个那四个录入皱纹和

257
00:15:02,255 --> 00:15:04,740
制作用它的执行时间上

258
00:15:04,745 --> 00:15:06,780
是没有太大差别的

259
00:15:06,990 --> 00:15:12,300
啊，它的内存消耗可能会稍微少一点，但是的执行时间上一般是没有差别，不会

260
00:15:12,305 --> 00:15:14,190
比哈市周一曼特别多

261
00:15:17,100 --> 00:15:18,870
啊这边呢，主要就是

262
00:15:19,230 --> 00:15:22,530
一个是它的基本概念什么是nice的鹿兆尹

263
00:15:22,650 --> 00:15:27,780
你什么是有索引的，然后是如果它加上80的时候又是什么样的形式？

264
00:15:27,870 --> 00:15:29,130
以太低币中

265
00:15:29,310 --> 00:15:31,050
那个他的执行流程

266
00:15:31,350 --> 00:15:36,660
跟他跟这个应该是用于相关的那些有哪些？C城堡外部已经每一个玩儿我的

267
00:15:37,620 --> 00:15:39,690
调查之后会有哪些影响？

268
00:15:42,300 --> 00:15:47,610
啊，那最后呢，就是几个简单场景的比较比较我们列了

269
00:15:47,820 --> 00:15:49,680
三个场景来比较一下

270
00:15:49,770 --> 00:15:54,210
这三种中影，你在美每个场景里面都应该选择哪一个？

271
00:15:55,230 --> 00:16:00,540
那首先呢，就是没有任何索引的时候，也没有任何索引的时候为之后

272
00:16:00,780 --> 00:16:02,760
因为他这边实现的比较简单

273
00:16:02,850 --> 00:16:06,330
还是个单线什么的，还要排序，那肯定就先扔掉它了

274
00:16:06,510 --> 00:16:11,310
然后因为四周隐，因为他没有索引，可以用那自然也会要把它扔掉了

275
00:16:11,430 --> 00:16:14,370
所以呢，最后呢，我们就只能选择一个哈士猪

276
00:16:14,760 --> 00:16:16,260
啊，如果这个时候

277
00:16:16,740 --> 00:16:20,850
但是一大一小两个表，然后大表上有可以用的，所以

278
00:16:21,030 --> 00:16:22,830
你如果是妹子的话

279
00:16:24,120 --> 00:16:29,430
他有所引用，说明他可以排序，但是因为它实现的比较简单，还是太慢了，所以还是

280
00:16:29,435 --> 00:16:31,050
这样版本的时候已扔掉

281
00:16:31,410 --> 00:16:36,720
但如果因为次动用的话，这个时候他她有所隐，可以用，而且它还可以用小表去查

282
00:16:36,725 --> 00:16:37,980
大表的数据

283
00:16:37,985 --> 00:16:40,080
这样的话，大概可以将大表

284
00:16:40,230 --> 00:16:41,670
非常大量的数据

285
00:16:41,940 --> 00:16:44,310
通过应该是干来直接过滤掉

286
00:16:44,550 --> 00:16:47,970
这是一个比较好的操作，然后如果是他是重要的话

287
00:16:47,975 --> 00:16:49,950
那相比今年效应可以

288
00:16:50,040 --> 00:16:55,200
啊，可以少读很多书籍来说，他需要把大表所有的书记都堵上了

289
00:16:56,460 --> 00:16:58,620
还需要把代表所有的数据都堵上了

290
00:16:58,680 --> 00:16:59,970
所以这个时候

291
00:17:00,000 --> 00:17:02,580
拿最佳的就是选择一代失踪一了

292
00:17:02,880 --> 00:17:08,190
而第三种呢，就是两个表差距都不大，然后上面有应该是作用可以

293
00:17:08,195 --> 00:17:09,270
用的所以

294
00:17:09,630 --> 00:17:14,520
然后为之后你就如前所述啊，他还是要被扔掉了，因为实在太慢了现在

295
00:17:14,850 --> 00:17:16,710
反正如果因应该是双赢的话

296
00:17:16,950 --> 00:17:21,810
他有所以可用，但是如果是默认的并发度来执行的话

297
00:17:21,870 --> 00:17:24,000
他会比他是这种隐瞒不少

298
00:17:24,030 --> 00:17:27,030
但是如果你将它的并发调大之后

299
00:17:27,180 --> 00:17:31,170
啊，你测出来的结果可能是并不会被他说说你卖多少？

300
00:17:31,470 --> 00:17:34,500
所以这种情况下，你选择一个哈士作用

301
00:17:34,505 --> 00:17:39,810
或者选择一个并发度非常高的音电视作用，在这种情况下都可以得到

302
00:17:39,815 --> 00:17:42,090
要一个比较理想的执行效果

303
00:17:44,040 --> 00:17:48,840
那什么时候选择闷着中心呢？他居然上面三个情况都满足之后你扔掉了

304
00:17:48,870 --> 00:17:50,850
啊，我们什么时候应该选择他呢？

305
00:17:51,150 --> 00:17:56,460
啊，他选择他认为一个理由呢，就是目前唯一个理由就是前面两个

306
00:17:56,465 --> 00:17:57,660
那个o mo

307
00:17:57,750 --> 00:18:03,060
我们发现他问我，我也不跑不出来，之后我们可以尝试着去选一下默认中

308
00:18:03,065 --> 00:18:08,130
看一下她在，呃，如果内存消耗少一点，能不能跑出来？

309
00:18:08,160 --> 00:18:09,270
虽然会很慢

310
00:18:12,810 --> 00:18:13,680
应该没有了

311
00:18:14,370 --> 00:18:17,190
如果有大一的话，可以去这边打野

312
00:18:21,900 --> 00:18:22,500
我不知道

